/* AlsongAPIService1SoapProxy.cpp
   Generated by gSOAP 2.8.21 from alsongapi.h

Copyright(C) 2000-2014, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#include "AlsongAPIService1SoapProxy.h"

Service1SoapProxy::Service1SoapProxy()
{	Service1SoapProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

Service1SoapProxy::Service1SoapProxy(const struct soap &_soap) : soap(_soap)
{ }

Service1SoapProxy::Service1SoapProxy(const char *url)
{	Service1SoapProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = url;
}

Service1SoapProxy::Service1SoapProxy(soap_mode iomode)
{	Service1SoapProxy_init(iomode, iomode);
}

Service1SoapProxy::Service1SoapProxy(const char *url, soap_mode iomode)
{	Service1SoapProxy_init(iomode, iomode);
	soap_endpoint = url;
}

Service1SoapProxy::Service1SoapProxy(soap_mode imode, soap_mode omode)
{	Service1SoapProxy_init(imode, omode);
}

Service1SoapProxy::~Service1SoapProxy()
{ }

void Service1SoapProxy::Service1SoapProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this, imode);
	soap_omode(this, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
	{"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"ns1", "ALSongWebServer", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap_set_namespaces(this, namespaces);
}

void Service1SoapProxy::destroy()
{	soap_destroy(this);
	soap_end(this);
}

void Service1SoapProxy::reset()
{	destroy();
	soap_done(this);
	soap_initialize(this);
	Service1SoapProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void Service1SoapProxy::soap_noheader()
{	this->header = NULL;
}

const SOAP_ENV__Header *Service1SoapProxy::soap_header()
{	return this->header;
}

const SOAP_ENV__Fault *Service1SoapProxy::soap_fault()
{	return this->fault;
}

const char *Service1SoapProxy::soap_fault_string()
{	return *soap_faultstring(this);
}

const char *Service1SoapProxy::soap_fault_detail()
{	return *soap_faultdetail(this);
}

int Service1SoapProxy::soap_close_socket()
{	return soap_closesock(this);
}

int Service1SoapProxy::soap_force_close_socket()
{	return soap_force_closesock(this);
}

void Service1SoapProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void Service1SoapProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this, os);
}
#endif

char *Service1SoapProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this, buf, len);
}
#endif

int Service1SoapProxy::GetMurekaInfo(const char *endpoint, const char *soap_action, _ns1__GetMurekaInfo *ns1__GetMurekaInfo, _ns1__GetMurekaInfoResponse &ns1__GetMurekaInfoResponse)
{	struct soap *soap = this;
	struct __ns1__GetMurekaInfo soap_tmp___ns1__GetMurekaInfo;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/GetMurekaInfo";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetMurekaInfo.ns1__GetMurekaInfo = ns1__GetMurekaInfo;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetMurekaInfo(soap, &soap_tmp___ns1__GetMurekaInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetMurekaInfo(soap, &soap_tmp___ns1__GetMurekaInfo, "-ns1:GetMurekaInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetMurekaInfo(soap, &soap_tmp___ns1__GetMurekaInfo, "-ns1:GetMurekaInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetMurekaInfoResponse)
		return soap_closesock(soap);
	ns1__GetMurekaInfoResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetMurekaInfoResponse.soap_get(soap, "ns1:GetMurekaInfoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::GetSyncLyricBySearch(const char *endpoint, const char *soap_action, _ns1__GetSyncLyricBySearch *ns1__GetSyncLyricBySearch, _ns1__GetSyncLyricBySearchResponse &ns1__GetSyncLyricBySearchResponse)
{	struct soap *soap = this;
	struct __ns1__GetSyncLyricBySearch soap_tmp___ns1__GetSyncLyricBySearch;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/GetSyncLyricBySearch";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetSyncLyricBySearch.ns1__GetSyncLyricBySearch = ns1__GetSyncLyricBySearch;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetSyncLyricBySearch(soap, &soap_tmp___ns1__GetSyncLyricBySearch);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetSyncLyricBySearch(soap, &soap_tmp___ns1__GetSyncLyricBySearch, "-ns1:GetSyncLyricBySearch", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetSyncLyricBySearch(soap, &soap_tmp___ns1__GetSyncLyricBySearch, "-ns1:GetSyncLyricBySearch", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetSyncLyricBySearchResponse)
		return soap_closesock(soap);
	ns1__GetSyncLyricBySearchResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetSyncLyricBySearchResponse.soap_get(soap, "ns1:GetSyncLyricBySearchResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::SetLinkLyric(const char *endpoint, const char *soap_action, _ns1__SetLinkLyric *ns1__SetLinkLyric, _ns1__SetLinkLyricResponse &ns1__SetLinkLyricResponse)
{	struct soap *soap = this;
	struct __ns1__SetLinkLyric soap_tmp___ns1__SetLinkLyric;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/SetLinkLyric";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__SetLinkLyric.ns1__SetLinkLyric = ns1__SetLinkLyric;
	soap_serializeheader(soap);
	soap_serialize___ns1__SetLinkLyric(soap, &soap_tmp___ns1__SetLinkLyric);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetLinkLyric(soap, &soap_tmp___ns1__SetLinkLyric, "-ns1:SetLinkLyric", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetLinkLyric(soap, &soap_tmp___ns1__SetLinkLyric, "-ns1:SetLinkLyric", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__SetLinkLyricResponse)
		return soap_closesock(soap);
	ns1__SetLinkLyricResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetLinkLyricResponse.soap_get(soap, "ns1:SetLinkLyricResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::GetResembleLyric2(const char *endpoint, const char *soap_action, _ns1__GetResembleLyric2 *ns1__GetResembleLyric2, _ns1__GetResembleLyric2Response &ns1__GetResembleLyric2Response)
{	struct soap *soap = this;
	struct __ns1__GetResembleLyric2 soap_tmp___ns1__GetResembleLyric2;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/GetResembleLyric2";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetResembleLyric2.ns1__GetResembleLyric2 = ns1__GetResembleLyric2;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetResembleLyric2(soap, &soap_tmp___ns1__GetResembleLyric2);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetResembleLyric2(soap, &soap_tmp___ns1__GetResembleLyric2, "-ns1:GetResembleLyric2", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetResembleLyric2(soap, &soap_tmp___ns1__GetResembleLyric2, "-ns1:GetResembleLyric2", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetResembleLyric2Response)
		return soap_closesock(soap);
	ns1__GetResembleLyric2Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetResembleLyric2Response.soap_get(soap, "ns1:GetResembleLyric2Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::GetResembleLyric3(const char *endpoint, const char *soap_action, _ns1__GetResembleLyric3 *ns1__GetResembleLyric3, _ns1__GetResembleLyric3Response &ns1__GetResembleLyric3Response)
{	struct soap *soap = this;
	struct __ns1__GetResembleLyric3 soap_tmp___ns1__GetResembleLyric3;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/GetResembleLyric3";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetResembleLyric3.ns1__GetResembleLyric3 = ns1__GetResembleLyric3;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetResembleLyric3(soap, &soap_tmp___ns1__GetResembleLyric3);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetResembleLyric3(soap, &soap_tmp___ns1__GetResembleLyric3, "-ns1:GetResembleLyric3", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetResembleLyric3(soap, &soap_tmp___ns1__GetResembleLyric3, "-ns1:GetResembleLyric3", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetResembleLyric3Response)
		return soap_closesock(soap);
	ns1__GetResembleLyric3Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetResembleLyric3Response.soap_get(soap, "ns1:GetResembleLyric3Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::GetResembleLyric2Count(const char *endpoint, const char *soap_action, _ns1__GetResembleLyric2Count *ns1__GetResembleLyric2Count, _ns1__GetResembleLyric2CountResponse &ns1__GetResembleLyric2CountResponse)
{	struct soap *soap = this;
	struct __ns1__GetResembleLyric2Count soap_tmp___ns1__GetResembleLyric2Count;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/GetResembleLyric2Count";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetResembleLyric2Count.ns1__GetResembleLyric2Count = ns1__GetResembleLyric2Count;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetResembleLyric2Count(soap, &soap_tmp___ns1__GetResembleLyric2Count);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetResembleLyric2Count(soap, &soap_tmp___ns1__GetResembleLyric2Count, "-ns1:GetResembleLyric2Count", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetResembleLyric2Count(soap, &soap_tmp___ns1__GetResembleLyric2Count, "-ns1:GetResembleLyric2Count", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetResembleLyric2CountResponse)
		return soap_closesock(soap);
	ns1__GetResembleLyric2CountResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetResembleLyric2CountResponse.soap_get(soap, "ns1:GetResembleLyric2CountResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::GetResembleLyric2CountTest(const char *endpoint, const char *soap_action, _ns1__GetResembleLyric2CountTest *ns1__GetResembleLyric2CountTest, _ns1__GetResembleLyric2CountTestResponse &ns1__GetResembleLyric2CountTestResponse)
{	struct soap *soap = this;
	struct __ns1__GetResembleLyric2CountTest soap_tmp___ns1__GetResembleLyric2CountTest;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/GetResembleLyric2CountTest";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetResembleLyric2CountTest.ns1__GetResembleLyric2CountTest = ns1__GetResembleLyric2CountTest;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetResembleLyric2CountTest(soap, &soap_tmp___ns1__GetResembleLyric2CountTest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetResembleLyric2CountTest(soap, &soap_tmp___ns1__GetResembleLyric2CountTest, "-ns1:GetResembleLyric2CountTest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetResembleLyric2CountTest(soap, &soap_tmp___ns1__GetResembleLyric2CountTest, "-ns1:GetResembleLyric2CountTest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetResembleLyric2CountTestResponse)
		return soap_closesock(soap);
	ns1__GetResembleLyric2CountTestResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetResembleLyric2CountTestResponse.soap_get(soap, "ns1:GetResembleLyric2CountTestResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::UploadLyric(const char *endpoint, const char *soap_action, _ns1__UploadLyric *ns1__UploadLyric, _ns1__UploadLyricResponse &ns1__UploadLyricResponse)
{	struct soap *soap = this;
	struct __ns1__UploadLyric soap_tmp___ns1__UploadLyric;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/UploadLyric";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__UploadLyric.ns1__UploadLyric = ns1__UploadLyric;
	soap_serializeheader(soap);
	soap_serialize___ns1__UploadLyric(soap, &soap_tmp___ns1__UploadLyric);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__UploadLyric(soap, &soap_tmp___ns1__UploadLyric, "-ns1:UploadLyric", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__UploadLyric(soap, &soap_tmp___ns1__UploadLyric, "-ns1:UploadLyric", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__UploadLyricResponse)
		return soap_closesock(soap);
	ns1__UploadLyricResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__UploadLyricResponse.soap_get(soap, "ns1:UploadLyricResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::ReportFaultLyricWithComment(const char *endpoint, const char *soap_action, _ns1__ReportFaultLyricWithComment *ns1__ReportFaultLyricWithComment, _ns1__ReportFaultLyricWithCommentResponse &ns1__ReportFaultLyricWithCommentResponse)
{	struct soap *soap = this;
	struct __ns1__ReportFaultLyricWithComment soap_tmp___ns1__ReportFaultLyricWithComment;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/ReportFaultLyricWithComment";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__ReportFaultLyricWithComment.ns1__ReportFaultLyricWithComment = ns1__ReportFaultLyricWithComment;
	soap_serializeheader(soap);
	soap_serialize___ns1__ReportFaultLyricWithComment(soap, &soap_tmp___ns1__ReportFaultLyricWithComment);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__ReportFaultLyricWithComment(soap, &soap_tmp___ns1__ReportFaultLyricWithComment, "-ns1:ReportFaultLyricWithComment", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__ReportFaultLyricWithComment(soap, &soap_tmp___ns1__ReportFaultLyricWithComment, "-ns1:ReportFaultLyricWithComment", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__ReportFaultLyricWithCommentResponse)
		return soap_closesock(soap);
	ns1__ReportFaultLyricWithCommentResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ReportFaultLyricWithCommentResponse.soap_get(soap, "ns1:ReportFaultLyricWithCommentResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::ReportFaultLyric2(const char *endpoint, const char *soap_action, _ns1__ReportFaultLyric2 *ns1__ReportFaultLyric2, _ns1__ReportFaultLyric2Response &ns1__ReportFaultLyric2Response)
{	struct soap *soap = this;
	struct __ns1__ReportFaultLyric2 soap_tmp___ns1__ReportFaultLyric2;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/ReportFaultLyric2";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__ReportFaultLyric2.ns1__ReportFaultLyric2 = ns1__ReportFaultLyric2;
	soap_serializeheader(soap);
	soap_serialize___ns1__ReportFaultLyric2(soap, &soap_tmp___ns1__ReportFaultLyric2);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__ReportFaultLyric2(soap, &soap_tmp___ns1__ReportFaultLyric2, "-ns1:ReportFaultLyric2", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__ReportFaultLyric2(soap, &soap_tmp___ns1__ReportFaultLyric2, "-ns1:ReportFaultLyric2", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__ReportFaultLyric2Response)
		return soap_closesock(soap);
	ns1__ReportFaultLyric2Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ReportFaultLyric2Response.soap_get(soap, "ns1:ReportFaultLyric2Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::ReportRecommendationLyric(const char *endpoint, const char *soap_action, _ns1__ReportRecommendationLyric *ns1__ReportRecommendationLyric, _ns1__ReportRecommendationLyricResponse &ns1__ReportRecommendationLyricResponse)
{	struct soap *soap = this;
	struct __ns1__ReportRecommendationLyric soap_tmp___ns1__ReportRecommendationLyric;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/ReportRecommendationLyric";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__ReportRecommendationLyric.ns1__ReportRecommendationLyric = ns1__ReportRecommendationLyric;
	soap_serializeheader(soap);
	soap_serialize___ns1__ReportRecommendationLyric(soap, &soap_tmp___ns1__ReportRecommendationLyric);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__ReportRecommendationLyric(soap, &soap_tmp___ns1__ReportRecommendationLyric, "-ns1:ReportRecommendationLyric", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__ReportRecommendationLyric(soap, &soap_tmp___ns1__ReportRecommendationLyric, "-ns1:ReportRecommendationLyric", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__ReportRecommendationLyricResponse)
		return soap_closesock(soap);
	ns1__ReportRecommendationLyricResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ReportRecommendationLyricResponse.soap_get(soap, "ns1:ReportRecommendationLyricResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::IsReportedRecommendationLyric(const char *endpoint, const char *soap_action, _ns1__IsReportedRecommendationLyric *ns1__IsReportedRecommendationLyric, _ns1__IsReportedRecommendationLyricResponse &ns1__IsReportedRecommendationLyricResponse)
{	struct soap *soap = this;
	struct __ns1__IsReportedRecommendationLyric soap_tmp___ns1__IsReportedRecommendationLyric;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/IsReportedRecommendationLyric";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__IsReportedRecommendationLyric.ns1__IsReportedRecommendationLyric = ns1__IsReportedRecommendationLyric;
	soap_serializeheader(soap);
	soap_serialize___ns1__IsReportedRecommendationLyric(soap, &soap_tmp___ns1__IsReportedRecommendationLyric);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__IsReportedRecommendationLyric(soap, &soap_tmp___ns1__IsReportedRecommendationLyric, "-ns1:IsReportedRecommendationLyric", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__IsReportedRecommendationLyric(soap, &soap_tmp___ns1__IsReportedRecommendationLyric, "-ns1:IsReportedRecommendationLyric", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__IsReportedRecommendationLyricResponse)
		return soap_closesock(soap);
	ns1__IsReportedRecommendationLyricResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__IsReportedRecommendationLyricResponse.soap_get(soap, "ns1:IsReportedRecommendationLyricResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::IsReportedFaultLyric(const char *endpoint, const char *soap_action, _ns1__IsReportedFaultLyric *ns1__IsReportedFaultLyric, _ns1__IsReportedFaultLyricResponse &ns1__IsReportedFaultLyricResponse)
{	struct soap *soap = this;
	struct __ns1__IsReportedFaultLyric soap_tmp___ns1__IsReportedFaultLyric;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/IsReportedFaultLyric";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__IsReportedFaultLyric.ns1__IsReportedFaultLyric = ns1__IsReportedFaultLyric;
	soap_serializeheader(soap);
	soap_serialize___ns1__IsReportedFaultLyric(soap, &soap_tmp___ns1__IsReportedFaultLyric);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__IsReportedFaultLyric(soap, &soap_tmp___ns1__IsReportedFaultLyric, "-ns1:IsReportedFaultLyric", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__IsReportedFaultLyric(soap, &soap_tmp___ns1__IsReportedFaultLyric, "-ns1:IsReportedFaultLyric", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__IsReportedFaultLyricResponse)
		return soap_closesock(soap);
	ns1__IsReportedFaultLyricResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__IsReportedFaultLyricResponse.soap_get(soap, "ns1:IsReportedFaultLyricResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::GetLyric3(const char *endpoint, const char *soap_action, _ns1__GetLyric3 *ns1__GetLyric3, _ns1__GetLyric3Response &ns1__GetLyric3Response)
{	struct soap *soap = this;
	struct __ns1__GetLyric3 soap_tmp___ns1__GetLyric3;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/GetLyric3";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetLyric3.ns1__GetLyric3 = ns1__GetLyric3;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetLyric3(soap, &soap_tmp___ns1__GetLyric3);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetLyric3(soap, &soap_tmp___ns1__GetLyric3, "-ns1:GetLyric3", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetLyric3(soap, &soap_tmp___ns1__GetLyric3, "-ns1:GetLyric3", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetLyric3Response)
		return soap_closesock(soap);
	ns1__GetLyric3Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetLyric3Response.soap_get(soap, "ns1:GetLyric3Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::GetLyric4(const char *endpoint, const char *soap_action, _ns1__GetLyric4 *ns1__GetLyric4, _ns1__GetLyric4Response &ns1__GetLyric4Response)
{	struct soap *soap = this;
	struct __ns1__GetLyric4 soap_tmp___ns1__GetLyric4;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/GetLyric4";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetLyric4.ns1__GetLyric4 = ns1__GetLyric4;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetLyric4(soap, &soap_tmp___ns1__GetLyric4);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetLyric4(soap, &soap_tmp___ns1__GetLyric4, "-ns1:GetLyric4", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetLyric4(soap, &soap_tmp___ns1__GetLyric4, "-ns1:GetLyric4", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetLyric4Response)
		return soap_closesock(soap);
	ns1__GetLyric4Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetLyric4Response.soap_get(soap, "ns1:GetLyric4Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::GetLyric5(const char *endpoint, const char *soap_action, _ns1__GetLyric5 *ns1__GetLyric5, _ns1__GetLyric5Response &ns1__GetLyric5Response)
{	struct soap *soap = this;
	struct __ns1__GetLyric5 soap_tmp___ns1__GetLyric5;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/GetLyric5";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetLyric5.ns1__GetLyric5 = ns1__GetLyric5;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetLyric5(soap, &soap_tmp___ns1__GetLyric5);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetLyric5(soap, &soap_tmp___ns1__GetLyric5, "-ns1:GetLyric5", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetLyric5(soap, &soap_tmp___ns1__GetLyric5, "-ns1:GetLyric5", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetLyric5Response)
		return soap_closesock(soap);
	ns1__GetLyric5Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetLyric5Response.soap_get(soap, "ns1:GetLyric5Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::GetLyric6(const char *endpoint, const char *soap_action, _ns1__GetLyric6 *ns1__GetLyric6, _ns1__GetLyric6Response &ns1__GetLyric6Response)
{	struct soap *soap = this;
	struct __ns1__GetLyric6 soap_tmp___ns1__GetLyric6;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/GetLyric6";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetLyric6.ns1__GetLyric6 = ns1__GetLyric6;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetLyric6(soap, &soap_tmp___ns1__GetLyric6);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetLyric6(soap, &soap_tmp___ns1__GetLyric6, "-ns1:GetLyric6", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetLyric6(soap, &soap_tmp___ns1__GetLyric6, "-ns1:GetLyric6", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetLyric6Response)
		return soap_closesock(soap);
	ns1__GetLyric6Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetLyric6Response.soap_get(soap, "ns1:GetLyric6Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::GetLyric7(const char *endpoint, const char *soap_action, _ns1__GetLyric7 *ns1__GetLyric7, _ns1__GetLyric7Response &ns1__GetLyric7Response)
{	struct soap *soap = this;
	struct __ns1__GetLyric7 soap_tmp___ns1__GetLyric7;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/GetLyric7";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetLyric7.ns1__GetLyric7 = ns1__GetLyric7;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetLyric7(soap, &soap_tmp___ns1__GetLyric7);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetLyric7(soap, &soap_tmp___ns1__GetLyric7, "-ns1:GetLyric7", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetLyric7(soap, &soap_tmp___ns1__GetLyric7, "-ns1:GetLyric7", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetLyric7Response)
		return soap_closesock(soap);
	ns1__GetLyric7Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetLyric7Response.soap_get(soap, "ns1:GetLyric7Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::GetLyric8(const char *endpoint, const char *soap_action, _ns1__GetLyric8 *ns1__GetLyric8, _ns1__GetLyric8Response &ns1__GetLyric8Response)
{	struct soap *soap = this;
	struct __ns1__GetLyric8 soap_tmp___ns1__GetLyric8;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/GetLyric8";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetLyric8.ns1__GetLyric8 = ns1__GetLyric8;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetLyric8(soap, &soap_tmp___ns1__GetLyric8);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetLyric8(soap, &soap_tmp___ns1__GetLyric8, "-ns1:GetLyric8", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetLyric8(soap, &soap_tmp___ns1__GetLyric8, "-ns1:GetLyric8", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetLyric8Response)
		return soap_closesock(soap);
	ns1__GetLyric8Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetLyric8Response.soap_get(soap, "ns1:GetLyric8Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::GetSongID(const char *endpoint, const char *soap_action, _ns1__GetSongID *ns1__GetSongID, _ns1__GetSongIDResponse &ns1__GetSongIDResponse)
{	struct soap *soap = this;
	struct __ns1__GetSongID soap_tmp___ns1__GetSongID;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/GetSongID";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetSongID.ns1__GetSongID = ns1__GetSongID;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetSongID(soap, &soap_tmp___ns1__GetSongID);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetSongID(soap, &soap_tmp___ns1__GetSongID, "-ns1:GetSongID", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetSongID(soap, &soap_tmp___ns1__GetSongID, "-ns1:GetSongID", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetSongIDResponse)
		return soap_closesock(soap);
	ns1__GetSongIDResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetSongIDResponse.soap_get(soap, "ns1:GetSongIDResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::AdminGetLyricList(const char *endpoint, const char *soap_action, _ns1__AdminGetLyricList *ns1__AdminGetLyricList, _ns1__AdminGetLyricListResponse &ns1__AdminGetLyricListResponse)
{	struct soap *soap = this;
	struct __ns1__AdminGetLyricList soap_tmp___ns1__AdminGetLyricList;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/AdminGetLyricList";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AdminGetLyricList.ns1__AdminGetLyricList = ns1__AdminGetLyricList;
	soap_serializeheader(soap);
	soap_serialize___ns1__AdminGetLyricList(soap, &soap_tmp___ns1__AdminGetLyricList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AdminGetLyricList(soap, &soap_tmp___ns1__AdminGetLyricList, "-ns1:AdminGetLyricList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AdminGetLyricList(soap, &soap_tmp___ns1__AdminGetLyricList, "-ns1:AdminGetLyricList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AdminGetLyricListResponse)
		return soap_closesock(soap);
	ns1__AdminGetLyricListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AdminGetLyricListResponse.soap_get(soap, "ns1:AdminGetLyricListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::AdminGetLyricListByID(const char *endpoint, const char *soap_action, _ns1__AdminGetLyricListByID *ns1__AdminGetLyricListByID, _ns1__AdminGetLyricListByIDResponse &ns1__AdminGetLyricListByIDResponse)
{	struct soap *soap = this;
	struct __ns1__AdminGetLyricListByID soap_tmp___ns1__AdminGetLyricListByID;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/AdminGetLyricListByID";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AdminGetLyricListByID.ns1__AdminGetLyricListByID = ns1__AdminGetLyricListByID;
	soap_serializeheader(soap);
	soap_serialize___ns1__AdminGetLyricListByID(soap, &soap_tmp___ns1__AdminGetLyricListByID);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AdminGetLyricListByID(soap, &soap_tmp___ns1__AdminGetLyricListByID, "-ns1:AdminGetLyricListByID", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AdminGetLyricListByID(soap, &soap_tmp___ns1__AdminGetLyricListByID, "-ns1:AdminGetLyricListByID", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AdminGetLyricListByIDResponse)
		return soap_closesock(soap);
	ns1__AdminGetLyricListByIDResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AdminGetLyricListByIDResponse.soap_get(soap, "ns1:AdminGetLyricListByIDResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::AdminGetReportFaultList(const char *endpoint, const char *soap_action, _ns1__AdminGetReportFaultList *ns1__AdminGetReportFaultList, _ns1__AdminGetReportFaultListResponse &ns1__AdminGetReportFaultListResponse)
{	struct soap *soap = this;
	struct __ns1__AdminGetReportFaultList soap_tmp___ns1__AdminGetReportFaultList;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/AdminGetReportFaultList";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AdminGetReportFaultList.ns1__AdminGetReportFaultList = ns1__AdminGetReportFaultList;
	soap_serializeheader(soap);
	soap_serialize___ns1__AdminGetReportFaultList(soap, &soap_tmp___ns1__AdminGetReportFaultList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AdminGetReportFaultList(soap, &soap_tmp___ns1__AdminGetReportFaultList, "-ns1:AdminGetReportFaultList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AdminGetReportFaultList(soap, &soap_tmp___ns1__AdminGetReportFaultList, "-ns1:AdminGetReportFaultList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AdminGetReportFaultListResponse)
		return soap_closesock(soap);
	ns1__AdminGetReportFaultListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AdminGetReportFaultListResponse.soap_get(soap, "ns1:AdminGetReportFaultListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::AdminGetModifyList(const char *endpoint, const char *soap_action, _ns1__AdminGetModifyList *ns1__AdminGetModifyList, _ns1__AdminGetModifyListResponse &ns1__AdminGetModifyListResponse)
{	struct soap *soap = this;
	struct __ns1__AdminGetModifyList soap_tmp___ns1__AdminGetModifyList;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/AdminGetModifyList";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AdminGetModifyList.ns1__AdminGetModifyList = ns1__AdminGetModifyList;
	soap_serializeheader(soap);
	soap_serialize___ns1__AdminGetModifyList(soap, &soap_tmp___ns1__AdminGetModifyList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AdminGetModifyList(soap, &soap_tmp___ns1__AdminGetModifyList, "-ns1:AdminGetModifyList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AdminGetModifyList(soap, &soap_tmp___ns1__AdminGetModifyList, "-ns1:AdminGetModifyList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AdminGetModifyListResponse)
		return soap_closesock(soap);
	ns1__AdminGetModifyListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AdminGetModifyListResponse.soap_get(soap, "ns1:AdminGetModifyListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::AdminGetRegisterList(const char *endpoint, const char *soap_action, _ns1__AdminGetRegisterList *ns1__AdminGetRegisterList, _ns1__AdminGetRegisterListResponse &ns1__AdminGetRegisterListResponse)
{	struct soap *soap = this;
	struct __ns1__AdminGetRegisterList soap_tmp___ns1__AdminGetRegisterList;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/AdminGetRegisterList";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AdminGetRegisterList.ns1__AdminGetRegisterList = ns1__AdminGetRegisterList;
	soap_serializeheader(soap);
	soap_serialize___ns1__AdminGetRegisterList(soap, &soap_tmp___ns1__AdminGetRegisterList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AdminGetRegisterList(soap, &soap_tmp___ns1__AdminGetRegisterList, "-ns1:AdminGetRegisterList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AdminGetRegisterList(soap, &soap_tmp___ns1__AdminGetRegisterList, "-ns1:AdminGetRegisterList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AdminGetRegisterListResponse)
		return soap_closesock(soap);
	ns1__AdminGetRegisterListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AdminGetRegisterListResponse.soap_get(soap, "ns1:AdminGetRegisterListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::MemberAddMember(const char *endpoint, const char *soap_action, _ns1__MemberAddMember *ns1__MemberAddMember, _ns1__MemberAddMemberResponse &ns1__MemberAddMemberResponse)
{	struct soap *soap = this;
	struct __ns1__MemberAddMember soap_tmp___ns1__MemberAddMember;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/MemberAddMember";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__MemberAddMember.ns1__MemberAddMember = ns1__MemberAddMember;
	soap_serializeheader(soap);
	soap_serialize___ns1__MemberAddMember(soap, &soap_tmp___ns1__MemberAddMember);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__MemberAddMember(soap, &soap_tmp___ns1__MemberAddMember, "-ns1:MemberAddMember", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__MemberAddMember(soap, &soap_tmp___ns1__MemberAddMember, "-ns1:MemberAddMember", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__MemberAddMemberResponse)
		return soap_closesock(soap);
	ns1__MemberAddMemberResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__MemberAddMemberResponse.soap_get(soap, "ns1:MemberAddMemberResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::MemberModifyMember(const char *endpoint, const char *soap_action, _ns1__MemberModifyMember *ns1__MemberModifyMember, _ns1__MemberModifyMemberResponse &ns1__MemberModifyMemberResponse)
{	struct soap *soap = this;
	struct __ns1__MemberModifyMember soap_tmp___ns1__MemberModifyMember;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/MemberModifyMember";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__MemberModifyMember.ns1__MemberModifyMember = ns1__MemberModifyMember;
	soap_serializeheader(soap);
	soap_serialize___ns1__MemberModifyMember(soap, &soap_tmp___ns1__MemberModifyMember);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__MemberModifyMember(soap, &soap_tmp___ns1__MemberModifyMember, "-ns1:MemberModifyMember", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__MemberModifyMember(soap, &soap_tmp___ns1__MemberModifyMember, "-ns1:MemberModifyMember", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__MemberModifyMemberResponse)
		return soap_closesock(soap);
	ns1__MemberModifyMemberResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__MemberModifyMemberResponse.soap_get(soap, "ns1:MemberModifyMemberResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::MemberRemoveMember(const char *endpoint, const char *soap_action, _ns1__MemberRemoveMember *ns1__MemberRemoveMember, _ns1__MemberRemoveMemberResponse &ns1__MemberRemoveMemberResponse)
{	struct soap *soap = this;
	struct __ns1__MemberRemoveMember soap_tmp___ns1__MemberRemoveMember;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/MemberRemoveMember";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__MemberRemoveMember.ns1__MemberRemoveMember = ns1__MemberRemoveMember;
	soap_serializeheader(soap);
	soap_serialize___ns1__MemberRemoveMember(soap, &soap_tmp___ns1__MemberRemoveMember);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__MemberRemoveMember(soap, &soap_tmp___ns1__MemberRemoveMember, "-ns1:MemberRemoveMember", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__MemberRemoveMember(soap, &soap_tmp___ns1__MemberRemoveMember, "-ns1:MemberRemoveMember", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__MemberRemoveMemberResponse)
		return soap_closesock(soap);
	ns1__MemberRemoveMemberResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__MemberRemoveMemberResponse.soap_get(soap, "ns1:MemberRemoveMemberResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::MemberLogin(const char *endpoint, const char *soap_action, _ns1__MemberLogin *ns1__MemberLogin, _ns1__MemberLoginResponse &ns1__MemberLoginResponse)
{	struct soap *soap = this;
	struct __ns1__MemberLogin soap_tmp___ns1__MemberLogin;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/MemberLogin";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__MemberLogin.ns1__MemberLogin = ns1__MemberLogin;
	soap_serializeheader(soap);
	soap_serialize___ns1__MemberLogin(soap, &soap_tmp___ns1__MemberLogin);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__MemberLogin(soap, &soap_tmp___ns1__MemberLogin, "-ns1:MemberLogin", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__MemberLogin(soap, &soap_tmp___ns1__MemberLogin, "-ns1:MemberLogin", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__MemberLoginResponse)
		return soap_closesock(soap);
	ns1__MemberLoginResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__MemberLoginResponse.soap_get(soap, "ns1:MemberLoginResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::MemberLogout(const char *endpoint, const char *soap_action, _ns1__MemberLogout *ns1__MemberLogout, _ns1__MemberLogoutResponse &ns1__MemberLogoutResponse)
{	struct soap *soap = this;
	struct __ns1__MemberLogout soap_tmp___ns1__MemberLogout;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/MemberLogout";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__MemberLogout.ns1__MemberLogout = ns1__MemberLogout;
	soap_serializeheader(soap);
	soap_serialize___ns1__MemberLogout(soap, &soap_tmp___ns1__MemberLogout);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__MemberLogout(soap, &soap_tmp___ns1__MemberLogout, "-ns1:MemberLogout", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__MemberLogout(soap, &soap_tmp___ns1__MemberLogout, "-ns1:MemberLogout", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__MemberLogoutResponse)
		return soap_closesock(soap);
	ns1__MemberLogoutResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__MemberLogoutResponse.soap_get(soap, "ns1:MemberLogoutResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::MemberApplyRegistration(const char *endpoint, const char *soap_action, _ns1__MemberApplyRegistration *ns1__MemberApplyRegistration, _ns1__MemberApplyRegistrationResponse &ns1__MemberApplyRegistrationResponse)
{	struct soap *soap = this;
	struct __ns1__MemberApplyRegistration soap_tmp___ns1__MemberApplyRegistration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/MemberApplyRegistration";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__MemberApplyRegistration.ns1__MemberApplyRegistration = ns1__MemberApplyRegistration;
	soap_serializeheader(soap);
	soap_serialize___ns1__MemberApplyRegistration(soap, &soap_tmp___ns1__MemberApplyRegistration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__MemberApplyRegistration(soap, &soap_tmp___ns1__MemberApplyRegistration, "-ns1:MemberApplyRegistration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__MemberApplyRegistration(soap, &soap_tmp___ns1__MemberApplyRegistration, "-ns1:MemberApplyRegistration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__MemberApplyRegistrationResponse)
		return soap_closesock(soap);
	ns1__MemberApplyRegistrationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__MemberApplyRegistrationResponse.soap_get(soap, "ns1:MemberApplyRegistrationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::MemberModifyMemberLicense(const char *endpoint, const char *soap_action, _ns1__MemberModifyMemberLicense *ns1__MemberModifyMemberLicense, _ns1__MemberModifyMemberLicenseResponse &ns1__MemberModifyMemberLicenseResponse)
{	struct soap *soap = this;
	struct __ns1__MemberModifyMemberLicense soap_tmp___ns1__MemberModifyMemberLicense;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/MemberModifyMemberLicense";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__MemberModifyMemberLicense.ns1__MemberModifyMemberLicense = ns1__MemberModifyMemberLicense;
	soap_serializeheader(soap);
	soap_serialize___ns1__MemberModifyMemberLicense(soap, &soap_tmp___ns1__MemberModifyMemberLicense);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__MemberModifyMemberLicense(soap, &soap_tmp___ns1__MemberModifyMemberLicense, "-ns1:MemberModifyMemberLicense", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__MemberModifyMemberLicense(soap, &soap_tmp___ns1__MemberModifyMemberLicense, "-ns1:MemberModifyMemberLicense", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__MemberModifyMemberLicenseResponse)
		return soap_closesock(soap);
	ns1__MemberModifyMemberLicenseResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__MemberModifyMemberLicenseResponse.soap_get(soap, "ns1:MemberModifyMemberLicenseResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::MemberGetMemberList(const char *endpoint, const char *soap_action, _ns1__MemberGetMemberList *ns1__MemberGetMemberList, _ns1__MemberGetMemberListResponse &ns1__MemberGetMemberListResponse)
{	struct soap *soap = this;
	struct __ns1__MemberGetMemberList soap_tmp___ns1__MemberGetMemberList;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/MemberGetMemberList";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__MemberGetMemberList.ns1__MemberGetMemberList = ns1__MemberGetMemberList;
	soap_serializeheader(soap);
	soap_serialize___ns1__MemberGetMemberList(soap, &soap_tmp___ns1__MemberGetMemberList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__MemberGetMemberList(soap, &soap_tmp___ns1__MemberGetMemberList, "-ns1:MemberGetMemberList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__MemberGetMemberList(soap, &soap_tmp___ns1__MemberGetMemberList, "-ns1:MemberGetMemberList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__MemberGetMemberListResponse)
		return soap_closesock(soap);
	ns1__MemberGetMemberListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__MemberGetMemberListResponse.soap_get(soap, "ns1:MemberGetMemberListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::MemberGetMemberLicenseList(const char *endpoint, const char *soap_action, _ns1__MemberGetMemberLicenseList *ns1__MemberGetMemberLicenseList, _ns1__MemberGetMemberLicenseListResponse &ns1__MemberGetMemberLicenseListResponse)
{	struct soap *soap = this;
	struct __ns1__MemberGetMemberLicenseList soap_tmp___ns1__MemberGetMemberLicenseList;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/MemberGetMemberLicenseList";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__MemberGetMemberLicenseList.ns1__MemberGetMemberLicenseList = ns1__MemberGetMemberLicenseList;
	soap_serializeheader(soap);
	soap_serialize___ns1__MemberGetMemberLicenseList(soap, &soap_tmp___ns1__MemberGetMemberLicenseList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__MemberGetMemberLicenseList(soap, &soap_tmp___ns1__MemberGetMemberLicenseList, "-ns1:MemberGetMemberLicenseList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__MemberGetMemberLicenseList(soap, &soap_tmp___ns1__MemberGetMemberLicenseList, "-ns1:MemberGetMemberLicenseList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__MemberGetMemberLicenseListResponse)
		return soap_closesock(soap);
	ns1__MemberGetMemberLicenseListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__MemberGetMemberLicenseListResponse.soap_get(soap, "ns1:MemberGetMemberLicenseListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::AdminDeleteRecord(const char *endpoint, const char *soap_action, _ns1__AdminDeleteRecord *ns1__AdminDeleteRecord, _ns1__AdminDeleteRecordResponse &ns1__AdminDeleteRecordResponse)
{	struct soap *soap = this;
	struct __ns1__AdminDeleteRecord soap_tmp___ns1__AdminDeleteRecord;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/AdminDeleteRecord";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AdminDeleteRecord.ns1__AdminDeleteRecord = ns1__AdminDeleteRecord;
	soap_serializeheader(soap);
	soap_serialize___ns1__AdminDeleteRecord(soap, &soap_tmp___ns1__AdminDeleteRecord);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AdminDeleteRecord(soap, &soap_tmp___ns1__AdminDeleteRecord, "-ns1:AdminDeleteRecord", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AdminDeleteRecord(soap, &soap_tmp___ns1__AdminDeleteRecord, "-ns1:AdminDeleteRecord", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AdminDeleteRecordResponse)
		return soap_closesock(soap);
	ns1__AdminDeleteRecordResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AdminDeleteRecordResponse.soap_get(soap, "ns1:AdminDeleteRecordResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::AdminAdmitModifyLyric(const char *endpoint, const char *soap_action, _ns1__AdminAdmitModifyLyric *ns1__AdminAdmitModifyLyric, _ns1__AdminAdmitModifyLyricResponse &ns1__AdminAdmitModifyLyricResponse)
{	struct soap *soap = this;
	struct __ns1__AdminAdmitModifyLyric soap_tmp___ns1__AdminAdmitModifyLyric;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/AdminAdmitModifyLyric";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AdminAdmitModifyLyric.ns1__AdminAdmitModifyLyric = ns1__AdminAdmitModifyLyric;
	soap_serializeheader(soap);
	soap_serialize___ns1__AdminAdmitModifyLyric(soap, &soap_tmp___ns1__AdminAdmitModifyLyric);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AdminAdmitModifyLyric(soap, &soap_tmp___ns1__AdminAdmitModifyLyric, "-ns1:AdminAdmitModifyLyric", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AdminAdmitModifyLyric(soap, &soap_tmp___ns1__AdminAdmitModifyLyric, "-ns1:AdminAdmitModifyLyric", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AdminAdmitModifyLyricResponse)
		return soap_closesock(soap);
	ns1__AdminAdmitModifyLyricResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AdminAdmitModifyLyricResponse.soap_get(soap, "ns1:AdminAdmitModifyLyricResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::AdminReportBlackList(const char *endpoint, const char *soap_action, _ns1__AdminReportBlackList *ns1__AdminReportBlackList, _ns1__AdminReportBlackListResponse &ns1__AdminReportBlackListResponse)
{	struct soap *soap = this;
	struct __ns1__AdminReportBlackList soap_tmp___ns1__AdminReportBlackList;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/AdminReportBlackList";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AdminReportBlackList.ns1__AdminReportBlackList = ns1__AdminReportBlackList;
	soap_serializeheader(soap);
	soap_serialize___ns1__AdminReportBlackList(soap, &soap_tmp___ns1__AdminReportBlackList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AdminReportBlackList(soap, &soap_tmp___ns1__AdminReportBlackList, "-ns1:AdminReportBlackList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AdminReportBlackList(soap, &soap_tmp___ns1__AdminReportBlackList, "-ns1:AdminReportBlackList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AdminReportBlackListResponse)
		return soap_closesock(soap);
	ns1__AdminReportBlackListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AdminReportBlackListResponse.soap_get(soap, "ns1:AdminReportBlackListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::AdminGetCountInRegister(const char *endpoint, const char *soap_action, _ns1__AdminGetCountInRegister *ns1__AdminGetCountInRegister, _ns1__AdminGetCountInRegisterResponse &ns1__AdminGetCountInRegisterResponse)
{	struct soap *soap = this;
	struct __ns1__AdminGetCountInRegister soap_tmp___ns1__AdminGetCountInRegister;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/AdminGetCountInRegister";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AdminGetCountInRegister.ns1__AdminGetCountInRegister = ns1__AdminGetCountInRegister;
	soap_serializeheader(soap);
	soap_serialize___ns1__AdminGetCountInRegister(soap, &soap_tmp___ns1__AdminGetCountInRegister);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AdminGetCountInRegister(soap, &soap_tmp___ns1__AdminGetCountInRegister, "-ns1:AdminGetCountInRegister", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AdminGetCountInRegister(soap, &soap_tmp___ns1__AdminGetCountInRegister, "-ns1:AdminGetCountInRegister", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AdminGetCountInRegisterResponse)
		return soap_closesock(soap);
	ns1__AdminGetCountInRegisterResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AdminGetCountInRegisterResponse.soap_get(soap, "ns1:AdminGetCountInRegisterResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::AdminGetCountChecksum(const char *endpoint, const char *soap_action, _ns1__AdminGetCountChecksum *ns1__AdminGetCountChecksum, _ns1__AdminGetCountChecksumResponse &ns1__AdminGetCountChecksumResponse)
{	struct soap *soap = this;
	struct __ns1__AdminGetCountChecksum soap_tmp___ns1__AdminGetCountChecksum;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/AdminGetCountChecksum";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AdminGetCountChecksum.ns1__AdminGetCountChecksum = ns1__AdminGetCountChecksum;
	soap_serializeheader(soap);
	soap_serialize___ns1__AdminGetCountChecksum(soap, &soap_tmp___ns1__AdminGetCountChecksum);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AdminGetCountChecksum(soap, &soap_tmp___ns1__AdminGetCountChecksum, "-ns1:AdminGetCountChecksum", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AdminGetCountChecksum(soap, &soap_tmp___ns1__AdminGetCountChecksum, "-ns1:AdminGetCountChecksum", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AdminGetCountChecksumResponse)
		return soap_closesock(soap);
	ns1__AdminGetCountChecksumResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AdminGetCountChecksumResponse.soap_get(soap, "ns1:AdminGetCountChecksumResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::AdminGetCountLyric(const char *endpoint, const char *soap_action, _ns1__AdminGetCountLyric *ns1__AdminGetCountLyric, _ns1__AdminGetCountLyricResponse &ns1__AdminGetCountLyricResponse)
{	struct soap *soap = this;
	struct __ns1__AdminGetCountLyric soap_tmp___ns1__AdminGetCountLyric;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/AdminGetCountLyric";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AdminGetCountLyric.ns1__AdminGetCountLyric = ns1__AdminGetCountLyric;
	soap_serializeheader(soap);
	soap_serialize___ns1__AdminGetCountLyric(soap, &soap_tmp___ns1__AdminGetCountLyric);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AdminGetCountLyric(soap, &soap_tmp___ns1__AdminGetCountLyric, "-ns1:AdminGetCountLyric", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AdminGetCountLyric(soap, &soap_tmp___ns1__AdminGetCountLyric, "-ns1:AdminGetCountLyric", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AdminGetCountLyricResponse)
		return soap_closesock(soap);
	ns1__AdminGetCountLyricResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AdminGetCountLyricResponse.soap_get(soap, "ns1:AdminGetCountLyricResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::AdminGetCountModify(const char *endpoint, const char *soap_action, _ns1__AdminGetCountModify *ns1__AdminGetCountModify, _ns1__AdminGetCountModifyResponse &ns1__AdminGetCountModifyResponse)
{	struct soap *soap = this;
	struct __ns1__AdminGetCountModify soap_tmp___ns1__AdminGetCountModify;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/AdminGetCountModify";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AdminGetCountModify.ns1__AdminGetCountModify = ns1__AdminGetCountModify;
	soap_serializeheader(soap);
	soap_serialize___ns1__AdminGetCountModify(soap, &soap_tmp___ns1__AdminGetCountModify);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AdminGetCountModify(soap, &soap_tmp___ns1__AdminGetCountModify, "-ns1:AdminGetCountModify", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AdminGetCountModify(soap, &soap_tmp___ns1__AdminGetCountModify, "-ns1:AdminGetCountModify", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AdminGetCountModifyResponse)
		return soap_closesock(soap);
	ns1__AdminGetCountModifyResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AdminGetCountModifyResponse.soap_get(soap, "ns1:AdminGetCountModifyResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::AdminGetCountReport(const char *endpoint, const char *soap_action, _ns1__AdminGetCountReport *ns1__AdminGetCountReport, _ns1__AdminGetCountReportResponse &ns1__AdminGetCountReportResponse)
{	struct soap *soap = this;
	struct __ns1__AdminGetCountReport soap_tmp___ns1__AdminGetCountReport;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/AdminGetCountReport";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AdminGetCountReport.ns1__AdminGetCountReport = ns1__AdminGetCountReport;
	soap_serializeheader(soap);
	soap_serialize___ns1__AdminGetCountReport(soap, &soap_tmp___ns1__AdminGetCountReport);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AdminGetCountReport(soap, &soap_tmp___ns1__AdminGetCountReport, "-ns1:AdminGetCountReport", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AdminGetCountReport(soap, &soap_tmp___ns1__AdminGetCountReport, "-ns1:AdminGetCountReport", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AdminGetCountReportResponse)
		return soap_closesock(soap);
	ns1__AdminGetCountReportResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AdminGetCountReportResponse.soap_get(soap, "ns1:AdminGetCountReportResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::AdminGetAlbaStatistic(const char *endpoint, const char *soap_action, _ns1__AdminGetAlbaStatistic *ns1__AdminGetAlbaStatistic, _ns1__AdminGetAlbaStatisticResponse &ns1__AdminGetAlbaStatisticResponse)
{	struct soap *soap = this;
	struct __ns1__AdminGetAlbaStatistic soap_tmp___ns1__AdminGetAlbaStatistic;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/AdminGetAlbaStatistic";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AdminGetAlbaStatistic.ns1__AdminGetAlbaStatistic = ns1__AdminGetAlbaStatistic;
	soap_serializeheader(soap);
	soap_serialize___ns1__AdminGetAlbaStatistic(soap, &soap_tmp___ns1__AdminGetAlbaStatistic);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AdminGetAlbaStatistic(soap, &soap_tmp___ns1__AdminGetAlbaStatistic, "-ns1:AdminGetAlbaStatistic", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AdminGetAlbaStatistic(soap, &soap_tmp___ns1__AdminGetAlbaStatistic, "-ns1:AdminGetAlbaStatistic", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AdminGetAlbaStatisticResponse)
		return soap_closesock(soap);
	ns1__AdminGetAlbaStatisticResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AdminGetAlbaStatisticResponse.soap_get(soap, "ns1:AdminGetAlbaStatisticResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::CastUploadExMetaData(const char *endpoint, const char *soap_action, _ns1__CastUploadExMetaData *ns1__CastUploadExMetaData, _ns1__CastUploadExMetaDataResponse &ns1__CastUploadExMetaDataResponse)
{	struct soap *soap = this;
	struct __ns1__CastUploadExMetaData soap_tmp___ns1__CastUploadExMetaData;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/CastUploadExMetaData";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__CastUploadExMetaData.ns1__CastUploadExMetaData = ns1__CastUploadExMetaData;
	soap_serializeheader(soap);
	soap_serialize___ns1__CastUploadExMetaData(soap, &soap_tmp___ns1__CastUploadExMetaData);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CastUploadExMetaData(soap, &soap_tmp___ns1__CastUploadExMetaData, "-ns1:CastUploadExMetaData", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CastUploadExMetaData(soap, &soap_tmp___ns1__CastUploadExMetaData, "-ns1:CastUploadExMetaData", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__CastUploadExMetaDataResponse)
		return soap_closesock(soap);
	ns1__CastUploadExMetaDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CastUploadExMetaDataResponse.soap_get(soap, "ns1:CastUploadExMetaDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::CastUploadExMetaData2(const char *endpoint, const char *soap_action, _ns1__CastUploadExMetaData2 *ns1__CastUploadExMetaData2, _ns1__CastUploadExMetaData2Response &ns1__CastUploadExMetaData2Response)
{	struct soap *soap = this;
	struct __ns1__CastUploadExMetaData2 soap_tmp___ns1__CastUploadExMetaData2;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/CastUploadExMetaData2";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__CastUploadExMetaData2.ns1__CastUploadExMetaData2 = ns1__CastUploadExMetaData2;
	soap_serializeheader(soap);
	soap_serialize___ns1__CastUploadExMetaData2(soap, &soap_tmp___ns1__CastUploadExMetaData2);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CastUploadExMetaData2(soap, &soap_tmp___ns1__CastUploadExMetaData2, "-ns1:CastUploadExMetaData2", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CastUploadExMetaData2(soap, &soap_tmp___ns1__CastUploadExMetaData2, "-ns1:CastUploadExMetaData2", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__CastUploadExMetaData2Response)
		return soap_closesock(soap);
	ns1__CastUploadExMetaData2Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CastUploadExMetaData2Response.soap_get(soap, "ns1:CastUploadExMetaData2Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::CastUploadExMetaData3(const char *endpoint, const char *soap_action, _ns1__CastUploadExMetaData3 *ns1__CastUploadExMetaData3, _ns1__CastUploadExMetaData3Response &ns1__CastUploadExMetaData3Response)
{	struct soap *soap = this;
	struct __ns1__CastUploadExMetaData3 soap_tmp___ns1__CastUploadExMetaData3;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/CastUploadExMetaData3";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__CastUploadExMetaData3.ns1__CastUploadExMetaData3 = ns1__CastUploadExMetaData3;
	soap_serializeheader(soap);
	soap_serialize___ns1__CastUploadExMetaData3(soap, &soap_tmp___ns1__CastUploadExMetaData3);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CastUploadExMetaData3(soap, &soap_tmp___ns1__CastUploadExMetaData3, "-ns1:CastUploadExMetaData3", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CastUploadExMetaData3(soap, &soap_tmp___ns1__CastUploadExMetaData3, "-ns1:CastUploadExMetaData3", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__CastUploadExMetaData3Response)
		return soap_closesock(soap);
	ns1__CastUploadExMetaData3Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CastUploadExMetaData3Response.soap_get(soap, "ns1:CastUploadExMetaData3Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::CastRemoveExMetaData(const char *endpoint, const char *soap_action, _ns1__CastRemoveExMetaData *ns1__CastRemoveExMetaData, _ns1__CastRemoveExMetaDataResponse &ns1__CastRemoveExMetaDataResponse)
{	struct soap *soap = this;
	struct __ns1__CastRemoveExMetaData soap_tmp___ns1__CastRemoveExMetaData;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/CastRemoveExMetaData";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__CastRemoveExMetaData.ns1__CastRemoveExMetaData = ns1__CastRemoveExMetaData;
	soap_serializeheader(soap);
	soap_serialize___ns1__CastRemoveExMetaData(soap, &soap_tmp___ns1__CastRemoveExMetaData);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CastRemoveExMetaData(soap, &soap_tmp___ns1__CastRemoveExMetaData, "-ns1:CastRemoveExMetaData", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CastRemoveExMetaData(soap, &soap_tmp___ns1__CastRemoveExMetaData, "-ns1:CastRemoveExMetaData", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__CastRemoveExMetaDataResponse)
		return soap_closesock(soap);
	ns1__CastRemoveExMetaDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CastRemoveExMetaDataResponse.soap_get(soap, "ns1:CastRemoveExMetaDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::CastGetExMetaData(const char *endpoint, const char *soap_action, _ns1__CastGetExMetaData *ns1__CastGetExMetaData, _ns1__CastGetExMetaDataResponse &ns1__CastGetExMetaDataResponse)
{	struct soap *soap = this;
	struct __ns1__CastGetExMetaData soap_tmp___ns1__CastGetExMetaData;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/CastGetExMetaData";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__CastGetExMetaData.ns1__CastGetExMetaData = ns1__CastGetExMetaData;
	soap_serializeheader(soap);
	soap_serialize___ns1__CastGetExMetaData(soap, &soap_tmp___ns1__CastGetExMetaData);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CastGetExMetaData(soap, &soap_tmp___ns1__CastGetExMetaData, "-ns1:CastGetExMetaData", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CastGetExMetaData(soap, &soap_tmp___ns1__CastGetExMetaData, "-ns1:CastGetExMetaData", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__CastGetExMetaDataResponse)
		return soap_closesock(soap);
	ns1__CastGetExMetaDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CastGetExMetaDataResponse.soap_get(soap, "ns1:CastGetExMetaDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::CastGetExMetaDataList(const char *endpoint, const char *soap_action, _ns1__CastGetExMetaDataList *ns1__CastGetExMetaDataList, _ns1__CastGetExMetaDataListResponse &ns1__CastGetExMetaDataListResponse)
{	struct soap *soap = this;
	struct __ns1__CastGetExMetaDataList soap_tmp___ns1__CastGetExMetaDataList;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/CastGetExMetaDataList";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__CastGetExMetaDataList.ns1__CastGetExMetaDataList = ns1__CastGetExMetaDataList;
	soap_serializeheader(soap);
	soap_serialize___ns1__CastGetExMetaDataList(soap, &soap_tmp___ns1__CastGetExMetaDataList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CastGetExMetaDataList(soap, &soap_tmp___ns1__CastGetExMetaDataList, "-ns1:CastGetExMetaDataList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CastGetExMetaDataList(soap, &soap_tmp___ns1__CastGetExMetaDataList, "-ns1:CastGetExMetaDataList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__CastGetExMetaDataListResponse)
		return soap_closesock(soap);
	ns1__CastGetExMetaDataListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CastGetExMetaDataListResponse.soap_get(soap, "ns1:CastGetExMetaDataListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::CastGetExMetaDataList2(const char *endpoint, const char *soap_action, _ns1__CastGetExMetaDataList2 *ns1__CastGetExMetaDataList2, _ns1__CastGetExMetaDataList2Response &ns1__CastGetExMetaDataList2Response)
{	struct soap *soap = this;
	struct __ns1__CastGetExMetaDataList2 soap_tmp___ns1__CastGetExMetaDataList2;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/CastGetExMetaDataList2";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__CastGetExMetaDataList2.ns1__CastGetExMetaDataList2 = ns1__CastGetExMetaDataList2;
	soap_serializeheader(soap);
	soap_serialize___ns1__CastGetExMetaDataList2(soap, &soap_tmp___ns1__CastGetExMetaDataList2);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CastGetExMetaDataList2(soap, &soap_tmp___ns1__CastGetExMetaDataList2, "-ns1:CastGetExMetaDataList2", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CastGetExMetaDataList2(soap, &soap_tmp___ns1__CastGetExMetaDataList2, "-ns1:CastGetExMetaDataList2", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__CastGetExMetaDataList2Response)
		return soap_closesock(soap);
	ns1__CastGetExMetaDataList2Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CastGetExMetaDataList2Response.soap_get(soap, "ns1:CastGetExMetaDataList2Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::CastGetExMetaDataList3(const char *endpoint, const char *soap_action, _ns1__CastGetExMetaDataList3 *ns1__CastGetExMetaDataList3, _ns1__CastGetExMetaDataList3Response &ns1__CastGetExMetaDataList3Response)
{	struct soap *soap = this;
	struct __ns1__CastGetExMetaDataList3 soap_tmp___ns1__CastGetExMetaDataList3;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/CastGetExMetaDataList3";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__CastGetExMetaDataList3.ns1__CastGetExMetaDataList3 = ns1__CastGetExMetaDataList3;
	soap_serializeheader(soap);
	soap_serialize___ns1__CastGetExMetaDataList3(soap, &soap_tmp___ns1__CastGetExMetaDataList3);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CastGetExMetaDataList3(soap, &soap_tmp___ns1__CastGetExMetaDataList3, "-ns1:CastGetExMetaDataList3", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CastGetExMetaDataList3(soap, &soap_tmp___ns1__CastGetExMetaDataList3, "-ns1:CastGetExMetaDataList3", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__CastGetExMetaDataList3Response)
		return soap_closesock(soap);
	ns1__CastGetExMetaDataList3Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CastGetExMetaDataList3Response.soap_get(soap, "ns1:CastGetExMetaDataList3Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::GetBroadcastingList(const char *endpoint, const char *soap_action, _ns1__GetBroadcastingList *ns1__GetBroadcastingList, _ns1__GetBroadcastingListResponse &ns1__GetBroadcastingListResponse)
{	struct soap *soap = this;
	struct __ns1__GetBroadcastingList soap_tmp___ns1__GetBroadcastingList;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/GetBroadcastingList";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetBroadcastingList.ns1__GetBroadcastingList = ns1__GetBroadcastingList;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetBroadcastingList(soap, &soap_tmp___ns1__GetBroadcastingList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetBroadcastingList(soap, &soap_tmp___ns1__GetBroadcastingList, "-ns1:GetBroadcastingList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetBroadcastingList(soap, &soap_tmp___ns1__GetBroadcastingList, "-ns1:GetBroadcastingList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetBroadcastingListResponse)
		return soap_closesock(soap);
	ns1__GetBroadcastingListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetBroadcastingListResponse.soap_get(soap, "ns1:GetBroadcastingListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::GetBroadcastingList2(const char *endpoint, const char *soap_action, _ns1__GetBroadcastingList2 *ns1__GetBroadcastingList2, _ns1__GetBroadcastingList2Response &ns1__GetBroadcastingList2Response)
{	struct soap *soap = this;
	struct __ns1__GetBroadcastingList2 soap_tmp___ns1__GetBroadcastingList2;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/GetBroadcastingList2";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetBroadcastingList2.ns1__GetBroadcastingList2 = ns1__GetBroadcastingList2;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetBroadcastingList2(soap, &soap_tmp___ns1__GetBroadcastingList2);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetBroadcastingList2(soap, &soap_tmp___ns1__GetBroadcastingList2, "-ns1:GetBroadcastingList2", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetBroadcastingList2(soap, &soap_tmp___ns1__GetBroadcastingList2, "-ns1:GetBroadcastingList2", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetBroadcastingList2Response)
		return soap_closesock(soap);
	ns1__GetBroadcastingList2Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetBroadcastingList2Response.soap_get(soap, "ns1:GetBroadcastingList2Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::UploadForeignLyric(const char *endpoint, const char *soap_action, _ns1__UploadForeignLyric *ns1__UploadForeignLyric, _ns1__UploadForeignLyricResponse &ns1__UploadForeignLyricResponse)
{	struct soap *soap = this;
	struct __ns1__UploadForeignLyric soap_tmp___ns1__UploadForeignLyric;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/UploadForeignLyric";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__UploadForeignLyric.ns1__UploadForeignLyric = ns1__UploadForeignLyric;
	soap_serializeheader(soap);
	soap_serialize___ns1__UploadForeignLyric(soap, &soap_tmp___ns1__UploadForeignLyric);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__UploadForeignLyric(soap, &soap_tmp___ns1__UploadForeignLyric, "-ns1:UploadForeignLyric", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__UploadForeignLyric(soap, &soap_tmp___ns1__UploadForeignLyric, "-ns1:UploadForeignLyric", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__UploadForeignLyricResponse)
		return soap_closesock(soap);
	ns1__UploadForeignLyricResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__UploadForeignLyricResponse.soap_get(soap, "ns1:UploadForeignLyricResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::GetResembleLyricList(const char *endpoint, const char *soap_action, _ns1__GetResembleLyricList *ns1__GetResembleLyricList, _ns1__GetResembleLyricListResponse &ns1__GetResembleLyricListResponse)
{	struct soap *soap = this;
	struct __ns1__GetResembleLyricList soap_tmp___ns1__GetResembleLyricList;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/GetResembleLyricList";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetResembleLyricList.ns1__GetResembleLyricList = ns1__GetResembleLyricList;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetResembleLyricList(soap, &soap_tmp___ns1__GetResembleLyricList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetResembleLyricList(soap, &soap_tmp___ns1__GetResembleLyricList, "-ns1:GetResembleLyricList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetResembleLyricList(soap, &soap_tmp___ns1__GetResembleLyricList, "-ns1:GetResembleLyricList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetResembleLyricListResponse)
		return soap_closesock(soap);
	ns1__GetResembleLyricListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetResembleLyricListResponse.soap_get(soap, "ns1:GetResembleLyricListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::GetResembleLyricList2(const char *endpoint, const char *soap_action, _ns1__GetResembleLyricList2 *ns1__GetResembleLyricList2, _ns1__GetResembleLyricList2Response &ns1__GetResembleLyricList2Response)
{	struct soap *soap = this;
	struct __ns1__GetResembleLyricList2 soap_tmp___ns1__GetResembleLyricList2;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/GetResembleLyricList2";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetResembleLyricList2.ns1__GetResembleLyricList2 = ns1__GetResembleLyricList2;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetResembleLyricList2(soap, &soap_tmp___ns1__GetResembleLyricList2);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetResembleLyricList2(soap, &soap_tmp___ns1__GetResembleLyricList2, "-ns1:GetResembleLyricList2", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetResembleLyricList2(soap, &soap_tmp___ns1__GetResembleLyricList2, "-ns1:GetResembleLyricList2", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetResembleLyricList2Response)
		return soap_closesock(soap);
	ns1__GetResembleLyricList2Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetResembleLyricList2Response.soap_get(soap, "ns1:GetResembleLyricList2Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::GetLyricByID(const char *endpoint, const char *soap_action, _ns1__GetLyricByID *ns1__GetLyricByID, _ns1__GetLyricByIDResponse &ns1__GetLyricByIDResponse)
{	struct soap *soap = this;
	struct __ns1__GetLyricByID soap_tmp___ns1__GetLyricByID;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/GetLyricByID";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetLyricByID.ns1__GetLyricByID = ns1__GetLyricByID;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetLyricByID(soap, &soap_tmp___ns1__GetLyricByID);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetLyricByID(soap, &soap_tmp___ns1__GetLyricByID, "-ns1:GetLyricByID", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetLyricByID(soap, &soap_tmp___ns1__GetLyricByID, "-ns1:GetLyricByID", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetLyricByIDResponse)
		return soap_closesock(soap);
	ns1__GetLyricByIDResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetLyricByIDResponse.soap_get(soap, "ns1:GetLyricByIDResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::GetLyricByID2(const char *endpoint, const char *soap_action, _ns1__GetLyricByID2 *ns1__GetLyricByID2, _ns1__GetLyricByID2Response &ns1__GetLyricByID2Response)
{	struct soap *soap = this;
	struct __ns1__GetLyricByID2 soap_tmp___ns1__GetLyricByID2;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/GetLyricByID2";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetLyricByID2.ns1__GetLyricByID2 = ns1__GetLyricByID2;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetLyricByID2(soap, &soap_tmp___ns1__GetLyricByID2);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetLyricByID2(soap, &soap_tmp___ns1__GetLyricByID2, "-ns1:GetLyricByID2", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetLyricByID2(soap, &soap_tmp___ns1__GetLyricByID2, "-ns1:GetLyricByID2", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetLyricByID2Response)
		return soap_closesock(soap);
	ns1__GetLyricByID2Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetLyricByID2Response.soap_get(soap, "ns1:GetLyricByID2Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::AdminJPNGetRightsInfoByModifyID(const char *endpoint, const char *soap_action, _ns1__AdminJPNGetRightsInfoByModifyID *ns1__AdminJPNGetRightsInfoByModifyID, _ns1__AdminJPNGetRightsInfoByModifyIDResponse &ns1__AdminJPNGetRightsInfoByModifyIDResponse)
{	struct soap *soap = this;
	struct __ns1__AdminJPNGetRightsInfoByModifyID soap_tmp___ns1__AdminJPNGetRightsInfoByModifyID;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/AdminJPNGetRightsInfoByModifyID";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AdminJPNGetRightsInfoByModifyID.ns1__AdminJPNGetRightsInfoByModifyID = ns1__AdminJPNGetRightsInfoByModifyID;
	soap_serializeheader(soap);
	soap_serialize___ns1__AdminJPNGetRightsInfoByModifyID(soap, &soap_tmp___ns1__AdminJPNGetRightsInfoByModifyID);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AdminJPNGetRightsInfoByModifyID(soap, &soap_tmp___ns1__AdminJPNGetRightsInfoByModifyID, "-ns1:AdminJPNGetRightsInfoByModifyID", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AdminJPNGetRightsInfoByModifyID(soap, &soap_tmp___ns1__AdminJPNGetRightsInfoByModifyID, "-ns1:AdminJPNGetRightsInfoByModifyID", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AdminJPNGetRightsInfoByModifyIDResponse)
		return soap_closesock(soap);
	ns1__AdminJPNGetRightsInfoByModifyIDResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AdminJPNGetRightsInfoByModifyIDResponse.soap_get(soap, "ns1:AdminJPNGetRightsInfoByModifyIDResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::AdminJPNGetRightsInfoByLyricID(const char *endpoint, const char *soap_action, _ns1__AdminJPNGetRightsInfoByLyricID *ns1__AdminJPNGetRightsInfoByLyricID, _ns1__AdminJPNGetRightsInfoByLyricIDResponse &ns1__AdminJPNGetRightsInfoByLyricIDResponse)
{	struct soap *soap = this;
	struct __ns1__AdminJPNGetRightsInfoByLyricID soap_tmp___ns1__AdminJPNGetRightsInfoByLyricID;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/AdminJPNGetRightsInfoByLyricID";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AdminJPNGetRightsInfoByLyricID.ns1__AdminJPNGetRightsInfoByLyricID = ns1__AdminJPNGetRightsInfoByLyricID;
	soap_serializeheader(soap);
	soap_serialize___ns1__AdminJPNGetRightsInfoByLyricID(soap, &soap_tmp___ns1__AdminJPNGetRightsInfoByLyricID);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AdminJPNGetRightsInfoByLyricID(soap, &soap_tmp___ns1__AdminJPNGetRightsInfoByLyricID, "-ns1:AdminJPNGetRightsInfoByLyricID", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AdminJPNGetRightsInfoByLyricID(soap, &soap_tmp___ns1__AdminJPNGetRightsInfoByLyricID, "-ns1:AdminJPNGetRightsInfoByLyricID", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AdminJPNGetRightsInfoByLyricIDResponse)
		return soap_closesock(soap);
	ns1__AdminJPNGetRightsInfoByLyricIDResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AdminJPNGetRightsInfoByLyricIDResponse.soap_get(soap, "ns1:AdminJPNGetRightsInfoByLyricIDResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::AdminJPNSetRightsInfo(const char *endpoint, const char *soap_action, _ns1__AdminJPNSetRightsInfo *ns1__AdminJPNSetRightsInfo, _ns1__AdminJPNSetRightsInfoResponse &ns1__AdminJPNSetRightsInfoResponse)
{	struct soap *soap = this;
	struct __ns1__AdminJPNSetRightsInfo soap_tmp___ns1__AdminJPNSetRightsInfo;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/AdminJPNSetRightsInfo";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AdminJPNSetRightsInfo.ns1__AdminJPNSetRightsInfo = ns1__AdminJPNSetRightsInfo;
	soap_serializeheader(soap);
	soap_serialize___ns1__AdminJPNSetRightsInfo(soap, &soap_tmp___ns1__AdminJPNSetRightsInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AdminJPNSetRightsInfo(soap, &soap_tmp___ns1__AdminJPNSetRightsInfo, "-ns1:AdminJPNSetRightsInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AdminJPNSetRightsInfo(soap, &soap_tmp___ns1__AdminJPNSetRightsInfo, "-ns1:AdminJPNSetRightsInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AdminJPNSetRightsInfoResponse)
		return soap_closesock(soap);
	ns1__AdminJPNSetRightsInfoResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AdminJPNSetRightsInfoResponse.soap_get(soap, "ns1:AdminJPNSetRightsInfoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::AdminJPNSearchRightsInfoList(const char *endpoint, const char *soap_action, _ns1__AdminJPNSearchRightsInfoList *ns1__AdminJPNSearchRightsInfoList, _ns1__AdminJPNSearchRightsInfoListResponse &ns1__AdminJPNSearchRightsInfoListResponse)
{	struct soap *soap = this;
	struct __ns1__AdminJPNSearchRightsInfoList soap_tmp___ns1__AdminJPNSearchRightsInfoList;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/AdminJPNSearchRightsInfoList";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AdminJPNSearchRightsInfoList.ns1__AdminJPNSearchRightsInfoList = ns1__AdminJPNSearchRightsInfoList;
	soap_serializeheader(soap);
	soap_serialize___ns1__AdminJPNSearchRightsInfoList(soap, &soap_tmp___ns1__AdminJPNSearchRightsInfoList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AdminJPNSearchRightsInfoList(soap, &soap_tmp___ns1__AdminJPNSearchRightsInfoList, "-ns1:AdminJPNSearchRightsInfoList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AdminJPNSearchRightsInfoList(soap, &soap_tmp___ns1__AdminJPNSearchRightsInfoList, "-ns1:AdminJPNSearchRightsInfoList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AdminJPNSearchRightsInfoListResponse)
		return soap_closesock(soap);
	ns1__AdminJPNSearchRightsInfoListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AdminJPNSearchRightsInfoListResponse.soap_get(soap, "ns1:AdminJPNSearchRightsInfoListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::AdminLoginRightsJPN(const char *endpoint, const char *soap_action, _ns1__AdminLoginRightsJPN *ns1__AdminLoginRightsJPN, _ns1__AdminLoginRightsJPNResponse &ns1__AdminLoginRightsJPNResponse)
{	struct soap *soap = this;
	struct __ns1__AdminLoginRightsJPN soap_tmp___ns1__AdminLoginRightsJPN;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/AdminLoginRightsJPN";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AdminLoginRightsJPN.ns1__AdminLoginRightsJPN = ns1__AdminLoginRightsJPN;
	soap_serializeheader(soap);
	soap_serialize___ns1__AdminLoginRightsJPN(soap, &soap_tmp___ns1__AdminLoginRightsJPN);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AdminLoginRightsJPN(soap, &soap_tmp___ns1__AdminLoginRightsJPN, "-ns1:AdminLoginRightsJPN", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AdminLoginRightsJPN(soap, &soap_tmp___ns1__AdminLoginRightsJPN, "-ns1:AdminLoginRightsJPN", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AdminLoginRightsJPNResponse)
		return soap_closesock(soap);
	ns1__AdminLoginRightsJPNResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AdminLoginRightsJPNResponse.soap_get(soap, "ns1:AdminLoginRightsJPNResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::GetSearchLyricCount(const char *endpoint, const char *soap_action, _ns1__GetSearchLyricCount *ns1__GetSearchLyricCount, _ns1__GetSearchLyricCountResponse &ns1__GetSearchLyricCountResponse)
{	struct soap *soap = this;
	struct __ns1__GetSearchLyricCount soap_tmp___ns1__GetSearchLyricCount;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/GetSearchLyricCount";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetSearchLyricCount.ns1__GetSearchLyricCount = ns1__GetSearchLyricCount;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetSearchLyricCount(soap, &soap_tmp___ns1__GetSearchLyricCount);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetSearchLyricCount(soap, &soap_tmp___ns1__GetSearchLyricCount, "-ns1:GetSearchLyricCount", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetSearchLyricCount(soap, &soap_tmp___ns1__GetSearchLyricCount, "-ns1:GetSearchLyricCount", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetSearchLyricCountResponse)
		return soap_closesock(soap);
	ns1__GetSearchLyricCountResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetSearchLyricCountResponse.soap_get(soap, "ns1:GetSearchLyricCountResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::AdminLoginLyricMonitor(const char *endpoint, const char *soap_action, _ns1__AdminLoginLyricMonitor *ns1__AdminLoginLyricMonitor, _ns1__AdminLoginLyricMonitorResponse &ns1__AdminLoginLyricMonitorResponse)
{	struct soap *soap = this;
	struct __ns1__AdminLoginLyricMonitor soap_tmp___ns1__AdminLoginLyricMonitor;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/AdminLoginLyricMonitor";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AdminLoginLyricMonitor.ns1__AdminLoginLyricMonitor = ns1__AdminLoginLyricMonitor;
	soap_serializeheader(soap);
	soap_serialize___ns1__AdminLoginLyricMonitor(soap, &soap_tmp___ns1__AdminLoginLyricMonitor);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AdminLoginLyricMonitor(soap, &soap_tmp___ns1__AdminLoginLyricMonitor, "-ns1:AdminLoginLyricMonitor", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AdminLoginLyricMonitor(soap, &soap_tmp___ns1__AdminLoginLyricMonitor, "-ns1:AdminLoginLyricMonitor", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AdminLoginLyricMonitorResponse)
		return soap_closesock(soap);
	ns1__AdminLoginLyricMonitorResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AdminLoginLyricMonitorResponse.soap_get(soap, "ns1:AdminLoginLyricMonitorResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::AdminGetLyrics(const char *endpoint, const char *soap_action, _ns1__AdminGetLyrics *ns1__AdminGetLyrics, _ns1__AdminGetLyricsResponse &ns1__AdminGetLyricsResponse)
{	struct soap *soap = this;
	struct __ns1__AdminGetLyrics soap_tmp___ns1__AdminGetLyrics;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/AdminGetLyrics";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AdminGetLyrics.ns1__AdminGetLyrics = ns1__AdminGetLyrics;
	soap_serializeheader(soap);
	soap_serialize___ns1__AdminGetLyrics(soap, &soap_tmp___ns1__AdminGetLyrics);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AdminGetLyrics(soap, &soap_tmp___ns1__AdminGetLyrics, "-ns1:AdminGetLyrics", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AdminGetLyrics(soap, &soap_tmp___ns1__AdminGetLyrics, "-ns1:AdminGetLyrics", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AdminGetLyricsResponse)
		return soap_closesock(soap);
	ns1__AdminGetLyricsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AdminGetLyricsResponse.soap_get(soap, "ns1:AdminGetLyricsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::AdminDeleteLyrics(const char *endpoint, const char *soap_action, _ns1__AdminDeleteLyrics *ns1__AdminDeleteLyrics, _ns1__AdminDeleteLyricsResponse &ns1__AdminDeleteLyricsResponse)
{	struct soap *soap = this;
	struct __ns1__AdminDeleteLyrics soap_tmp___ns1__AdminDeleteLyrics;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/AdminDeleteLyrics";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AdminDeleteLyrics.ns1__AdminDeleteLyrics = ns1__AdminDeleteLyrics;
	soap_serializeheader(soap);
	soap_serialize___ns1__AdminDeleteLyrics(soap, &soap_tmp___ns1__AdminDeleteLyrics);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AdminDeleteLyrics(soap, &soap_tmp___ns1__AdminDeleteLyrics, "-ns1:AdminDeleteLyrics", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AdminDeleteLyrics(soap, &soap_tmp___ns1__AdminDeleteLyrics, "-ns1:AdminDeleteLyrics", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AdminDeleteLyricsResponse)
		return soap_closesock(soap);
	ns1__AdminDeleteLyricsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AdminDeleteLyricsResponse.soap_get(soap, "ns1:AdminDeleteLyricsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::AdminGetLatestLyricID(const char *endpoint, const char *soap_action, _ns1__AdminGetLatestLyricID *ns1__AdminGetLatestLyricID, _ns1__AdminGetLatestLyricIDResponse &ns1__AdminGetLatestLyricIDResponse)
{	struct soap *soap = this;
	struct __ns1__AdminGetLatestLyricID soap_tmp___ns1__AdminGetLatestLyricID;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/AdminGetLatestLyricID";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AdminGetLatestLyricID.ns1__AdminGetLatestLyricID = ns1__AdminGetLatestLyricID;
	soap_serializeheader(soap);
	soap_serialize___ns1__AdminGetLatestLyricID(soap, &soap_tmp___ns1__AdminGetLatestLyricID);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AdminGetLatestLyricID(soap, &soap_tmp___ns1__AdminGetLatestLyricID, "-ns1:AdminGetLatestLyricID", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AdminGetLatestLyricID(soap, &soap_tmp___ns1__AdminGetLatestLyricID, "-ns1:AdminGetLatestLyricID", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AdminGetLatestLyricIDResponse)
		return soap_closesock(soap);
	ns1__AdminGetLatestLyricIDResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AdminGetLatestLyricIDResponse.soap_get(soap, "ns1:AdminGetLatestLyricIDResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::GetMurekaInfo_(const char *endpoint, const char *soap_action, _ns1__GetMurekaInfo *ns1__GetMurekaInfo, _ns1__GetMurekaInfoResponse &ns1__GetMurekaInfoResponse)
{	struct soap *soap = this;
	struct __ns1__GetMurekaInfo_ soap_tmp___ns1__GetMurekaInfo_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/GetMurekaInfo";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetMurekaInfo_.ns1__GetMurekaInfo = ns1__GetMurekaInfo;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetMurekaInfo_(soap, &soap_tmp___ns1__GetMurekaInfo_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetMurekaInfo_(soap, &soap_tmp___ns1__GetMurekaInfo_, "-ns1:GetMurekaInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetMurekaInfo_(soap, &soap_tmp___ns1__GetMurekaInfo_, "-ns1:GetMurekaInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetMurekaInfoResponse)
		return soap_closesock(soap);
	ns1__GetMurekaInfoResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetMurekaInfoResponse.soap_get(soap, "ns1:GetMurekaInfoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::GetSyncLyricBySearch_(const char *endpoint, const char *soap_action, _ns1__GetSyncLyricBySearch *ns1__GetSyncLyricBySearch, _ns1__GetSyncLyricBySearchResponse &ns1__GetSyncLyricBySearchResponse)
{	struct soap *soap = this;
	struct __ns1__GetSyncLyricBySearch_ soap_tmp___ns1__GetSyncLyricBySearch_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/GetSyncLyricBySearch";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetSyncLyricBySearch_.ns1__GetSyncLyricBySearch = ns1__GetSyncLyricBySearch;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetSyncLyricBySearch_(soap, &soap_tmp___ns1__GetSyncLyricBySearch_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetSyncLyricBySearch_(soap, &soap_tmp___ns1__GetSyncLyricBySearch_, "-ns1:GetSyncLyricBySearch", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetSyncLyricBySearch_(soap, &soap_tmp___ns1__GetSyncLyricBySearch_, "-ns1:GetSyncLyricBySearch", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetSyncLyricBySearchResponse)
		return soap_closesock(soap);
	ns1__GetSyncLyricBySearchResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetSyncLyricBySearchResponse.soap_get(soap, "ns1:GetSyncLyricBySearchResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::SetLinkLyric_(const char *endpoint, const char *soap_action, _ns1__SetLinkLyric *ns1__SetLinkLyric, _ns1__SetLinkLyricResponse &ns1__SetLinkLyricResponse)
{	struct soap *soap = this;
	struct __ns1__SetLinkLyric_ soap_tmp___ns1__SetLinkLyric_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/SetLinkLyric";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__SetLinkLyric_.ns1__SetLinkLyric = ns1__SetLinkLyric;
	soap_serializeheader(soap);
	soap_serialize___ns1__SetLinkLyric_(soap, &soap_tmp___ns1__SetLinkLyric_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetLinkLyric_(soap, &soap_tmp___ns1__SetLinkLyric_, "-ns1:SetLinkLyric", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetLinkLyric_(soap, &soap_tmp___ns1__SetLinkLyric_, "-ns1:SetLinkLyric", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__SetLinkLyricResponse)
		return soap_closesock(soap);
	ns1__SetLinkLyricResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetLinkLyricResponse.soap_get(soap, "ns1:SetLinkLyricResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::GetResembleLyric2_(const char *endpoint, const char *soap_action, _ns1__GetResembleLyric2 *ns1__GetResembleLyric2, _ns1__GetResembleLyric2Response &ns1__GetResembleLyric2Response)
{	struct soap *soap = this;
	struct __ns1__GetResembleLyric2_ soap_tmp___ns1__GetResembleLyric2_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/GetResembleLyric2";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetResembleLyric2_.ns1__GetResembleLyric2 = ns1__GetResembleLyric2;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetResembleLyric2_(soap, &soap_tmp___ns1__GetResembleLyric2_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetResembleLyric2_(soap, &soap_tmp___ns1__GetResembleLyric2_, "-ns1:GetResembleLyric2", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetResembleLyric2_(soap, &soap_tmp___ns1__GetResembleLyric2_, "-ns1:GetResembleLyric2", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetResembleLyric2Response)
		return soap_closesock(soap);
	ns1__GetResembleLyric2Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetResembleLyric2Response.soap_get(soap, "ns1:GetResembleLyric2Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::GetResembleLyric3_(const char *endpoint, const char *soap_action, _ns1__GetResembleLyric3 *ns1__GetResembleLyric3, _ns1__GetResembleLyric3Response &ns1__GetResembleLyric3Response)
{	struct soap *soap = this;
	struct __ns1__GetResembleLyric3_ soap_tmp___ns1__GetResembleLyric3_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/GetResembleLyric3";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetResembleLyric3_.ns1__GetResembleLyric3 = ns1__GetResembleLyric3;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetResembleLyric3_(soap, &soap_tmp___ns1__GetResembleLyric3_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetResembleLyric3_(soap, &soap_tmp___ns1__GetResembleLyric3_, "-ns1:GetResembleLyric3", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetResembleLyric3_(soap, &soap_tmp___ns1__GetResembleLyric3_, "-ns1:GetResembleLyric3", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetResembleLyric3Response)
		return soap_closesock(soap);
	ns1__GetResembleLyric3Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetResembleLyric3Response.soap_get(soap, "ns1:GetResembleLyric3Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::GetResembleLyric2Count_(const char *endpoint, const char *soap_action, _ns1__GetResembleLyric2Count *ns1__GetResembleLyric2Count, _ns1__GetResembleLyric2CountResponse &ns1__GetResembleLyric2CountResponse)
{	struct soap *soap = this;
	struct __ns1__GetResembleLyric2Count_ soap_tmp___ns1__GetResembleLyric2Count_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/GetResembleLyric2Count";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetResembleLyric2Count_.ns1__GetResembleLyric2Count = ns1__GetResembleLyric2Count;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetResembleLyric2Count_(soap, &soap_tmp___ns1__GetResembleLyric2Count_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetResembleLyric2Count_(soap, &soap_tmp___ns1__GetResembleLyric2Count_, "-ns1:GetResembleLyric2Count", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetResembleLyric2Count_(soap, &soap_tmp___ns1__GetResembleLyric2Count_, "-ns1:GetResembleLyric2Count", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetResembleLyric2CountResponse)
		return soap_closesock(soap);
	ns1__GetResembleLyric2CountResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetResembleLyric2CountResponse.soap_get(soap, "ns1:GetResembleLyric2CountResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::GetResembleLyric2CountTest_(const char *endpoint, const char *soap_action, _ns1__GetResembleLyric2CountTest *ns1__GetResembleLyric2CountTest, _ns1__GetResembleLyric2CountTestResponse &ns1__GetResembleLyric2CountTestResponse)
{	struct soap *soap = this;
	struct __ns1__GetResembleLyric2CountTest_ soap_tmp___ns1__GetResembleLyric2CountTest_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/GetResembleLyric2CountTest";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetResembleLyric2CountTest_.ns1__GetResembleLyric2CountTest = ns1__GetResembleLyric2CountTest;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetResembleLyric2CountTest_(soap, &soap_tmp___ns1__GetResembleLyric2CountTest_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetResembleLyric2CountTest_(soap, &soap_tmp___ns1__GetResembleLyric2CountTest_, "-ns1:GetResembleLyric2CountTest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetResembleLyric2CountTest_(soap, &soap_tmp___ns1__GetResembleLyric2CountTest_, "-ns1:GetResembleLyric2CountTest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetResembleLyric2CountTestResponse)
		return soap_closesock(soap);
	ns1__GetResembleLyric2CountTestResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetResembleLyric2CountTestResponse.soap_get(soap, "ns1:GetResembleLyric2CountTestResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::UploadLyric_(const char *endpoint, const char *soap_action, _ns1__UploadLyric *ns1__UploadLyric, _ns1__UploadLyricResponse &ns1__UploadLyricResponse)
{	struct soap *soap = this;
	struct __ns1__UploadLyric_ soap_tmp___ns1__UploadLyric_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/UploadLyric";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__UploadLyric_.ns1__UploadLyric = ns1__UploadLyric;
	soap_serializeheader(soap);
	soap_serialize___ns1__UploadLyric_(soap, &soap_tmp___ns1__UploadLyric_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__UploadLyric_(soap, &soap_tmp___ns1__UploadLyric_, "-ns1:UploadLyric", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__UploadLyric_(soap, &soap_tmp___ns1__UploadLyric_, "-ns1:UploadLyric", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__UploadLyricResponse)
		return soap_closesock(soap);
	ns1__UploadLyricResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__UploadLyricResponse.soap_get(soap, "ns1:UploadLyricResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::ReportFaultLyricWithComment_(const char *endpoint, const char *soap_action, _ns1__ReportFaultLyricWithComment *ns1__ReportFaultLyricWithComment, _ns1__ReportFaultLyricWithCommentResponse &ns1__ReportFaultLyricWithCommentResponse)
{	struct soap *soap = this;
	struct __ns1__ReportFaultLyricWithComment_ soap_tmp___ns1__ReportFaultLyricWithComment_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/ReportFaultLyricWithComment";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__ReportFaultLyricWithComment_.ns1__ReportFaultLyricWithComment = ns1__ReportFaultLyricWithComment;
	soap_serializeheader(soap);
	soap_serialize___ns1__ReportFaultLyricWithComment_(soap, &soap_tmp___ns1__ReportFaultLyricWithComment_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__ReportFaultLyricWithComment_(soap, &soap_tmp___ns1__ReportFaultLyricWithComment_, "-ns1:ReportFaultLyricWithComment", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__ReportFaultLyricWithComment_(soap, &soap_tmp___ns1__ReportFaultLyricWithComment_, "-ns1:ReportFaultLyricWithComment", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__ReportFaultLyricWithCommentResponse)
		return soap_closesock(soap);
	ns1__ReportFaultLyricWithCommentResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ReportFaultLyricWithCommentResponse.soap_get(soap, "ns1:ReportFaultLyricWithCommentResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::ReportFaultLyric2_(const char *endpoint, const char *soap_action, _ns1__ReportFaultLyric2 *ns1__ReportFaultLyric2, _ns1__ReportFaultLyric2Response &ns1__ReportFaultLyric2Response)
{	struct soap *soap = this;
	struct __ns1__ReportFaultLyric2_ soap_tmp___ns1__ReportFaultLyric2_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/ReportFaultLyric2";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__ReportFaultLyric2_.ns1__ReportFaultLyric2 = ns1__ReportFaultLyric2;
	soap_serializeheader(soap);
	soap_serialize___ns1__ReportFaultLyric2_(soap, &soap_tmp___ns1__ReportFaultLyric2_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__ReportFaultLyric2_(soap, &soap_tmp___ns1__ReportFaultLyric2_, "-ns1:ReportFaultLyric2", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__ReportFaultLyric2_(soap, &soap_tmp___ns1__ReportFaultLyric2_, "-ns1:ReportFaultLyric2", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__ReportFaultLyric2Response)
		return soap_closesock(soap);
	ns1__ReportFaultLyric2Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ReportFaultLyric2Response.soap_get(soap, "ns1:ReportFaultLyric2Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::ReportRecommendationLyric_(const char *endpoint, const char *soap_action, _ns1__ReportRecommendationLyric *ns1__ReportRecommendationLyric, _ns1__ReportRecommendationLyricResponse &ns1__ReportRecommendationLyricResponse)
{	struct soap *soap = this;
	struct __ns1__ReportRecommendationLyric_ soap_tmp___ns1__ReportRecommendationLyric_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/ReportRecommendationLyric";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__ReportRecommendationLyric_.ns1__ReportRecommendationLyric = ns1__ReportRecommendationLyric;
	soap_serializeheader(soap);
	soap_serialize___ns1__ReportRecommendationLyric_(soap, &soap_tmp___ns1__ReportRecommendationLyric_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__ReportRecommendationLyric_(soap, &soap_tmp___ns1__ReportRecommendationLyric_, "-ns1:ReportRecommendationLyric", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__ReportRecommendationLyric_(soap, &soap_tmp___ns1__ReportRecommendationLyric_, "-ns1:ReportRecommendationLyric", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__ReportRecommendationLyricResponse)
		return soap_closesock(soap);
	ns1__ReportRecommendationLyricResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ReportRecommendationLyricResponse.soap_get(soap, "ns1:ReportRecommendationLyricResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::IsReportedRecommendationLyric_(const char *endpoint, const char *soap_action, _ns1__IsReportedRecommendationLyric *ns1__IsReportedRecommendationLyric, _ns1__IsReportedRecommendationLyricResponse &ns1__IsReportedRecommendationLyricResponse)
{	struct soap *soap = this;
	struct __ns1__IsReportedRecommendationLyric_ soap_tmp___ns1__IsReportedRecommendationLyric_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/IsReportedRecommendationLyric";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__IsReportedRecommendationLyric_.ns1__IsReportedRecommendationLyric = ns1__IsReportedRecommendationLyric;
	soap_serializeheader(soap);
	soap_serialize___ns1__IsReportedRecommendationLyric_(soap, &soap_tmp___ns1__IsReportedRecommendationLyric_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__IsReportedRecommendationLyric_(soap, &soap_tmp___ns1__IsReportedRecommendationLyric_, "-ns1:IsReportedRecommendationLyric", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__IsReportedRecommendationLyric_(soap, &soap_tmp___ns1__IsReportedRecommendationLyric_, "-ns1:IsReportedRecommendationLyric", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__IsReportedRecommendationLyricResponse)
		return soap_closesock(soap);
	ns1__IsReportedRecommendationLyricResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__IsReportedRecommendationLyricResponse.soap_get(soap, "ns1:IsReportedRecommendationLyricResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::IsReportedFaultLyric_(const char *endpoint, const char *soap_action, _ns1__IsReportedFaultLyric *ns1__IsReportedFaultLyric, _ns1__IsReportedFaultLyricResponse &ns1__IsReportedFaultLyricResponse)
{	struct soap *soap = this;
	struct __ns1__IsReportedFaultLyric_ soap_tmp___ns1__IsReportedFaultLyric_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/IsReportedFaultLyric";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__IsReportedFaultLyric_.ns1__IsReportedFaultLyric = ns1__IsReportedFaultLyric;
	soap_serializeheader(soap);
	soap_serialize___ns1__IsReportedFaultLyric_(soap, &soap_tmp___ns1__IsReportedFaultLyric_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__IsReportedFaultLyric_(soap, &soap_tmp___ns1__IsReportedFaultLyric_, "-ns1:IsReportedFaultLyric", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__IsReportedFaultLyric_(soap, &soap_tmp___ns1__IsReportedFaultLyric_, "-ns1:IsReportedFaultLyric", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__IsReportedFaultLyricResponse)
		return soap_closesock(soap);
	ns1__IsReportedFaultLyricResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__IsReportedFaultLyricResponse.soap_get(soap, "ns1:IsReportedFaultLyricResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::GetLyric3_(const char *endpoint, const char *soap_action, _ns1__GetLyric3 *ns1__GetLyric3, _ns1__GetLyric3Response &ns1__GetLyric3Response)
{	struct soap *soap = this;
	struct __ns1__GetLyric3_ soap_tmp___ns1__GetLyric3_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/GetLyric3";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetLyric3_.ns1__GetLyric3 = ns1__GetLyric3;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetLyric3_(soap, &soap_tmp___ns1__GetLyric3_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetLyric3_(soap, &soap_tmp___ns1__GetLyric3_, "-ns1:GetLyric3", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetLyric3_(soap, &soap_tmp___ns1__GetLyric3_, "-ns1:GetLyric3", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetLyric3Response)
		return soap_closesock(soap);
	ns1__GetLyric3Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetLyric3Response.soap_get(soap, "ns1:GetLyric3Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::GetLyric4_(const char *endpoint, const char *soap_action, _ns1__GetLyric4 *ns1__GetLyric4, _ns1__GetLyric4Response &ns1__GetLyric4Response)
{	struct soap *soap = this;
	struct __ns1__GetLyric4_ soap_tmp___ns1__GetLyric4_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/GetLyric4";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetLyric4_.ns1__GetLyric4 = ns1__GetLyric4;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetLyric4_(soap, &soap_tmp___ns1__GetLyric4_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetLyric4_(soap, &soap_tmp___ns1__GetLyric4_, "-ns1:GetLyric4", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetLyric4_(soap, &soap_tmp___ns1__GetLyric4_, "-ns1:GetLyric4", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetLyric4Response)
		return soap_closesock(soap);
	ns1__GetLyric4Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetLyric4Response.soap_get(soap, "ns1:GetLyric4Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::GetLyric5_(const char *endpoint, const char *soap_action, _ns1__GetLyric5 *ns1__GetLyric5, _ns1__GetLyric5Response &ns1__GetLyric5Response)
{	struct soap *soap = this;
	struct __ns1__GetLyric5_ soap_tmp___ns1__GetLyric5_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/GetLyric5";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetLyric5_.ns1__GetLyric5 = ns1__GetLyric5;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetLyric5_(soap, &soap_tmp___ns1__GetLyric5_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetLyric5_(soap, &soap_tmp___ns1__GetLyric5_, "-ns1:GetLyric5", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetLyric5_(soap, &soap_tmp___ns1__GetLyric5_, "-ns1:GetLyric5", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetLyric5Response)
		return soap_closesock(soap);
	ns1__GetLyric5Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetLyric5Response.soap_get(soap, "ns1:GetLyric5Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::GetLyric6_(const char *endpoint, const char *soap_action, _ns1__GetLyric6 *ns1__GetLyric6, _ns1__GetLyric6Response &ns1__GetLyric6Response)
{	struct soap *soap = this;
	struct __ns1__GetLyric6_ soap_tmp___ns1__GetLyric6_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/GetLyric6";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetLyric6_.ns1__GetLyric6 = ns1__GetLyric6;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetLyric6_(soap, &soap_tmp___ns1__GetLyric6_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetLyric6_(soap, &soap_tmp___ns1__GetLyric6_, "-ns1:GetLyric6", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetLyric6_(soap, &soap_tmp___ns1__GetLyric6_, "-ns1:GetLyric6", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetLyric6Response)
		return soap_closesock(soap);
	ns1__GetLyric6Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetLyric6Response.soap_get(soap, "ns1:GetLyric6Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::GetLyric7_(const char *endpoint, const char *soap_action, _ns1__GetLyric7 *ns1__GetLyric7, _ns1__GetLyric7Response &ns1__GetLyric7Response)
{	struct soap *soap = this;
	struct __ns1__GetLyric7_ soap_tmp___ns1__GetLyric7_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/GetLyric7";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetLyric7_.ns1__GetLyric7 = ns1__GetLyric7;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetLyric7_(soap, &soap_tmp___ns1__GetLyric7_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetLyric7_(soap, &soap_tmp___ns1__GetLyric7_, "-ns1:GetLyric7", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetLyric7_(soap, &soap_tmp___ns1__GetLyric7_, "-ns1:GetLyric7", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetLyric7Response)
		return soap_closesock(soap);
	ns1__GetLyric7Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetLyric7Response.soap_get(soap, "ns1:GetLyric7Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::GetLyric8_(const char *endpoint, const char *soap_action, _ns1__GetLyric8 *ns1__GetLyric8, _ns1__GetLyric8Response &ns1__GetLyric8Response)
{	struct soap *soap = this;
	struct __ns1__GetLyric8_ soap_tmp___ns1__GetLyric8_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/GetLyric8";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetLyric8_.ns1__GetLyric8 = ns1__GetLyric8;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetLyric8_(soap, &soap_tmp___ns1__GetLyric8_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetLyric8_(soap, &soap_tmp___ns1__GetLyric8_, "-ns1:GetLyric8", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetLyric8_(soap, &soap_tmp___ns1__GetLyric8_, "-ns1:GetLyric8", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetLyric8Response)
		return soap_closesock(soap);
	ns1__GetLyric8Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetLyric8Response.soap_get(soap, "ns1:GetLyric8Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::GetSongID_(const char *endpoint, const char *soap_action, _ns1__GetSongID *ns1__GetSongID, _ns1__GetSongIDResponse &ns1__GetSongIDResponse)
{	struct soap *soap = this;
	struct __ns1__GetSongID_ soap_tmp___ns1__GetSongID_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/GetSongID";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetSongID_.ns1__GetSongID = ns1__GetSongID;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetSongID_(soap, &soap_tmp___ns1__GetSongID_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetSongID_(soap, &soap_tmp___ns1__GetSongID_, "-ns1:GetSongID", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetSongID_(soap, &soap_tmp___ns1__GetSongID_, "-ns1:GetSongID", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetSongIDResponse)
		return soap_closesock(soap);
	ns1__GetSongIDResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetSongIDResponse.soap_get(soap, "ns1:GetSongIDResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::AdminGetLyricList_(const char *endpoint, const char *soap_action, _ns1__AdminGetLyricList *ns1__AdminGetLyricList, _ns1__AdminGetLyricListResponse &ns1__AdminGetLyricListResponse)
{	struct soap *soap = this;
	struct __ns1__AdminGetLyricList_ soap_tmp___ns1__AdminGetLyricList_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/AdminGetLyricList";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AdminGetLyricList_.ns1__AdminGetLyricList = ns1__AdminGetLyricList;
	soap_serializeheader(soap);
	soap_serialize___ns1__AdminGetLyricList_(soap, &soap_tmp___ns1__AdminGetLyricList_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AdminGetLyricList_(soap, &soap_tmp___ns1__AdminGetLyricList_, "-ns1:AdminGetLyricList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AdminGetLyricList_(soap, &soap_tmp___ns1__AdminGetLyricList_, "-ns1:AdminGetLyricList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AdminGetLyricListResponse)
		return soap_closesock(soap);
	ns1__AdminGetLyricListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AdminGetLyricListResponse.soap_get(soap, "ns1:AdminGetLyricListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::AdminGetLyricListByID_(const char *endpoint, const char *soap_action, _ns1__AdminGetLyricListByID *ns1__AdminGetLyricListByID, _ns1__AdminGetLyricListByIDResponse &ns1__AdminGetLyricListByIDResponse)
{	struct soap *soap = this;
	struct __ns1__AdminGetLyricListByID_ soap_tmp___ns1__AdminGetLyricListByID_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/AdminGetLyricListByID";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AdminGetLyricListByID_.ns1__AdminGetLyricListByID = ns1__AdminGetLyricListByID;
	soap_serializeheader(soap);
	soap_serialize___ns1__AdminGetLyricListByID_(soap, &soap_tmp___ns1__AdminGetLyricListByID_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AdminGetLyricListByID_(soap, &soap_tmp___ns1__AdminGetLyricListByID_, "-ns1:AdminGetLyricListByID", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AdminGetLyricListByID_(soap, &soap_tmp___ns1__AdminGetLyricListByID_, "-ns1:AdminGetLyricListByID", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AdminGetLyricListByIDResponse)
		return soap_closesock(soap);
	ns1__AdminGetLyricListByIDResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AdminGetLyricListByIDResponse.soap_get(soap, "ns1:AdminGetLyricListByIDResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::AdminGetReportFaultList_(const char *endpoint, const char *soap_action, _ns1__AdminGetReportFaultList *ns1__AdminGetReportFaultList, _ns1__AdminGetReportFaultListResponse &ns1__AdminGetReportFaultListResponse)
{	struct soap *soap = this;
	struct __ns1__AdminGetReportFaultList_ soap_tmp___ns1__AdminGetReportFaultList_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/AdminGetReportFaultList";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AdminGetReportFaultList_.ns1__AdminGetReportFaultList = ns1__AdminGetReportFaultList;
	soap_serializeheader(soap);
	soap_serialize___ns1__AdminGetReportFaultList_(soap, &soap_tmp___ns1__AdminGetReportFaultList_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AdminGetReportFaultList_(soap, &soap_tmp___ns1__AdminGetReportFaultList_, "-ns1:AdminGetReportFaultList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AdminGetReportFaultList_(soap, &soap_tmp___ns1__AdminGetReportFaultList_, "-ns1:AdminGetReportFaultList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AdminGetReportFaultListResponse)
		return soap_closesock(soap);
	ns1__AdminGetReportFaultListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AdminGetReportFaultListResponse.soap_get(soap, "ns1:AdminGetReportFaultListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::AdminGetModifyList_(const char *endpoint, const char *soap_action, _ns1__AdminGetModifyList *ns1__AdminGetModifyList, _ns1__AdminGetModifyListResponse &ns1__AdminGetModifyListResponse)
{	struct soap *soap = this;
	struct __ns1__AdminGetModifyList_ soap_tmp___ns1__AdminGetModifyList_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/AdminGetModifyList";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AdminGetModifyList_.ns1__AdminGetModifyList = ns1__AdminGetModifyList;
	soap_serializeheader(soap);
	soap_serialize___ns1__AdminGetModifyList_(soap, &soap_tmp___ns1__AdminGetModifyList_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AdminGetModifyList_(soap, &soap_tmp___ns1__AdminGetModifyList_, "-ns1:AdminGetModifyList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AdminGetModifyList_(soap, &soap_tmp___ns1__AdminGetModifyList_, "-ns1:AdminGetModifyList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AdminGetModifyListResponse)
		return soap_closesock(soap);
	ns1__AdminGetModifyListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AdminGetModifyListResponse.soap_get(soap, "ns1:AdminGetModifyListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::AdminGetRegisterList_(const char *endpoint, const char *soap_action, _ns1__AdminGetRegisterList *ns1__AdminGetRegisterList, _ns1__AdminGetRegisterListResponse &ns1__AdminGetRegisterListResponse)
{	struct soap *soap = this;
	struct __ns1__AdminGetRegisterList_ soap_tmp___ns1__AdminGetRegisterList_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/AdminGetRegisterList";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AdminGetRegisterList_.ns1__AdminGetRegisterList = ns1__AdminGetRegisterList;
	soap_serializeheader(soap);
	soap_serialize___ns1__AdminGetRegisterList_(soap, &soap_tmp___ns1__AdminGetRegisterList_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AdminGetRegisterList_(soap, &soap_tmp___ns1__AdminGetRegisterList_, "-ns1:AdminGetRegisterList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AdminGetRegisterList_(soap, &soap_tmp___ns1__AdminGetRegisterList_, "-ns1:AdminGetRegisterList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AdminGetRegisterListResponse)
		return soap_closesock(soap);
	ns1__AdminGetRegisterListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AdminGetRegisterListResponse.soap_get(soap, "ns1:AdminGetRegisterListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::MemberAddMember_(const char *endpoint, const char *soap_action, _ns1__MemberAddMember *ns1__MemberAddMember, _ns1__MemberAddMemberResponse &ns1__MemberAddMemberResponse)
{	struct soap *soap = this;
	struct __ns1__MemberAddMember_ soap_tmp___ns1__MemberAddMember_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/MemberAddMember";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__MemberAddMember_.ns1__MemberAddMember = ns1__MemberAddMember;
	soap_serializeheader(soap);
	soap_serialize___ns1__MemberAddMember_(soap, &soap_tmp___ns1__MemberAddMember_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__MemberAddMember_(soap, &soap_tmp___ns1__MemberAddMember_, "-ns1:MemberAddMember", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__MemberAddMember_(soap, &soap_tmp___ns1__MemberAddMember_, "-ns1:MemberAddMember", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__MemberAddMemberResponse)
		return soap_closesock(soap);
	ns1__MemberAddMemberResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__MemberAddMemberResponse.soap_get(soap, "ns1:MemberAddMemberResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::MemberModifyMember_(const char *endpoint, const char *soap_action, _ns1__MemberModifyMember *ns1__MemberModifyMember, _ns1__MemberModifyMemberResponse &ns1__MemberModifyMemberResponse)
{	struct soap *soap = this;
	struct __ns1__MemberModifyMember_ soap_tmp___ns1__MemberModifyMember_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/MemberModifyMember";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__MemberModifyMember_.ns1__MemberModifyMember = ns1__MemberModifyMember;
	soap_serializeheader(soap);
	soap_serialize___ns1__MemberModifyMember_(soap, &soap_tmp___ns1__MemberModifyMember_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__MemberModifyMember_(soap, &soap_tmp___ns1__MemberModifyMember_, "-ns1:MemberModifyMember", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__MemberModifyMember_(soap, &soap_tmp___ns1__MemberModifyMember_, "-ns1:MemberModifyMember", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__MemberModifyMemberResponse)
		return soap_closesock(soap);
	ns1__MemberModifyMemberResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__MemberModifyMemberResponse.soap_get(soap, "ns1:MemberModifyMemberResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::MemberRemoveMember_(const char *endpoint, const char *soap_action, _ns1__MemberRemoveMember *ns1__MemberRemoveMember, _ns1__MemberRemoveMemberResponse &ns1__MemberRemoveMemberResponse)
{	struct soap *soap = this;
	struct __ns1__MemberRemoveMember_ soap_tmp___ns1__MemberRemoveMember_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/MemberRemoveMember";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__MemberRemoveMember_.ns1__MemberRemoveMember = ns1__MemberRemoveMember;
	soap_serializeheader(soap);
	soap_serialize___ns1__MemberRemoveMember_(soap, &soap_tmp___ns1__MemberRemoveMember_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__MemberRemoveMember_(soap, &soap_tmp___ns1__MemberRemoveMember_, "-ns1:MemberRemoveMember", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__MemberRemoveMember_(soap, &soap_tmp___ns1__MemberRemoveMember_, "-ns1:MemberRemoveMember", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__MemberRemoveMemberResponse)
		return soap_closesock(soap);
	ns1__MemberRemoveMemberResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__MemberRemoveMemberResponse.soap_get(soap, "ns1:MemberRemoveMemberResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::MemberLogin_(const char *endpoint, const char *soap_action, _ns1__MemberLogin *ns1__MemberLogin, _ns1__MemberLoginResponse &ns1__MemberLoginResponse)
{	struct soap *soap = this;
	struct __ns1__MemberLogin_ soap_tmp___ns1__MemberLogin_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/MemberLogin";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__MemberLogin_.ns1__MemberLogin = ns1__MemberLogin;
	soap_serializeheader(soap);
	soap_serialize___ns1__MemberLogin_(soap, &soap_tmp___ns1__MemberLogin_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__MemberLogin_(soap, &soap_tmp___ns1__MemberLogin_, "-ns1:MemberLogin", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__MemberLogin_(soap, &soap_tmp___ns1__MemberLogin_, "-ns1:MemberLogin", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__MemberLoginResponse)
		return soap_closesock(soap);
	ns1__MemberLoginResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__MemberLoginResponse.soap_get(soap, "ns1:MemberLoginResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::MemberLogout_(const char *endpoint, const char *soap_action, _ns1__MemberLogout *ns1__MemberLogout, _ns1__MemberLogoutResponse &ns1__MemberLogoutResponse)
{	struct soap *soap = this;
	struct __ns1__MemberLogout_ soap_tmp___ns1__MemberLogout_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/MemberLogout";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__MemberLogout_.ns1__MemberLogout = ns1__MemberLogout;
	soap_serializeheader(soap);
	soap_serialize___ns1__MemberLogout_(soap, &soap_tmp___ns1__MemberLogout_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__MemberLogout_(soap, &soap_tmp___ns1__MemberLogout_, "-ns1:MemberLogout", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__MemberLogout_(soap, &soap_tmp___ns1__MemberLogout_, "-ns1:MemberLogout", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__MemberLogoutResponse)
		return soap_closesock(soap);
	ns1__MemberLogoutResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__MemberLogoutResponse.soap_get(soap, "ns1:MemberLogoutResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::MemberApplyRegistration_(const char *endpoint, const char *soap_action, _ns1__MemberApplyRegistration *ns1__MemberApplyRegistration, _ns1__MemberApplyRegistrationResponse &ns1__MemberApplyRegistrationResponse)
{	struct soap *soap = this;
	struct __ns1__MemberApplyRegistration_ soap_tmp___ns1__MemberApplyRegistration_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/MemberApplyRegistration";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__MemberApplyRegistration_.ns1__MemberApplyRegistration = ns1__MemberApplyRegistration;
	soap_serializeheader(soap);
	soap_serialize___ns1__MemberApplyRegistration_(soap, &soap_tmp___ns1__MemberApplyRegistration_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__MemberApplyRegistration_(soap, &soap_tmp___ns1__MemberApplyRegistration_, "-ns1:MemberApplyRegistration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__MemberApplyRegistration_(soap, &soap_tmp___ns1__MemberApplyRegistration_, "-ns1:MemberApplyRegistration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__MemberApplyRegistrationResponse)
		return soap_closesock(soap);
	ns1__MemberApplyRegistrationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__MemberApplyRegistrationResponse.soap_get(soap, "ns1:MemberApplyRegistrationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::MemberModifyMemberLicense_(const char *endpoint, const char *soap_action, _ns1__MemberModifyMemberLicense *ns1__MemberModifyMemberLicense, _ns1__MemberModifyMemberLicenseResponse &ns1__MemberModifyMemberLicenseResponse)
{	struct soap *soap = this;
	struct __ns1__MemberModifyMemberLicense_ soap_tmp___ns1__MemberModifyMemberLicense_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/MemberModifyMemberLicense";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__MemberModifyMemberLicense_.ns1__MemberModifyMemberLicense = ns1__MemberModifyMemberLicense;
	soap_serializeheader(soap);
	soap_serialize___ns1__MemberModifyMemberLicense_(soap, &soap_tmp___ns1__MemberModifyMemberLicense_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__MemberModifyMemberLicense_(soap, &soap_tmp___ns1__MemberModifyMemberLicense_, "-ns1:MemberModifyMemberLicense", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__MemberModifyMemberLicense_(soap, &soap_tmp___ns1__MemberModifyMemberLicense_, "-ns1:MemberModifyMemberLicense", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__MemberModifyMemberLicenseResponse)
		return soap_closesock(soap);
	ns1__MemberModifyMemberLicenseResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__MemberModifyMemberLicenseResponse.soap_get(soap, "ns1:MemberModifyMemberLicenseResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::MemberGetMemberList_(const char *endpoint, const char *soap_action, _ns1__MemberGetMemberList *ns1__MemberGetMemberList, _ns1__MemberGetMemberListResponse &ns1__MemberGetMemberListResponse)
{	struct soap *soap = this;
	struct __ns1__MemberGetMemberList_ soap_tmp___ns1__MemberGetMemberList_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/MemberGetMemberList";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__MemberGetMemberList_.ns1__MemberGetMemberList = ns1__MemberGetMemberList;
	soap_serializeheader(soap);
	soap_serialize___ns1__MemberGetMemberList_(soap, &soap_tmp___ns1__MemberGetMemberList_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__MemberGetMemberList_(soap, &soap_tmp___ns1__MemberGetMemberList_, "-ns1:MemberGetMemberList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__MemberGetMemberList_(soap, &soap_tmp___ns1__MemberGetMemberList_, "-ns1:MemberGetMemberList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__MemberGetMemberListResponse)
		return soap_closesock(soap);
	ns1__MemberGetMemberListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__MemberGetMemberListResponse.soap_get(soap, "ns1:MemberGetMemberListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::MemberGetMemberLicenseList_(const char *endpoint, const char *soap_action, _ns1__MemberGetMemberLicenseList *ns1__MemberGetMemberLicenseList, _ns1__MemberGetMemberLicenseListResponse &ns1__MemberGetMemberLicenseListResponse)
{	struct soap *soap = this;
	struct __ns1__MemberGetMemberLicenseList_ soap_tmp___ns1__MemberGetMemberLicenseList_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/MemberGetMemberLicenseList";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__MemberGetMemberLicenseList_.ns1__MemberGetMemberLicenseList = ns1__MemberGetMemberLicenseList;
	soap_serializeheader(soap);
	soap_serialize___ns1__MemberGetMemberLicenseList_(soap, &soap_tmp___ns1__MemberGetMemberLicenseList_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__MemberGetMemberLicenseList_(soap, &soap_tmp___ns1__MemberGetMemberLicenseList_, "-ns1:MemberGetMemberLicenseList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__MemberGetMemberLicenseList_(soap, &soap_tmp___ns1__MemberGetMemberLicenseList_, "-ns1:MemberGetMemberLicenseList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__MemberGetMemberLicenseListResponse)
		return soap_closesock(soap);
	ns1__MemberGetMemberLicenseListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__MemberGetMemberLicenseListResponse.soap_get(soap, "ns1:MemberGetMemberLicenseListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::AdminDeleteRecord_(const char *endpoint, const char *soap_action, _ns1__AdminDeleteRecord *ns1__AdminDeleteRecord, _ns1__AdminDeleteRecordResponse &ns1__AdminDeleteRecordResponse)
{	struct soap *soap = this;
	struct __ns1__AdminDeleteRecord_ soap_tmp___ns1__AdminDeleteRecord_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/AdminDeleteRecord";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AdminDeleteRecord_.ns1__AdminDeleteRecord = ns1__AdminDeleteRecord;
	soap_serializeheader(soap);
	soap_serialize___ns1__AdminDeleteRecord_(soap, &soap_tmp___ns1__AdminDeleteRecord_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AdminDeleteRecord_(soap, &soap_tmp___ns1__AdminDeleteRecord_, "-ns1:AdminDeleteRecord", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AdminDeleteRecord_(soap, &soap_tmp___ns1__AdminDeleteRecord_, "-ns1:AdminDeleteRecord", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AdminDeleteRecordResponse)
		return soap_closesock(soap);
	ns1__AdminDeleteRecordResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AdminDeleteRecordResponse.soap_get(soap, "ns1:AdminDeleteRecordResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::AdminAdmitModifyLyric_(const char *endpoint, const char *soap_action, _ns1__AdminAdmitModifyLyric *ns1__AdminAdmitModifyLyric, _ns1__AdminAdmitModifyLyricResponse &ns1__AdminAdmitModifyLyricResponse)
{	struct soap *soap = this;
	struct __ns1__AdminAdmitModifyLyric_ soap_tmp___ns1__AdminAdmitModifyLyric_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/AdminAdmitModifyLyric";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AdminAdmitModifyLyric_.ns1__AdminAdmitModifyLyric = ns1__AdminAdmitModifyLyric;
	soap_serializeheader(soap);
	soap_serialize___ns1__AdminAdmitModifyLyric_(soap, &soap_tmp___ns1__AdminAdmitModifyLyric_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AdminAdmitModifyLyric_(soap, &soap_tmp___ns1__AdminAdmitModifyLyric_, "-ns1:AdminAdmitModifyLyric", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AdminAdmitModifyLyric_(soap, &soap_tmp___ns1__AdminAdmitModifyLyric_, "-ns1:AdminAdmitModifyLyric", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AdminAdmitModifyLyricResponse)
		return soap_closesock(soap);
	ns1__AdminAdmitModifyLyricResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AdminAdmitModifyLyricResponse.soap_get(soap, "ns1:AdminAdmitModifyLyricResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::AdminReportBlackList_(const char *endpoint, const char *soap_action, _ns1__AdminReportBlackList *ns1__AdminReportBlackList, _ns1__AdminReportBlackListResponse &ns1__AdminReportBlackListResponse)
{	struct soap *soap = this;
	struct __ns1__AdminReportBlackList_ soap_tmp___ns1__AdminReportBlackList_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/AdminReportBlackList";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AdminReportBlackList_.ns1__AdminReportBlackList = ns1__AdminReportBlackList;
	soap_serializeheader(soap);
	soap_serialize___ns1__AdminReportBlackList_(soap, &soap_tmp___ns1__AdminReportBlackList_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AdminReportBlackList_(soap, &soap_tmp___ns1__AdminReportBlackList_, "-ns1:AdminReportBlackList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AdminReportBlackList_(soap, &soap_tmp___ns1__AdminReportBlackList_, "-ns1:AdminReportBlackList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AdminReportBlackListResponse)
		return soap_closesock(soap);
	ns1__AdminReportBlackListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AdminReportBlackListResponse.soap_get(soap, "ns1:AdminReportBlackListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::AdminGetCountInRegister_(const char *endpoint, const char *soap_action, _ns1__AdminGetCountInRegister *ns1__AdminGetCountInRegister, _ns1__AdminGetCountInRegisterResponse &ns1__AdminGetCountInRegisterResponse)
{	struct soap *soap = this;
	struct __ns1__AdminGetCountInRegister_ soap_tmp___ns1__AdminGetCountInRegister_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/AdminGetCountInRegister";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AdminGetCountInRegister_.ns1__AdminGetCountInRegister = ns1__AdminGetCountInRegister;
	soap_serializeheader(soap);
	soap_serialize___ns1__AdminGetCountInRegister_(soap, &soap_tmp___ns1__AdminGetCountInRegister_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AdminGetCountInRegister_(soap, &soap_tmp___ns1__AdminGetCountInRegister_, "-ns1:AdminGetCountInRegister", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AdminGetCountInRegister_(soap, &soap_tmp___ns1__AdminGetCountInRegister_, "-ns1:AdminGetCountInRegister", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AdminGetCountInRegisterResponse)
		return soap_closesock(soap);
	ns1__AdminGetCountInRegisterResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AdminGetCountInRegisterResponse.soap_get(soap, "ns1:AdminGetCountInRegisterResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::AdminGetCountChecksum_(const char *endpoint, const char *soap_action, _ns1__AdminGetCountChecksum *ns1__AdminGetCountChecksum, _ns1__AdminGetCountChecksumResponse &ns1__AdminGetCountChecksumResponse)
{	struct soap *soap = this;
	struct __ns1__AdminGetCountChecksum_ soap_tmp___ns1__AdminGetCountChecksum_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/AdminGetCountChecksum";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AdminGetCountChecksum_.ns1__AdminGetCountChecksum = ns1__AdminGetCountChecksum;
	soap_serializeheader(soap);
	soap_serialize___ns1__AdminGetCountChecksum_(soap, &soap_tmp___ns1__AdminGetCountChecksum_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AdminGetCountChecksum_(soap, &soap_tmp___ns1__AdminGetCountChecksum_, "-ns1:AdminGetCountChecksum", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AdminGetCountChecksum_(soap, &soap_tmp___ns1__AdminGetCountChecksum_, "-ns1:AdminGetCountChecksum", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AdminGetCountChecksumResponse)
		return soap_closesock(soap);
	ns1__AdminGetCountChecksumResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AdminGetCountChecksumResponse.soap_get(soap, "ns1:AdminGetCountChecksumResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::AdminGetCountLyric_(const char *endpoint, const char *soap_action, _ns1__AdminGetCountLyric *ns1__AdminGetCountLyric, _ns1__AdminGetCountLyricResponse &ns1__AdminGetCountLyricResponse)
{	struct soap *soap = this;
	struct __ns1__AdminGetCountLyric_ soap_tmp___ns1__AdminGetCountLyric_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/AdminGetCountLyric";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AdminGetCountLyric_.ns1__AdminGetCountLyric = ns1__AdminGetCountLyric;
	soap_serializeheader(soap);
	soap_serialize___ns1__AdminGetCountLyric_(soap, &soap_tmp___ns1__AdminGetCountLyric_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AdminGetCountLyric_(soap, &soap_tmp___ns1__AdminGetCountLyric_, "-ns1:AdminGetCountLyric", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AdminGetCountLyric_(soap, &soap_tmp___ns1__AdminGetCountLyric_, "-ns1:AdminGetCountLyric", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AdminGetCountLyricResponse)
		return soap_closesock(soap);
	ns1__AdminGetCountLyricResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AdminGetCountLyricResponse.soap_get(soap, "ns1:AdminGetCountLyricResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::AdminGetCountModify_(const char *endpoint, const char *soap_action, _ns1__AdminGetCountModify *ns1__AdminGetCountModify, _ns1__AdminGetCountModifyResponse &ns1__AdminGetCountModifyResponse)
{	struct soap *soap = this;
	struct __ns1__AdminGetCountModify_ soap_tmp___ns1__AdminGetCountModify_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/AdminGetCountModify";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AdminGetCountModify_.ns1__AdminGetCountModify = ns1__AdminGetCountModify;
	soap_serializeheader(soap);
	soap_serialize___ns1__AdminGetCountModify_(soap, &soap_tmp___ns1__AdminGetCountModify_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AdminGetCountModify_(soap, &soap_tmp___ns1__AdminGetCountModify_, "-ns1:AdminGetCountModify", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AdminGetCountModify_(soap, &soap_tmp___ns1__AdminGetCountModify_, "-ns1:AdminGetCountModify", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AdminGetCountModifyResponse)
		return soap_closesock(soap);
	ns1__AdminGetCountModifyResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AdminGetCountModifyResponse.soap_get(soap, "ns1:AdminGetCountModifyResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::AdminGetCountReport_(const char *endpoint, const char *soap_action, _ns1__AdminGetCountReport *ns1__AdminGetCountReport, _ns1__AdminGetCountReportResponse &ns1__AdminGetCountReportResponse)
{	struct soap *soap = this;
	struct __ns1__AdminGetCountReport_ soap_tmp___ns1__AdminGetCountReport_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/AdminGetCountReport";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AdminGetCountReport_.ns1__AdminGetCountReport = ns1__AdminGetCountReport;
	soap_serializeheader(soap);
	soap_serialize___ns1__AdminGetCountReport_(soap, &soap_tmp___ns1__AdminGetCountReport_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AdminGetCountReport_(soap, &soap_tmp___ns1__AdminGetCountReport_, "-ns1:AdminGetCountReport", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AdminGetCountReport_(soap, &soap_tmp___ns1__AdminGetCountReport_, "-ns1:AdminGetCountReport", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AdminGetCountReportResponse)
		return soap_closesock(soap);
	ns1__AdminGetCountReportResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AdminGetCountReportResponse.soap_get(soap, "ns1:AdminGetCountReportResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::AdminGetAlbaStatistic_(const char *endpoint, const char *soap_action, _ns1__AdminGetAlbaStatistic *ns1__AdminGetAlbaStatistic, _ns1__AdminGetAlbaStatisticResponse &ns1__AdminGetAlbaStatisticResponse)
{	struct soap *soap = this;
	struct __ns1__AdminGetAlbaStatistic_ soap_tmp___ns1__AdminGetAlbaStatistic_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/AdminGetAlbaStatistic";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AdminGetAlbaStatistic_.ns1__AdminGetAlbaStatistic = ns1__AdminGetAlbaStatistic;
	soap_serializeheader(soap);
	soap_serialize___ns1__AdminGetAlbaStatistic_(soap, &soap_tmp___ns1__AdminGetAlbaStatistic_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AdminGetAlbaStatistic_(soap, &soap_tmp___ns1__AdminGetAlbaStatistic_, "-ns1:AdminGetAlbaStatistic", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AdminGetAlbaStatistic_(soap, &soap_tmp___ns1__AdminGetAlbaStatistic_, "-ns1:AdminGetAlbaStatistic", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AdminGetAlbaStatisticResponse)
		return soap_closesock(soap);
	ns1__AdminGetAlbaStatisticResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AdminGetAlbaStatisticResponse.soap_get(soap, "ns1:AdminGetAlbaStatisticResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::CastUploadExMetaData_(const char *endpoint, const char *soap_action, _ns1__CastUploadExMetaData *ns1__CastUploadExMetaData, _ns1__CastUploadExMetaDataResponse &ns1__CastUploadExMetaDataResponse)
{	struct soap *soap = this;
	struct __ns1__CastUploadExMetaData_ soap_tmp___ns1__CastUploadExMetaData_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/CastUploadExMetaData";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__CastUploadExMetaData_.ns1__CastUploadExMetaData = ns1__CastUploadExMetaData;
	soap_serializeheader(soap);
	soap_serialize___ns1__CastUploadExMetaData_(soap, &soap_tmp___ns1__CastUploadExMetaData_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CastUploadExMetaData_(soap, &soap_tmp___ns1__CastUploadExMetaData_, "-ns1:CastUploadExMetaData", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CastUploadExMetaData_(soap, &soap_tmp___ns1__CastUploadExMetaData_, "-ns1:CastUploadExMetaData", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__CastUploadExMetaDataResponse)
		return soap_closesock(soap);
	ns1__CastUploadExMetaDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CastUploadExMetaDataResponse.soap_get(soap, "ns1:CastUploadExMetaDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::CastUploadExMetaData2_(const char *endpoint, const char *soap_action, _ns1__CastUploadExMetaData2 *ns1__CastUploadExMetaData2, _ns1__CastUploadExMetaData2Response &ns1__CastUploadExMetaData2Response)
{	struct soap *soap = this;
	struct __ns1__CastUploadExMetaData2_ soap_tmp___ns1__CastUploadExMetaData2_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/CastUploadExMetaData2";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__CastUploadExMetaData2_.ns1__CastUploadExMetaData2 = ns1__CastUploadExMetaData2;
	soap_serializeheader(soap);
	soap_serialize___ns1__CastUploadExMetaData2_(soap, &soap_tmp___ns1__CastUploadExMetaData2_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CastUploadExMetaData2_(soap, &soap_tmp___ns1__CastUploadExMetaData2_, "-ns1:CastUploadExMetaData2", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CastUploadExMetaData2_(soap, &soap_tmp___ns1__CastUploadExMetaData2_, "-ns1:CastUploadExMetaData2", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__CastUploadExMetaData2Response)
		return soap_closesock(soap);
	ns1__CastUploadExMetaData2Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CastUploadExMetaData2Response.soap_get(soap, "ns1:CastUploadExMetaData2Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::CastUploadExMetaData3_(const char *endpoint, const char *soap_action, _ns1__CastUploadExMetaData3 *ns1__CastUploadExMetaData3, _ns1__CastUploadExMetaData3Response &ns1__CastUploadExMetaData3Response)
{	struct soap *soap = this;
	struct __ns1__CastUploadExMetaData3_ soap_tmp___ns1__CastUploadExMetaData3_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/CastUploadExMetaData3";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__CastUploadExMetaData3_.ns1__CastUploadExMetaData3 = ns1__CastUploadExMetaData3;
	soap_serializeheader(soap);
	soap_serialize___ns1__CastUploadExMetaData3_(soap, &soap_tmp___ns1__CastUploadExMetaData3_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CastUploadExMetaData3_(soap, &soap_tmp___ns1__CastUploadExMetaData3_, "-ns1:CastUploadExMetaData3", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CastUploadExMetaData3_(soap, &soap_tmp___ns1__CastUploadExMetaData3_, "-ns1:CastUploadExMetaData3", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__CastUploadExMetaData3Response)
		return soap_closesock(soap);
	ns1__CastUploadExMetaData3Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CastUploadExMetaData3Response.soap_get(soap, "ns1:CastUploadExMetaData3Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::CastRemoveExMetaData_(const char *endpoint, const char *soap_action, _ns1__CastRemoveExMetaData *ns1__CastRemoveExMetaData, _ns1__CastRemoveExMetaDataResponse &ns1__CastRemoveExMetaDataResponse)
{	struct soap *soap = this;
	struct __ns1__CastRemoveExMetaData_ soap_tmp___ns1__CastRemoveExMetaData_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/CastRemoveExMetaData";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__CastRemoveExMetaData_.ns1__CastRemoveExMetaData = ns1__CastRemoveExMetaData;
	soap_serializeheader(soap);
	soap_serialize___ns1__CastRemoveExMetaData_(soap, &soap_tmp___ns1__CastRemoveExMetaData_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CastRemoveExMetaData_(soap, &soap_tmp___ns1__CastRemoveExMetaData_, "-ns1:CastRemoveExMetaData", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CastRemoveExMetaData_(soap, &soap_tmp___ns1__CastRemoveExMetaData_, "-ns1:CastRemoveExMetaData", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__CastRemoveExMetaDataResponse)
		return soap_closesock(soap);
	ns1__CastRemoveExMetaDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CastRemoveExMetaDataResponse.soap_get(soap, "ns1:CastRemoveExMetaDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::CastGetExMetaData_(const char *endpoint, const char *soap_action, _ns1__CastGetExMetaData *ns1__CastGetExMetaData, _ns1__CastGetExMetaDataResponse &ns1__CastGetExMetaDataResponse)
{	struct soap *soap = this;
	struct __ns1__CastGetExMetaData_ soap_tmp___ns1__CastGetExMetaData_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/CastGetExMetaData";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__CastGetExMetaData_.ns1__CastGetExMetaData = ns1__CastGetExMetaData;
	soap_serializeheader(soap);
	soap_serialize___ns1__CastGetExMetaData_(soap, &soap_tmp___ns1__CastGetExMetaData_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CastGetExMetaData_(soap, &soap_tmp___ns1__CastGetExMetaData_, "-ns1:CastGetExMetaData", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CastGetExMetaData_(soap, &soap_tmp___ns1__CastGetExMetaData_, "-ns1:CastGetExMetaData", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__CastGetExMetaDataResponse)
		return soap_closesock(soap);
	ns1__CastGetExMetaDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CastGetExMetaDataResponse.soap_get(soap, "ns1:CastGetExMetaDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::CastGetExMetaDataList_(const char *endpoint, const char *soap_action, _ns1__CastGetExMetaDataList *ns1__CastGetExMetaDataList, _ns1__CastGetExMetaDataListResponse &ns1__CastGetExMetaDataListResponse)
{	struct soap *soap = this;
	struct __ns1__CastGetExMetaDataList_ soap_tmp___ns1__CastGetExMetaDataList_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/CastGetExMetaDataList";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__CastGetExMetaDataList_.ns1__CastGetExMetaDataList = ns1__CastGetExMetaDataList;
	soap_serializeheader(soap);
	soap_serialize___ns1__CastGetExMetaDataList_(soap, &soap_tmp___ns1__CastGetExMetaDataList_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CastGetExMetaDataList_(soap, &soap_tmp___ns1__CastGetExMetaDataList_, "-ns1:CastGetExMetaDataList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CastGetExMetaDataList_(soap, &soap_tmp___ns1__CastGetExMetaDataList_, "-ns1:CastGetExMetaDataList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__CastGetExMetaDataListResponse)
		return soap_closesock(soap);
	ns1__CastGetExMetaDataListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CastGetExMetaDataListResponse.soap_get(soap, "ns1:CastGetExMetaDataListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::CastGetExMetaDataList2_(const char *endpoint, const char *soap_action, _ns1__CastGetExMetaDataList2 *ns1__CastGetExMetaDataList2, _ns1__CastGetExMetaDataList2Response &ns1__CastGetExMetaDataList2Response)
{	struct soap *soap = this;
	struct __ns1__CastGetExMetaDataList2_ soap_tmp___ns1__CastGetExMetaDataList2_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/CastGetExMetaDataList2";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__CastGetExMetaDataList2_.ns1__CastGetExMetaDataList2 = ns1__CastGetExMetaDataList2;
	soap_serializeheader(soap);
	soap_serialize___ns1__CastGetExMetaDataList2_(soap, &soap_tmp___ns1__CastGetExMetaDataList2_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CastGetExMetaDataList2_(soap, &soap_tmp___ns1__CastGetExMetaDataList2_, "-ns1:CastGetExMetaDataList2", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CastGetExMetaDataList2_(soap, &soap_tmp___ns1__CastGetExMetaDataList2_, "-ns1:CastGetExMetaDataList2", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__CastGetExMetaDataList2Response)
		return soap_closesock(soap);
	ns1__CastGetExMetaDataList2Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CastGetExMetaDataList2Response.soap_get(soap, "ns1:CastGetExMetaDataList2Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::CastGetExMetaDataList3_(const char *endpoint, const char *soap_action, _ns1__CastGetExMetaDataList3 *ns1__CastGetExMetaDataList3, _ns1__CastGetExMetaDataList3Response &ns1__CastGetExMetaDataList3Response)
{	struct soap *soap = this;
	struct __ns1__CastGetExMetaDataList3_ soap_tmp___ns1__CastGetExMetaDataList3_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/CastGetExMetaDataList3";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__CastGetExMetaDataList3_.ns1__CastGetExMetaDataList3 = ns1__CastGetExMetaDataList3;
	soap_serializeheader(soap);
	soap_serialize___ns1__CastGetExMetaDataList3_(soap, &soap_tmp___ns1__CastGetExMetaDataList3_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CastGetExMetaDataList3_(soap, &soap_tmp___ns1__CastGetExMetaDataList3_, "-ns1:CastGetExMetaDataList3", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CastGetExMetaDataList3_(soap, &soap_tmp___ns1__CastGetExMetaDataList3_, "-ns1:CastGetExMetaDataList3", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__CastGetExMetaDataList3Response)
		return soap_closesock(soap);
	ns1__CastGetExMetaDataList3Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CastGetExMetaDataList3Response.soap_get(soap, "ns1:CastGetExMetaDataList3Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::GetBroadcastingList_(const char *endpoint, const char *soap_action, _ns1__GetBroadcastingList *ns1__GetBroadcastingList, _ns1__GetBroadcastingListResponse &ns1__GetBroadcastingListResponse)
{	struct soap *soap = this;
	struct __ns1__GetBroadcastingList_ soap_tmp___ns1__GetBroadcastingList_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/GetBroadcastingList";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetBroadcastingList_.ns1__GetBroadcastingList = ns1__GetBroadcastingList;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetBroadcastingList_(soap, &soap_tmp___ns1__GetBroadcastingList_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetBroadcastingList_(soap, &soap_tmp___ns1__GetBroadcastingList_, "-ns1:GetBroadcastingList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetBroadcastingList_(soap, &soap_tmp___ns1__GetBroadcastingList_, "-ns1:GetBroadcastingList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetBroadcastingListResponse)
		return soap_closesock(soap);
	ns1__GetBroadcastingListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetBroadcastingListResponse.soap_get(soap, "ns1:GetBroadcastingListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::GetBroadcastingList2_(const char *endpoint, const char *soap_action, _ns1__GetBroadcastingList2 *ns1__GetBroadcastingList2, _ns1__GetBroadcastingList2Response &ns1__GetBroadcastingList2Response)
{	struct soap *soap = this;
	struct __ns1__GetBroadcastingList2_ soap_tmp___ns1__GetBroadcastingList2_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/GetBroadcastingList2";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetBroadcastingList2_.ns1__GetBroadcastingList2 = ns1__GetBroadcastingList2;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetBroadcastingList2_(soap, &soap_tmp___ns1__GetBroadcastingList2_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetBroadcastingList2_(soap, &soap_tmp___ns1__GetBroadcastingList2_, "-ns1:GetBroadcastingList2", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetBroadcastingList2_(soap, &soap_tmp___ns1__GetBroadcastingList2_, "-ns1:GetBroadcastingList2", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetBroadcastingList2Response)
		return soap_closesock(soap);
	ns1__GetBroadcastingList2Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetBroadcastingList2Response.soap_get(soap, "ns1:GetBroadcastingList2Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::UploadForeignLyric_(const char *endpoint, const char *soap_action, _ns1__UploadForeignLyric *ns1__UploadForeignLyric, _ns1__UploadForeignLyricResponse &ns1__UploadForeignLyricResponse)
{	struct soap *soap = this;
	struct __ns1__UploadForeignLyric_ soap_tmp___ns1__UploadForeignLyric_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/UploadForeignLyric";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__UploadForeignLyric_.ns1__UploadForeignLyric = ns1__UploadForeignLyric;
	soap_serializeheader(soap);
	soap_serialize___ns1__UploadForeignLyric_(soap, &soap_tmp___ns1__UploadForeignLyric_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__UploadForeignLyric_(soap, &soap_tmp___ns1__UploadForeignLyric_, "-ns1:UploadForeignLyric", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__UploadForeignLyric_(soap, &soap_tmp___ns1__UploadForeignLyric_, "-ns1:UploadForeignLyric", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__UploadForeignLyricResponse)
		return soap_closesock(soap);
	ns1__UploadForeignLyricResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__UploadForeignLyricResponse.soap_get(soap, "ns1:UploadForeignLyricResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::GetResembleLyricList_(const char *endpoint, const char *soap_action, _ns1__GetResembleLyricList *ns1__GetResembleLyricList, _ns1__GetResembleLyricListResponse &ns1__GetResembleLyricListResponse)
{	struct soap *soap = this;
	struct __ns1__GetResembleLyricList_ soap_tmp___ns1__GetResembleLyricList_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/GetResembleLyricList";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetResembleLyricList_.ns1__GetResembleLyricList = ns1__GetResembleLyricList;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetResembleLyricList_(soap, &soap_tmp___ns1__GetResembleLyricList_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetResembleLyricList_(soap, &soap_tmp___ns1__GetResembleLyricList_, "-ns1:GetResembleLyricList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetResembleLyricList_(soap, &soap_tmp___ns1__GetResembleLyricList_, "-ns1:GetResembleLyricList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetResembleLyricListResponse)
		return soap_closesock(soap);
	ns1__GetResembleLyricListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetResembleLyricListResponse.soap_get(soap, "ns1:GetResembleLyricListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::GetResembleLyricList2_(const char *endpoint, const char *soap_action, _ns1__GetResembleLyricList2 *ns1__GetResembleLyricList2, _ns1__GetResembleLyricList2Response &ns1__GetResembleLyricList2Response)
{	struct soap *soap = this;
	struct __ns1__GetResembleLyricList2_ soap_tmp___ns1__GetResembleLyricList2_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/GetResembleLyricList2";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetResembleLyricList2_.ns1__GetResembleLyricList2 = ns1__GetResembleLyricList2;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetResembleLyricList2_(soap, &soap_tmp___ns1__GetResembleLyricList2_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetResembleLyricList2_(soap, &soap_tmp___ns1__GetResembleLyricList2_, "-ns1:GetResembleLyricList2", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetResembleLyricList2_(soap, &soap_tmp___ns1__GetResembleLyricList2_, "-ns1:GetResembleLyricList2", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetResembleLyricList2Response)
		return soap_closesock(soap);
	ns1__GetResembleLyricList2Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetResembleLyricList2Response.soap_get(soap, "ns1:GetResembleLyricList2Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::GetLyricByID_(const char *endpoint, const char *soap_action, _ns1__GetLyricByID *ns1__GetLyricByID, _ns1__GetLyricByIDResponse &ns1__GetLyricByIDResponse)
{	struct soap *soap = this;
	struct __ns1__GetLyricByID_ soap_tmp___ns1__GetLyricByID_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/GetLyricByID";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetLyricByID_.ns1__GetLyricByID = ns1__GetLyricByID;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetLyricByID_(soap, &soap_tmp___ns1__GetLyricByID_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetLyricByID_(soap, &soap_tmp___ns1__GetLyricByID_, "-ns1:GetLyricByID", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetLyricByID_(soap, &soap_tmp___ns1__GetLyricByID_, "-ns1:GetLyricByID", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetLyricByIDResponse)
		return soap_closesock(soap);
	ns1__GetLyricByIDResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetLyricByIDResponse.soap_get(soap, "ns1:GetLyricByIDResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::GetLyricByID2_(const char *endpoint, const char *soap_action, _ns1__GetLyricByID2 *ns1__GetLyricByID2, _ns1__GetLyricByID2Response &ns1__GetLyricByID2Response)
{	struct soap *soap = this;
	struct __ns1__GetLyricByID2_ soap_tmp___ns1__GetLyricByID2_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/GetLyricByID2";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetLyricByID2_.ns1__GetLyricByID2 = ns1__GetLyricByID2;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetLyricByID2_(soap, &soap_tmp___ns1__GetLyricByID2_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetLyricByID2_(soap, &soap_tmp___ns1__GetLyricByID2_, "-ns1:GetLyricByID2", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetLyricByID2_(soap, &soap_tmp___ns1__GetLyricByID2_, "-ns1:GetLyricByID2", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetLyricByID2Response)
		return soap_closesock(soap);
	ns1__GetLyricByID2Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetLyricByID2Response.soap_get(soap, "ns1:GetLyricByID2Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::AdminJPNGetRightsInfoByModifyID_(const char *endpoint, const char *soap_action, _ns1__AdminJPNGetRightsInfoByModifyID *ns1__AdminJPNGetRightsInfoByModifyID, _ns1__AdminJPNGetRightsInfoByModifyIDResponse &ns1__AdminJPNGetRightsInfoByModifyIDResponse)
{	struct soap *soap = this;
	struct __ns1__AdminJPNGetRightsInfoByModifyID_ soap_tmp___ns1__AdminJPNGetRightsInfoByModifyID_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/AdminJPNGetRightsInfoByModifyID";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AdminJPNGetRightsInfoByModifyID_.ns1__AdminJPNGetRightsInfoByModifyID = ns1__AdminJPNGetRightsInfoByModifyID;
	soap_serializeheader(soap);
	soap_serialize___ns1__AdminJPNGetRightsInfoByModifyID_(soap, &soap_tmp___ns1__AdminJPNGetRightsInfoByModifyID_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AdminJPNGetRightsInfoByModifyID_(soap, &soap_tmp___ns1__AdminJPNGetRightsInfoByModifyID_, "-ns1:AdminJPNGetRightsInfoByModifyID", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AdminJPNGetRightsInfoByModifyID_(soap, &soap_tmp___ns1__AdminJPNGetRightsInfoByModifyID_, "-ns1:AdminJPNGetRightsInfoByModifyID", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AdminJPNGetRightsInfoByModifyIDResponse)
		return soap_closesock(soap);
	ns1__AdminJPNGetRightsInfoByModifyIDResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AdminJPNGetRightsInfoByModifyIDResponse.soap_get(soap, "ns1:AdminJPNGetRightsInfoByModifyIDResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::AdminJPNGetRightsInfoByLyricID_(const char *endpoint, const char *soap_action, _ns1__AdminJPNGetRightsInfoByLyricID *ns1__AdminJPNGetRightsInfoByLyricID, _ns1__AdminJPNGetRightsInfoByLyricIDResponse &ns1__AdminJPNGetRightsInfoByLyricIDResponse)
{	struct soap *soap = this;
	struct __ns1__AdminJPNGetRightsInfoByLyricID_ soap_tmp___ns1__AdminJPNGetRightsInfoByLyricID_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/AdminJPNGetRightsInfoByLyricID";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AdminJPNGetRightsInfoByLyricID_.ns1__AdminJPNGetRightsInfoByLyricID = ns1__AdminJPNGetRightsInfoByLyricID;
	soap_serializeheader(soap);
	soap_serialize___ns1__AdminJPNGetRightsInfoByLyricID_(soap, &soap_tmp___ns1__AdminJPNGetRightsInfoByLyricID_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AdminJPNGetRightsInfoByLyricID_(soap, &soap_tmp___ns1__AdminJPNGetRightsInfoByLyricID_, "-ns1:AdminJPNGetRightsInfoByLyricID", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AdminJPNGetRightsInfoByLyricID_(soap, &soap_tmp___ns1__AdminJPNGetRightsInfoByLyricID_, "-ns1:AdminJPNGetRightsInfoByLyricID", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AdminJPNGetRightsInfoByLyricIDResponse)
		return soap_closesock(soap);
	ns1__AdminJPNGetRightsInfoByLyricIDResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AdminJPNGetRightsInfoByLyricIDResponse.soap_get(soap, "ns1:AdminJPNGetRightsInfoByLyricIDResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::AdminJPNSetRightsInfo_(const char *endpoint, const char *soap_action, _ns1__AdminJPNSetRightsInfo *ns1__AdminJPNSetRightsInfo, _ns1__AdminJPNSetRightsInfoResponse &ns1__AdminJPNSetRightsInfoResponse)
{	struct soap *soap = this;
	struct __ns1__AdminJPNSetRightsInfo_ soap_tmp___ns1__AdminJPNSetRightsInfo_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/AdminJPNSetRightsInfo";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AdminJPNSetRightsInfo_.ns1__AdminJPNSetRightsInfo = ns1__AdminJPNSetRightsInfo;
	soap_serializeheader(soap);
	soap_serialize___ns1__AdminJPNSetRightsInfo_(soap, &soap_tmp___ns1__AdminJPNSetRightsInfo_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AdminJPNSetRightsInfo_(soap, &soap_tmp___ns1__AdminJPNSetRightsInfo_, "-ns1:AdminJPNSetRightsInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AdminJPNSetRightsInfo_(soap, &soap_tmp___ns1__AdminJPNSetRightsInfo_, "-ns1:AdminJPNSetRightsInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AdminJPNSetRightsInfoResponse)
		return soap_closesock(soap);
	ns1__AdminJPNSetRightsInfoResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AdminJPNSetRightsInfoResponse.soap_get(soap, "ns1:AdminJPNSetRightsInfoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::AdminJPNSearchRightsInfoList_(const char *endpoint, const char *soap_action, _ns1__AdminJPNSearchRightsInfoList *ns1__AdminJPNSearchRightsInfoList, _ns1__AdminJPNSearchRightsInfoListResponse &ns1__AdminJPNSearchRightsInfoListResponse)
{	struct soap *soap = this;
	struct __ns1__AdminJPNSearchRightsInfoList_ soap_tmp___ns1__AdminJPNSearchRightsInfoList_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/AdminJPNSearchRightsInfoList";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AdminJPNSearchRightsInfoList_.ns1__AdminJPNSearchRightsInfoList = ns1__AdminJPNSearchRightsInfoList;
	soap_serializeheader(soap);
	soap_serialize___ns1__AdminJPNSearchRightsInfoList_(soap, &soap_tmp___ns1__AdminJPNSearchRightsInfoList_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AdminJPNSearchRightsInfoList_(soap, &soap_tmp___ns1__AdminJPNSearchRightsInfoList_, "-ns1:AdminJPNSearchRightsInfoList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AdminJPNSearchRightsInfoList_(soap, &soap_tmp___ns1__AdminJPNSearchRightsInfoList_, "-ns1:AdminJPNSearchRightsInfoList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AdminJPNSearchRightsInfoListResponse)
		return soap_closesock(soap);
	ns1__AdminJPNSearchRightsInfoListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AdminJPNSearchRightsInfoListResponse.soap_get(soap, "ns1:AdminJPNSearchRightsInfoListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::AdminLoginRightsJPN_(const char *endpoint, const char *soap_action, _ns1__AdminLoginRightsJPN *ns1__AdminLoginRightsJPN, _ns1__AdminLoginRightsJPNResponse &ns1__AdminLoginRightsJPNResponse)
{	struct soap *soap = this;
	struct __ns1__AdminLoginRightsJPN_ soap_tmp___ns1__AdminLoginRightsJPN_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/AdminLoginRightsJPN";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AdminLoginRightsJPN_.ns1__AdminLoginRightsJPN = ns1__AdminLoginRightsJPN;
	soap_serializeheader(soap);
	soap_serialize___ns1__AdminLoginRightsJPN_(soap, &soap_tmp___ns1__AdminLoginRightsJPN_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AdminLoginRightsJPN_(soap, &soap_tmp___ns1__AdminLoginRightsJPN_, "-ns1:AdminLoginRightsJPN", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AdminLoginRightsJPN_(soap, &soap_tmp___ns1__AdminLoginRightsJPN_, "-ns1:AdminLoginRightsJPN", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AdminLoginRightsJPNResponse)
		return soap_closesock(soap);
	ns1__AdminLoginRightsJPNResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AdminLoginRightsJPNResponse.soap_get(soap, "ns1:AdminLoginRightsJPNResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::GetSearchLyricCount_(const char *endpoint, const char *soap_action, _ns1__GetSearchLyricCount *ns1__GetSearchLyricCount, _ns1__GetSearchLyricCountResponse &ns1__GetSearchLyricCountResponse)
{	struct soap *soap = this;
	struct __ns1__GetSearchLyricCount_ soap_tmp___ns1__GetSearchLyricCount_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/GetSearchLyricCount";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetSearchLyricCount_.ns1__GetSearchLyricCount = ns1__GetSearchLyricCount;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetSearchLyricCount_(soap, &soap_tmp___ns1__GetSearchLyricCount_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetSearchLyricCount_(soap, &soap_tmp___ns1__GetSearchLyricCount_, "-ns1:GetSearchLyricCount", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetSearchLyricCount_(soap, &soap_tmp___ns1__GetSearchLyricCount_, "-ns1:GetSearchLyricCount", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__GetSearchLyricCountResponse)
		return soap_closesock(soap);
	ns1__GetSearchLyricCountResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetSearchLyricCountResponse.soap_get(soap, "ns1:GetSearchLyricCountResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::AdminLoginLyricMonitor_(const char *endpoint, const char *soap_action, _ns1__AdminLoginLyricMonitor *ns1__AdminLoginLyricMonitor, _ns1__AdminLoginLyricMonitorResponse &ns1__AdminLoginLyricMonitorResponse)
{	struct soap *soap = this;
	struct __ns1__AdminLoginLyricMonitor_ soap_tmp___ns1__AdminLoginLyricMonitor_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/AdminLoginLyricMonitor";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AdminLoginLyricMonitor_.ns1__AdminLoginLyricMonitor = ns1__AdminLoginLyricMonitor;
	soap_serializeheader(soap);
	soap_serialize___ns1__AdminLoginLyricMonitor_(soap, &soap_tmp___ns1__AdminLoginLyricMonitor_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AdminLoginLyricMonitor_(soap, &soap_tmp___ns1__AdminLoginLyricMonitor_, "-ns1:AdminLoginLyricMonitor", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AdminLoginLyricMonitor_(soap, &soap_tmp___ns1__AdminLoginLyricMonitor_, "-ns1:AdminLoginLyricMonitor", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AdminLoginLyricMonitorResponse)
		return soap_closesock(soap);
	ns1__AdminLoginLyricMonitorResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AdminLoginLyricMonitorResponse.soap_get(soap, "ns1:AdminLoginLyricMonitorResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::AdminGetLyrics_(const char *endpoint, const char *soap_action, _ns1__AdminGetLyrics *ns1__AdminGetLyrics, _ns1__AdminGetLyricsResponse &ns1__AdminGetLyricsResponse)
{	struct soap *soap = this;
	struct __ns1__AdminGetLyrics_ soap_tmp___ns1__AdminGetLyrics_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/AdminGetLyrics";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AdminGetLyrics_.ns1__AdminGetLyrics = ns1__AdminGetLyrics;
	soap_serializeheader(soap);
	soap_serialize___ns1__AdminGetLyrics_(soap, &soap_tmp___ns1__AdminGetLyrics_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AdminGetLyrics_(soap, &soap_tmp___ns1__AdminGetLyrics_, "-ns1:AdminGetLyrics", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AdminGetLyrics_(soap, &soap_tmp___ns1__AdminGetLyrics_, "-ns1:AdminGetLyrics", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AdminGetLyricsResponse)
		return soap_closesock(soap);
	ns1__AdminGetLyricsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AdminGetLyricsResponse.soap_get(soap, "ns1:AdminGetLyricsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::AdminDeleteLyrics_(const char *endpoint, const char *soap_action, _ns1__AdminDeleteLyrics *ns1__AdminDeleteLyrics, _ns1__AdminDeleteLyricsResponse &ns1__AdminDeleteLyricsResponse)
{	struct soap *soap = this;
	struct __ns1__AdminDeleteLyrics_ soap_tmp___ns1__AdminDeleteLyrics_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/AdminDeleteLyrics";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AdminDeleteLyrics_.ns1__AdminDeleteLyrics = ns1__AdminDeleteLyrics;
	soap_serializeheader(soap);
	soap_serialize___ns1__AdminDeleteLyrics_(soap, &soap_tmp___ns1__AdminDeleteLyrics_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AdminDeleteLyrics_(soap, &soap_tmp___ns1__AdminDeleteLyrics_, "-ns1:AdminDeleteLyrics", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AdminDeleteLyrics_(soap, &soap_tmp___ns1__AdminDeleteLyrics_, "-ns1:AdminDeleteLyrics", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AdminDeleteLyricsResponse)
		return soap_closesock(soap);
	ns1__AdminDeleteLyricsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AdminDeleteLyricsResponse.soap_get(soap, "ns1:AdminDeleteLyricsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Service1SoapProxy::AdminGetLatestLyricID_(const char *endpoint, const char *soap_action, _ns1__AdminGetLatestLyricID *ns1__AdminGetLatestLyricID, _ns1__AdminGetLatestLyricIDResponse &ns1__AdminGetLatestLyricIDResponse)
{	struct soap *soap = this;
	struct __ns1__AdminGetLatestLyricID_ soap_tmp___ns1__AdminGetLatestLyricID_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://lyrics.alsong.co.kr/alsongwebservice/service1.asmx";
	if (soap_action == NULL)
		soap_action = "ALSongWebServer/AdminGetLatestLyricID";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__AdminGetLatestLyricID_.ns1__AdminGetLatestLyricID = ns1__AdminGetLatestLyricID;
	soap_serializeheader(soap);
	soap_serialize___ns1__AdminGetLatestLyricID_(soap, &soap_tmp___ns1__AdminGetLatestLyricID_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AdminGetLatestLyricID_(soap, &soap_tmp___ns1__AdminGetLatestLyricID_, "-ns1:AdminGetLatestLyricID", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AdminGetLatestLyricID_(soap, &soap_tmp___ns1__AdminGetLatestLyricID_, "-ns1:AdminGetLatestLyricID", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__AdminGetLatestLyricIDResponse)
		return soap_closesock(soap);
	ns1__AdminGetLatestLyricIDResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AdminGetLatestLyricIDResponse.soap_get(soap, "ns1:AdminGetLatestLyricIDResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
