/* AlsongAPIStub.h
   Generated by gSOAP 2.8.21 from alsongapi.h

Copyright(C) 2000-2014, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef AlsongAPIStub_H
#define AlsongAPIStub_H
#include <vector>
#define SOAP_NAMESPACE_OF_ns1	"ALSongWebServer"
#ifndef WITH_NONAMESPACES
#define WITH_NONAMESPACES
#endif
#include "stdsoap2.h"
#if GSOAP_VERSION != 20821
# error "GSOAP VERSION 20821 MISMATCH IN GENERATED CODE VERSUS LIBRARY CODE: PLEASE REINSTALL PACKAGE"
#endif


/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE_xsd__base64Binary
#define SOAP_TYPE_xsd__base64Binary (8)
/* Base64 schema type: */
class SOAP_CMAC xsd__base64Binary
{
public:
	unsigned char *__ptr;
	int __size;
	char *id;	/* optional element of type xsd:string */
	char *type;	/* optional element of type xsd:string */
	char *options;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 8; } /* = unique type id SOAP_TYPE_xsd__base64Binary */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__base64Binary() { xsd__base64Binary::soap_default(NULL); }
	virtual ~xsd__base64Binary() { }
};
#endif

#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE_ns1__ST_USCOREMUREKAINFO_USCORESERVICE
#define SOAP_TYPE_ns1__ST_USCOREMUREKAINFO_USCORESERVICE (14)
/* ns1:ST_MUREKAINFO_SERVICE */
class SOAP_CMAC ns1__ST_USCOREMUREKAINFO_USCORESERVICE
{
public:
	int murekaID;	/* required element of type xsd:int */
	std::string *title;	/* optional element of type xsd:string */
	std::string *artist;	/* optional element of type xsd:string */
	std::string *album;	/* optional element of type xsd:string */
	int trackNo;	/* required element of type xsd:int */
	std::string *diskNo;	/* optional element of type xsd:string */
	std::string *bellingServiceUrl;	/* optional element of type xsd:string */
	bool hasBellingContents;	/* required element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 14; } /* = unique type id SOAP_TYPE_ns1__ST_USCOREMUREKAINFO_USCORESERVICE */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCOREMUREKAINFO_USCORESERVICE() { ns1__ST_USCOREMUREKAINFO_USCORESERVICE::soap_default(NULL); }
	virtual ~ns1__ST_USCOREMUREKAINFO_USCORESERVICE() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCOREGET_USCORELYRIC5_USCORERETURN
#define SOAP_TYPE_ns1__ST_USCOREGET_USCORELYRIC5_USCORERETURN (15)
/* ns1:ST_GET_LYRIC5_RETURN */
class SOAP_CMAC ns1__ST_USCOREGET_USCORELYRIC5_USCORERETURN
{
public:
	std::string *strStatusID;	/* optional element of type xsd:string */
	std::string *strInfoID;	/* optional element of type xsd:string */
	std::string *strRegistDate;	/* optional element of type xsd:string */
	std::string *strTitle;	/* optional element of type xsd:string */
	std::string *strArtist;	/* optional element of type xsd:string */
	std::string *strAlbum;	/* optional element of type xsd:string */
	std::string *strCountGood;	/* optional element of type xsd:string */
	std::string *strCountBad;	/* optional element of type xsd:string */
	std::string *strLyric;	/* optional element of type xsd:string */
	std::string *strRegisterFirstName;	/* optional element of type xsd:string */
	std::string *strRegisterFirstEMail;	/* optional element of type xsd:string */
	std::string *strRegisterFirstURL;	/* optional element of type xsd:string */
	std::string *strRegisterFirstPhone;	/* optional element of type xsd:string */
	std::string *strRegisterFirstComment;	/* optional element of type xsd:string */
	std::string *strRegisterName;	/* optional element of type xsd:string */
	std::string *strRegisterEMail;	/* optional element of type xsd:string */
	std::string *strRegisterURL;	/* optional element of type xsd:string */
	std::string *strRegisterPhone;	/* optional element of type xsd:string */
	std::string *strRegisterComment;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 15; } /* = unique type id SOAP_TYPE_ns1__ST_USCOREGET_USCORELYRIC5_USCORERETURN */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCOREGET_USCORELYRIC5_USCORERETURN() { ns1__ST_USCOREGET_USCORELYRIC5_USCORERETURN::soap_default(NULL); }
	virtual ~ns1__ST_USCOREGET_USCORELYRIC5_USCORERETURN() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCOREGET_USCORERESEMBLELYRIC2_USCOREQUERY
#define SOAP_TYPE_ns1__ST_USCOREGET_USCORERESEMBLELYRIC2_USCOREQUERY (16)
/* ns1:ST_GET_RESEMBLELYRIC2_QUERY */
class SOAP_CMAC ns1__ST_USCOREGET_USCORERESEMBLELYRIC2_USCOREQUERY
{
public:
	std::string *strTitle;	/* optional element of type xsd:string */
	std::string *strArtistName;	/* optional element of type xsd:string */
	int nCurPage;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 16; } /* = unique type id SOAP_TYPE_ns1__ST_USCOREGET_USCORERESEMBLELYRIC2_USCOREQUERY */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCOREGET_USCORERESEMBLELYRIC2_USCOREQUERY() { ns1__ST_USCOREGET_USCORERESEMBLELYRIC2_USCOREQUERY::soap_default(NULL); }
	virtual ~ns1__ST_USCOREGET_USCORERESEMBLELYRIC2_USCOREQUERY() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfST_USCOREGET_USCORERESEMBLELYRIC2_USCORERETURN
#define SOAP_TYPE_ns1__ArrayOfST_USCOREGET_USCORERESEMBLELYRIC2_USCORERETURN (17)
/* ns1:ArrayOfST_GET_RESEMBLELYRIC2_RETURN */
class SOAP_CMAC ns1__ArrayOfST_USCOREGET_USCORERESEMBLELYRIC2_USCORERETURN
{
public:
	std::vector<class ns1__ST_USCOREGET_USCORERESEMBLELYRIC2_USCORERETURN * >ST_USCOREGET_USCORERESEMBLELYRIC2_USCORERETURN;	/* optional element of type ns1:ST_GET_RESEMBLELYRIC2_RETURN */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 17; } /* = unique type id SOAP_TYPE_ns1__ArrayOfST_USCOREGET_USCORERESEMBLELYRIC2_USCORERETURN */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfST_USCOREGET_USCORERESEMBLELYRIC2_USCORERETURN() { ns1__ArrayOfST_USCOREGET_USCORERESEMBLELYRIC2_USCORERETURN::soap_default(NULL); }
	virtual ~ns1__ArrayOfST_USCOREGET_USCORERESEMBLELYRIC2_USCORERETURN() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCOREGET_USCORERESEMBLELYRIC2_USCORERETURN
#define SOAP_TYPE_ns1__ST_USCOREGET_USCORERESEMBLELYRIC2_USCORERETURN (18)
/* ns1:ST_GET_RESEMBLELYRIC2_RETURN */
class SOAP_CMAC ns1__ST_USCOREGET_USCORERESEMBLELYRIC2_USCORERETURN
{
public:
	std::string *strInfoID;	/* optional element of type xsd:string */
	std::string *strOnlyLyricWord;	/* optional element of type xsd:string */
	std::string *strTitle;	/* optional element of type xsd:string */
	std::string *strLyric;	/* optional element of type xsd:string */
	std::string *strArtistName;	/* optional element of type xsd:string */
	std::string *strAlbumName;	/* optional element of type xsd:string */
	std::string *strRegisterFirstName;	/* optional element of type xsd:string */
	std::string *strRegisterFirstEMail;	/* optional element of type xsd:string */
	std::string *strRegisterFirstURL;	/* optional element of type xsd:string */
	std::string *strRegisterFirstPhone;	/* optional element of type xsd:string */
	std::string *strRegisterFirstComment;	/* optional element of type xsd:string */
	std::string *strRegisterName;	/* optional element of type xsd:string */
	std::string *strRegisterEMail;	/* optional element of type xsd:string */
	std::string *strRegisterURL;	/* optional element of type xsd:string */
	std::string *strRegisterPhone;	/* optional element of type xsd:string */
	std::string *strRegisterComment;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 18; } /* = unique type id SOAP_TYPE_ns1__ST_USCOREGET_USCORERESEMBLELYRIC2_USCORERETURN */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCOREGET_USCORERESEMBLELYRIC2_USCORERETURN() { ns1__ST_USCOREGET_USCORERESEMBLELYRIC2_USCORERETURN::soap_default(NULL); }
	virtual ~ns1__ST_USCOREGET_USCORERESEMBLELYRIC2_USCORERETURN() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCOREGET_USCORERESEMBLELYRIC2_USCORECOUNT_USCOREQUERY
#define SOAP_TYPE_ns1__ST_USCOREGET_USCORERESEMBLELYRIC2_USCORECOUNT_USCOREQUERY (19)
/* ns1:ST_GET_RESEMBLELYRIC2_COUNT_QUERY */
class SOAP_CMAC ns1__ST_USCOREGET_USCORERESEMBLELYRIC2_USCORECOUNT_USCOREQUERY
{
public:
	std::string *strTitle;	/* optional element of type xsd:string */
	std::string *strArtistName;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 19; } /* = unique type id SOAP_TYPE_ns1__ST_USCOREGET_USCORERESEMBLELYRIC2_USCORECOUNT_USCOREQUERY */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCOREGET_USCORERESEMBLELYRIC2_USCORECOUNT_USCOREQUERY() { ns1__ST_USCOREGET_USCORERESEMBLELYRIC2_USCORECOUNT_USCOREQUERY::soap_default(NULL); }
	virtual ~ns1__ST_USCOREGET_USCORERESEMBLELYRIC2_USCORECOUNT_USCOREQUERY() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCOREGET_USCORERESEMBLELYRIC2_USCORECOUNT_USCORERETURN
#define SOAP_TYPE_ns1__ST_USCOREGET_USCORERESEMBLELYRIC2_USCORECOUNT_USCORERETURN (20)
/* ns1:ST_GET_RESEMBLELYRIC2_COUNT_RETURN */
class SOAP_CMAC ns1__ST_USCOREGET_USCORERESEMBLELYRIC2_USCORECOUNT_USCORERETURN
{
public:
	std::string *strResembleLyricCount;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 20; } /* = unique type id SOAP_TYPE_ns1__ST_USCOREGET_USCORERESEMBLELYRIC2_USCORECOUNT_USCORERETURN */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCOREGET_USCORERESEMBLELYRIC2_USCORECOUNT_USCORERETURN() { ns1__ST_USCOREGET_USCORERESEMBLELYRIC2_USCORECOUNT_USCORERETURN::soap_default(NULL); }
	virtual ~ns1__ST_USCOREGET_USCORERESEMBLELYRIC2_USCORECOUNT_USCORERETURN() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCOREUPLOAD_USCORELYRIC_USCOREQUERY
#define SOAP_TYPE_ns1__ST_USCOREUPLOAD_USCORELYRIC_USCOREQUERY (21)
/* ns1:ST_UPLOAD_LYRIC_QUERY */
class SOAP_CMAC ns1__ST_USCOREUPLOAD_USCORELYRIC_USCOREQUERY
{
public:
	int nUploadLyricType;	/* required element of type xsd:int */
	std::string *strMD5;	/* optional element of type xsd:string */
	std::string *strRegisterFirstName;	/* optional element of type xsd:string */
	std::string *strRegisterFirstEMail;	/* optional element of type xsd:string */
	std::string *strRegisterFirstURL;	/* optional element of type xsd:string */
	std::string *strRegisterFirstPhone;	/* optional element of type xsd:string */
	std::string *strRegisterFirstComment;	/* optional element of type xsd:string */
	std::string *strRegisterName;	/* optional element of type xsd:string */
	std::string *strRegisterEMail;	/* optional element of type xsd:string */
	std::string *strRegisterURL;	/* optional element of type xsd:string */
	std::string *strRegisterPhone;	/* optional element of type xsd:string */
	std::string *strRegisterComment;	/* optional element of type xsd:string */
	std::string *strFileName;	/* optional element of type xsd:string */
	std::string *strTitle;	/* optional element of type xsd:string */
	std::string *strArtist;	/* optional element of type xsd:string */
	std::string *strAlbum;	/* optional element of type xsd:string */
	int nInfoID;	/* required element of type xsd:int */
	std::string *strLyric;	/* optional element of type xsd:string */
	unsigned int nPlayTime;	/* required element of type xsd:unsignedInt */
	std::string *strVersion;	/* optional element of type xsd:string */
	std::string *strMACAddress;	/* optional element of type xsd:string */
	std::string *strIPAddress;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 21; } /* = unique type id SOAP_TYPE_ns1__ST_USCOREUPLOAD_USCORELYRIC_USCOREQUERY */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCOREUPLOAD_USCORELYRIC_USCOREQUERY() { ns1__ST_USCOREUPLOAD_USCORELYRIC_USCOREQUERY::soap_default(NULL); }
	virtual ~ns1__ST_USCOREUPLOAD_USCORELYRIC_USCOREQUERY() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCOREREPORT_USCOREFAULT_USCORELYRIC_USCOREWITH_USCORECOMMENT_USCOREQUERY
#define SOAP_TYPE_ns1__ST_USCOREREPORT_USCOREFAULT_USCORELYRIC_USCOREWITH_USCORECOMMENT_USCOREQUERY (22)
/* ns1:ST_REPORT_FAULT_LYRIC_WITH_COMMENT_QUERY */
class SOAP_CMAC ns1__ST_USCOREREPORT_USCOREFAULT_USCORELYRIC_USCOREWITH_USCORECOMMENT_USCOREQUERY
{
public:
	std::string *strMD5;	/* optional element of type xsd:string */
	std::string *strComment;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 22; } /* = unique type id SOAP_TYPE_ns1__ST_USCOREREPORT_USCOREFAULT_USCORELYRIC_USCOREWITH_USCORECOMMENT_USCOREQUERY */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCOREREPORT_USCOREFAULT_USCORELYRIC_USCOREWITH_USCORECOMMENT_USCOREQUERY() { ns1__ST_USCOREREPORT_USCOREFAULT_USCORELYRIC_USCOREWITH_USCORECOMMENT_USCOREQUERY::soap_default(NULL); }
	virtual ~ns1__ST_USCOREREPORT_USCOREFAULT_USCORELYRIC_USCOREWITH_USCORECOMMENT_USCOREQUERY() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCOREREPORT_USCOREFAULT_USCORELYRIC2_USCOREQUERY
#define SOAP_TYPE_ns1__ST_USCOREREPORT_USCOREFAULT_USCORELYRIC2_USCOREQUERY (23)
/* ns1:ST_REPORT_FAULT_LYRIC2_QUERY */
class SOAP_CMAC ns1__ST_USCOREREPORT_USCOREFAULT_USCORELYRIC2_USCOREQUERY
{
public:
	std::string *strChecksum;	/* optional element of type xsd:string */
	std::string *strComment;	/* optional element of type xsd:string */
	std::string *strMACAddress;	/* optional element of type xsd:string */
	std::string *strVersion;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 23; } /* = unique type id SOAP_TYPE_ns1__ST_USCOREREPORT_USCOREFAULT_USCORELYRIC2_USCOREQUERY */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCOREREPORT_USCOREFAULT_USCORELYRIC2_USCOREQUERY() { ns1__ST_USCOREREPORT_USCOREFAULT_USCORELYRIC2_USCOREQUERY::soap_default(NULL); }
	virtual ~ns1__ST_USCOREREPORT_USCOREFAULT_USCORELYRIC2_USCOREQUERY() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCOREREPORT_USCORERECOMMENDATION_USCORELYRIC_USCOREQUERY
#define SOAP_TYPE_ns1__ST_USCOREREPORT_USCORERECOMMENDATION_USCORELYRIC_USCOREQUERY (24)
/* ns1:ST_REPORT_RECOMMENDATION_LYRIC_QUERY */
class SOAP_CMAC ns1__ST_USCOREREPORT_USCORERECOMMENDATION_USCORELYRIC_USCOREQUERY
{
public:
	std::string *strChecksum;	/* optional element of type xsd:string */
	std::string *strMACAddress;	/* optional element of type xsd:string */
	std::string *strVersion;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 24; } /* = unique type id SOAP_TYPE_ns1__ST_USCOREREPORT_USCORERECOMMENDATION_USCORELYRIC_USCOREQUERY */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCOREREPORT_USCORERECOMMENDATION_USCORELYRIC_USCOREQUERY() { ns1__ST_USCOREREPORT_USCORERECOMMENDATION_USCORELYRIC_USCOREQUERY::soap_default(NULL); }
	virtual ~ns1__ST_USCOREREPORT_USCORERECOMMENDATION_USCORELYRIC_USCOREQUERY() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCOREIS_USCOREREPORTED_USCORERECOMMENDATION_USCORELYRIC_USCOREQUERY
#define SOAP_TYPE_ns1__ST_USCOREIS_USCOREREPORTED_USCORERECOMMENDATION_USCORELYRIC_USCOREQUERY (25)
/* ns1:ST_IS_REPORTED_RECOMMENDATION_LYRIC_QUERY */
class SOAP_CMAC ns1__ST_USCOREIS_USCOREREPORTED_USCORERECOMMENDATION_USCORELYRIC_USCOREQUERY
{
public:
	std::string *strChecksum;	/* optional element of type xsd:string */
	std::string *strMACAddress;	/* optional element of type xsd:string */
	std::string *strVersion;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 25; } /* = unique type id SOAP_TYPE_ns1__ST_USCOREIS_USCOREREPORTED_USCORERECOMMENDATION_USCORELYRIC_USCOREQUERY */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCOREIS_USCOREREPORTED_USCORERECOMMENDATION_USCORELYRIC_USCOREQUERY() { ns1__ST_USCOREIS_USCOREREPORTED_USCORERECOMMENDATION_USCORELYRIC_USCOREQUERY::soap_default(NULL); }
	virtual ~ns1__ST_USCOREIS_USCOREREPORTED_USCORERECOMMENDATION_USCORELYRIC_USCOREQUERY() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCOREIS_USCOREREPORTED_USCOREFAULT_USCORELYRIC_USCOREQUERY
#define SOAP_TYPE_ns1__ST_USCOREIS_USCOREREPORTED_USCOREFAULT_USCORELYRIC_USCOREQUERY (26)
/* ns1:ST_IS_REPORTED_FAULT_LYRIC_QUERY */
class SOAP_CMAC ns1__ST_USCOREIS_USCOREREPORTED_USCOREFAULT_USCORELYRIC_USCOREQUERY
{
public:
	std::string *strChecksum;	/* optional element of type xsd:string */
	std::string *strMACAddress;	/* optional element of type xsd:string */
	std::string *strVersion;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 26; } /* = unique type id SOAP_TYPE_ns1__ST_USCOREIS_USCOREREPORTED_USCOREFAULT_USCORELYRIC_USCOREQUERY */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCOREIS_USCOREREPORTED_USCOREFAULT_USCORELYRIC_USCOREQUERY() { ns1__ST_USCOREIS_USCOREREPORTED_USCOREFAULT_USCORELYRIC_USCOREQUERY::soap_default(NULL); }
	virtual ~ns1__ST_USCOREIS_USCOREREPORTED_USCOREFAULT_USCORELYRIC_USCOREQUERY() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCOREGET_USCORELYRIC3_USCOREQUERY
#define SOAP_TYPE_ns1__ST_USCOREGET_USCORELYRIC3_USCOREQUERY (27)
/* ns1:ST_GET_LYRIC3_QUERY */
class SOAP_CMAC ns1__ST_USCOREGET_USCORELYRIC3_USCOREQUERY
{
public:
	std::string *strChecksum;	/* optional element of type xsd:string */
	std::string *strMD5;	/* optional element of type xsd:string */
	std::string *strVersion;	/* optional element of type xsd:string */
	int nPlayTime;	/* required element of type xsd:int */
	std::string *strMACAddress;	/* optional element of type xsd:string */
	std::string *strIPAddress;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 27; } /* = unique type id SOAP_TYPE_ns1__ST_USCOREGET_USCORELYRIC3_USCOREQUERY */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCOREGET_USCORELYRIC3_USCOREQUERY() { ns1__ST_USCOREGET_USCORELYRIC3_USCOREQUERY::soap_default(NULL); }
	virtual ~ns1__ST_USCOREGET_USCORELYRIC3_USCOREQUERY() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCOREGET_USCORELYRIC3_USCORERETURN
#define SOAP_TYPE_ns1__ST_USCOREGET_USCORELYRIC3_USCORERETURN (28)
/* ns1:ST_GET_LYRIC3_RETURN */
class SOAP_CMAC ns1__ST_USCOREGET_USCORELYRIC3_USCORERETURN
{
public:
	std::string *strStatusID;	/* optional element of type xsd:string */
	std::string *strInfoID;	/* optional element of type xsd:string */
	std::string *strRegistDate;	/* optional element of type xsd:string */
	std::string *strTitle;	/* optional element of type xsd:string */
	std::string *strArtist;	/* optional element of type xsd:string */
	std::string *strAlbum;	/* optional element of type xsd:string */
	std::string *strLyric;	/* optional element of type xsd:string */
	std::string *strRegisterFirstName;	/* optional element of type xsd:string */
	std::string *strRegisterFirstEMail;	/* optional element of type xsd:string */
	std::string *strRegisterFirstURL;	/* optional element of type xsd:string */
	std::string *strRegisterFirstPhone;	/* optional element of type xsd:string */
	std::string *strRegisterFirstComment;	/* optional element of type xsd:string */
	std::string *strRegisterName;	/* optional element of type xsd:string */
	std::string *strRegisterEMail;	/* optional element of type xsd:string */
	std::string *strRegisterURL;	/* optional element of type xsd:string */
	std::string *strRegisterPhone;	/* optional element of type xsd:string */
	std::string *strRegisterComment;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 28; } /* = unique type id SOAP_TYPE_ns1__ST_USCOREGET_USCORELYRIC3_USCORERETURN */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCOREGET_USCORELYRIC3_USCORERETURN() { ns1__ST_USCOREGET_USCORELYRIC3_USCORERETURN::soap_default(NULL); }
	virtual ~ns1__ST_USCOREGET_USCORELYRIC3_USCORERETURN() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCOREGET_USCORELYRIC4_USCOREQUERY
#define SOAP_TYPE_ns1__ST_USCOREGET_USCORELYRIC4_USCOREQUERY (29)
/* ns1:ST_GET_LYRIC4_QUERY */
class SOAP_CMAC ns1__ST_USCOREGET_USCORELYRIC4_USCOREQUERY
{
public:
	std::string *strChecksum;	/* optional element of type xsd:string */
	std::string *strVersion;	/* optional element of type xsd:string */
	int nPlayTime;	/* required element of type xsd:int */
	std::string *strMACAddress;	/* optional element of type xsd:string */
	std::string *strIPAddress;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 29; } /* = unique type id SOAP_TYPE_ns1__ST_USCOREGET_USCORELYRIC4_USCOREQUERY */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCOREGET_USCORELYRIC4_USCOREQUERY() { ns1__ST_USCOREGET_USCORELYRIC4_USCOREQUERY::soap_default(NULL); }
	virtual ~ns1__ST_USCOREGET_USCORELYRIC4_USCOREQUERY() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCOREGET_USCORELYRIC4_USCORERETURN
#define SOAP_TYPE_ns1__ST_USCOREGET_USCORELYRIC4_USCORERETURN (30)
/* ns1:ST_GET_LYRIC4_RETURN */
class SOAP_CMAC ns1__ST_USCOREGET_USCORELYRIC4_USCORERETURN
{
public:
	std::string *strStatusID;	/* optional element of type xsd:string */
	std::string *strInfoID;	/* optional element of type xsd:string */
	std::string *strRegistDate;	/* optional element of type xsd:string */
	std::string *strTitle;	/* optional element of type xsd:string */
	std::string *strArtist;	/* optional element of type xsd:string */
	std::string *strAlbum;	/* optional element of type xsd:string */
	std::string *strLyric;	/* optional element of type xsd:string */
	std::string *strRegisterFirstName;	/* optional element of type xsd:string */
	std::string *strRegisterFirstEMail;	/* optional element of type xsd:string */
	std::string *strRegisterFirstURL;	/* optional element of type xsd:string */
	std::string *strRegisterFirstPhone;	/* optional element of type xsd:string */
	std::string *strRegisterFirstComment;	/* optional element of type xsd:string */
	std::string *strRegisterName;	/* optional element of type xsd:string */
	std::string *strRegisterEMail;	/* optional element of type xsd:string */
	std::string *strRegisterURL;	/* optional element of type xsd:string */
	std::string *strRegisterPhone;	/* optional element of type xsd:string */
	std::string *strRegisterComment;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 30; } /* = unique type id SOAP_TYPE_ns1__ST_USCOREGET_USCORELYRIC4_USCORERETURN */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCOREGET_USCORELYRIC4_USCORERETURN() { ns1__ST_USCOREGET_USCORELYRIC4_USCORERETURN::soap_default(NULL); }
	virtual ~ns1__ST_USCOREGET_USCORELYRIC4_USCORERETURN() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCOREGET_USCORELYRIC5_USCOREQUERY
#define SOAP_TYPE_ns1__ST_USCOREGET_USCORELYRIC5_USCOREQUERY (31)
/* ns1:ST_GET_LYRIC5_QUERY */
class SOAP_CMAC ns1__ST_USCOREGET_USCORELYRIC5_USCOREQUERY
{
public:
	std::string *strChecksum;	/* optional element of type xsd:string */
	std::string *strVersion;	/* optional element of type xsd:string */
	std::string *strMACAddress;	/* optional element of type xsd:string */
	std::string *strIPAddress;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 31; } /* = unique type id SOAP_TYPE_ns1__ST_USCOREGET_USCORELYRIC5_USCOREQUERY */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCOREGET_USCORELYRIC5_USCOREQUERY() { ns1__ST_USCOREGET_USCORELYRIC5_USCOREQUERY::soap_default(NULL); }
	virtual ~ns1__ST_USCOREGET_USCORELYRIC5_USCOREQUERY() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCOREGET_USCORELYRIC_USCORELIST_USCOREQUERY
#define SOAP_TYPE_ns1__ST_USCOREGET_USCORELYRIC_USCORELIST_USCOREQUERY (32)
/* ns1:ST_GET_LYRIC_LIST_QUERY */
class SOAP_CMAC ns1__ST_USCOREGET_USCORELYRIC_USCORELIST_USCOREQUERY
{
public:
	std::string *strTitle;	/* optional element of type xsd:string */
	std::string *strArtist;	/* optional element of type xsd:string */
	std::string *strAlbum;	/* optional element of type xsd:string */
	std::string *strStartDate;	/* optional element of type xsd:string */
	std::string *strEndDate;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 32; } /* = unique type id SOAP_TYPE_ns1__ST_USCOREGET_USCORELYRIC_USCORELIST_USCOREQUERY */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCOREGET_USCORELYRIC_USCORELIST_USCOREQUERY() { ns1__ST_USCOREGET_USCORELYRIC_USCORELIST_USCOREQUERY::soap_default(NULL); }
	virtual ~ns1__ST_USCOREGET_USCORELYRIC_USCORELIST_USCOREQUERY() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfST_USCOREGET_USCORELYRIC_USCORELIST_USCORERETURN
#define SOAP_TYPE_ns1__ArrayOfST_USCOREGET_USCORELYRIC_USCORELIST_USCORERETURN (33)
/* ns1:ArrayOfST_GET_LYRIC_LIST_RETURN */
class SOAP_CMAC ns1__ArrayOfST_USCOREGET_USCORELYRIC_USCORELIST_USCORERETURN
{
public:
	std::vector<class ns1__ST_USCOREGET_USCORELYRIC_USCORELIST_USCORERETURN * >ST_USCOREGET_USCORELYRIC_USCORELIST_USCORERETURN;	/* optional element of type ns1:ST_GET_LYRIC_LIST_RETURN */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 33; } /* = unique type id SOAP_TYPE_ns1__ArrayOfST_USCOREGET_USCORELYRIC_USCORELIST_USCORERETURN */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfST_USCOREGET_USCORELYRIC_USCORELIST_USCORERETURN() { ns1__ArrayOfST_USCOREGET_USCORELYRIC_USCORELIST_USCORERETURN::soap_default(NULL); }
	virtual ~ns1__ArrayOfST_USCOREGET_USCORELYRIC_USCORELIST_USCORERETURN() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCOREGET_USCORELYRIC_USCORELIST_USCORERETURN
#define SOAP_TYPE_ns1__ST_USCOREGET_USCORELYRIC_USCORELIST_USCORERETURN (34)
/* ns1:ST_GET_LYRIC_LIST_RETURN */
class SOAP_CMAC ns1__ST_USCOREGET_USCORELYRIC_USCORELIST_USCORERETURN
{
public:
	std::string *strInfoID;	/* optional element of type xsd:string */
	std::string *strRegistDate;	/* optional element of type xsd:string */
	std::string *strTitle;	/* optional element of type xsd:string */
	std::string *strArtist;	/* optional element of type xsd:string */
	std::string *strAlbum;	/* optional element of type xsd:string */
	std::string *strLinkCount;	/* optional element of type xsd:string */
	std::string *strOnlyLyricword;	/* optional element of type xsd:string */
	std::string *strLyric;	/* optional element of type xsd:string */
	std::string *strRegisterFirstName;	/* optional element of type xsd:string */
	std::string *strRegisterName;	/* optional element of type xsd:string */
	std::string *strRegisterFirstEMail;	/* optional element of type xsd:string */
	std::string *strRegisterEMail;	/* optional element of type xsd:string */
	std::string *strRegisterFirstURL;	/* optional element of type xsd:string */
	std::string *strRegisterURL;	/* optional element of type xsd:string */
	std::string *strRegisterFirstPhone;	/* optional element of type xsd:string */
	std::string *strRegisterPhone;	/* optional element of type xsd:string */
	std::string *strRegisterFirstComment;	/* optional element of type xsd:string */
	std::string *strRegisterComment;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 34; } /* = unique type id SOAP_TYPE_ns1__ST_USCOREGET_USCORELYRIC_USCORELIST_USCORERETURN */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCOREGET_USCORELYRIC_USCORELIST_USCORERETURN() { ns1__ST_USCOREGET_USCORELYRIC_USCORELIST_USCORERETURN::soap_default(NULL); }
	virtual ~ns1__ST_USCOREGET_USCORELYRIC_USCORELIST_USCORERETURN() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfST_USCOREGET_USCOREREPORTFAULT_USCORELIST_USCORERETURN
#define SOAP_TYPE_ns1__ArrayOfST_USCOREGET_USCOREREPORTFAULT_USCORELIST_USCORERETURN (35)
/* ns1:ArrayOfST_GET_REPORTFAULT_LIST_RETURN */
class SOAP_CMAC ns1__ArrayOfST_USCOREGET_USCOREREPORTFAULT_USCORELIST_USCORERETURN
{
public:
	std::vector<class ns1__ST_USCOREGET_USCOREREPORTFAULT_USCORELIST_USCORERETURN * >ST_USCOREGET_USCOREREPORTFAULT_USCORELIST_USCORERETURN;	/* optional element of type ns1:ST_GET_REPORTFAULT_LIST_RETURN */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 35; } /* = unique type id SOAP_TYPE_ns1__ArrayOfST_USCOREGET_USCOREREPORTFAULT_USCORELIST_USCORERETURN */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfST_USCOREGET_USCOREREPORTFAULT_USCORELIST_USCORERETURN() { ns1__ArrayOfST_USCOREGET_USCOREREPORTFAULT_USCORELIST_USCORERETURN::soap_default(NULL); }
	virtual ~ns1__ArrayOfST_USCOREGET_USCOREREPORTFAULT_USCORELIST_USCORERETURN() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCOREGET_USCOREREPORTFAULT_USCORELIST_USCORERETURN
#define SOAP_TYPE_ns1__ST_USCOREGET_USCOREREPORTFAULT_USCORELIST_USCORERETURN (36)
/* ns1:ST_GET_REPORTFAULT_LIST_RETURN */
class SOAP_CMAC ns1__ST_USCOREGET_USCOREREPORTFAULT_USCORELIST_USCORERETURN
{
public:
	std::string *strReportID;	/* optional element of type xsd:string */
	std::string *strMD5;	/* optional element of type xsd:string */
	std::string *strRegistDate;	/* optional element of type xsd:string */
	std::string *strComment;	/* optional element of type xsd:string */
	std::string *strFileName;	/* optional element of type xsd:string */
	std::string *strMainTitle;	/* optional element of type xsd:string */
	std::string *strMainArtist;	/* optional element of type xsd:string */
	std::string *strMainAlbum;	/* optional element of type xsd:string */
	std::string *strInfoID;	/* optional element of type xsd:string */
	std::string *strInfoTitle;	/* optional element of type xsd:string */
	std::string *strInfoArtist;	/* optional element of type xsd:string */
	std::string *strInfoAlbum;	/* optional element of type xsd:string */
	std::string *strLinkCount;	/* optional element of type xsd:string */
	std::string *strLyric;	/* optional element of type xsd:string */
	std::string *strRegisterFirstName;	/* optional element of type xsd:string */
	std::string *strRegisterName;	/* optional element of type xsd:string */
	std::string *strRegisterFirstURL;	/* optional element of type xsd:string */
	std::string *strRegisterURL;	/* optional element of type xsd:string */
	std::string *strRegisterFirstComment;	/* optional element of type xsd:string */
	std::string *strRegisterComment;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 36; } /* = unique type id SOAP_TYPE_ns1__ST_USCOREGET_USCOREREPORTFAULT_USCORELIST_USCORERETURN */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCOREGET_USCOREREPORTFAULT_USCORELIST_USCORERETURN() { ns1__ST_USCOREGET_USCOREREPORTFAULT_USCORELIST_USCORERETURN::soap_default(NULL); }
	virtual ~ns1__ST_USCOREGET_USCOREREPORTFAULT_USCORELIST_USCORERETURN() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCOREGET_USCOREMODIFY_USCORELIST_USCOREQUERY
#define SOAP_TYPE_ns1__ST_USCOREGET_USCOREMODIFY_USCORELIST_USCOREQUERY (37)
/* ns1:ST_GET_MODIFY_LIST_QUERY */
class SOAP_CMAC ns1__ST_USCOREGET_USCOREMODIFY_USCORELIST_USCOREQUERY
{
public:
	int nAdministratorID;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 37; } /* = unique type id SOAP_TYPE_ns1__ST_USCOREGET_USCOREMODIFY_USCORELIST_USCOREQUERY */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCOREGET_USCOREMODIFY_USCORELIST_USCOREQUERY() { ns1__ST_USCOREGET_USCOREMODIFY_USCORELIST_USCOREQUERY::soap_default(NULL); }
	virtual ~ns1__ST_USCOREGET_USCOREMODIFY_USCORELIST_USCOREQUERY() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfST_USCOREGET_USCOREMODIFY_USCORELIST_USCORERETURN
#define SOAP_TYPE_ns1__ArrayOfST_USCOREGET_USCOREMODIFY_USCORELIST_USCORERETURN (38)
/* ns1:ArrayOfST_GET_MODIFY_LIST_RETURN */
class SOAP_CMAC ns1__ArrayOfST_USCOREGET_USCOREMODIFY_USCORELIST_USCORERETURN
{
public:
	std::vector<class ns1__ST_USCOREGET_USCOREMODIFY_USCORELIST_USCORERETURN * >ST_USCOREGET_USCOREMODIFY_USCORELIST_USCORERETURN;	/* optional element of type ns1:ST_GET_MODIFY_LIST_RETURN */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 38; } /* = unique type id SOAP_TYPE_ns1__ArrayOfST_USCOREGET_USCOREMODIFY_USCORELIST_USCORERETURN */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfST_USCOREGET_USCOREMODIFY_USCORELIST_USCORERETURN() { ns1__ArrayOfST_USCOREGET_USCOREMODIFY_USCORELIST_USCORERETURN::soap_default(NULL); }
	virtual ~ns1__ArrayOfST_USCOREGET_USCOREMODIFY_USCORELIST_USCORERETURN() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCOREGET_USCOREMODIFY_USCORELIST_USCORERETURN
#define SOAP_TYPE_ns1__ST_USCOREGET_USCOREMODIFY_USCORELIST_USCORERETURN (39)
/* ns1:ST_GET_MODIFY_LIST_RETURN */
class SOAP_CMAC ns1__ST_USCOREGET_USCOREMODIFY_USCORELIST_USCORERETURN
{
public:
	std::string *strModifyID;	/* optional element of type xsd:string */
	std::string *strMD5;	/* optional element of type xsd:string */
	std::string *strRegistDate;	/* optional element of type xsd:string */
	std::string *strModifiedRegisterName;	/* optional element of type xsd:string */
	std::string *strModifiedRegisterEMail;	/* optional element of type xsd:string */
	std::string *strModifiedRegisterURL;	/* optional element of type xsd:string */
	std::string *strModifiedRegisterPhone;	/* optional element of type xsd:string */
	std::string *strModifiedRegisterComment;	/* optional element of type xsd:string */
	std::string *strModifiedFileName;	/* optional element of type xsd:string */
	std::string *strModifiedTitle;	/* optional element of type xsd:string */
	std::string *strModifiedArtist;	/* optional element of type xsd:string */
	std::string *strModifiedAlbum;	/* optional element of type xsd:string */
	std::string *strModifiedLyric;	/* optional element of type xsd:string */
	std::string *strOriginalFileName;	/* optional element of type xsd:string */
	std::string *strInfoID;	/* optional element of type xsd:string */
	std::string *strOriginalTitle;	/* optional element of type xsd:string */
	std::string *strOriginalArtist;	/* optional element of type xsd:string */
	std::string *strOriginalAlbum;	/* optional element of type xsd:string */
	std::string *strOriginalLyric;	/* optional element of type xsd:string */
	std::string *strOriginalRegisterFirstName;	/* optional element of type xsd:string */
	std::string *strOriginalRegisterName;	/* optional element of type xsd:string */
	std::string *strOriginalRegisterFirstEMail;	/* optional element of type xsd:string */
	std::string *strOriginalRegisterEMail;	/* optional element of type xsd:string */
	std::string *strOriginalRegisterFirstURL;	/* optional element of type xsd:string */
	std::string *strOriginalRegisterURL;	/* optional element of type xsd:string */
	std::string *strOriginalRegisterFirstPhone;	/* optional element of type xsd:string */
	std::string *strOriginalRegisterPhone;	/* optional element of type xsd:string */
	std::string *strOriginalRegisterFirstComment;	/* optional element of type xsd:string */
	std::string *strOriginalRegisterComment;	/* optional element of type xsd:string */
	std::string *strBlackListReportCount;	/* optional element of type xsd:string */
	std::string *strCountReportFault;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 39; } /* = unique type id SOAP_TYPE_ns1__ST_USCOREGET_USCOREMODIFY_USCORELIST_USCORERETURN */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCOREGET_USCOREMODIFY_USCORELIST_USCORERETURN() { ns1__ST_USCOREGET_USCOREMODIFY_USCORELIST_USCORERETURN::soap_default(NULL); }
	virtual ~ns1__ST_USCOREGET_USCOREMODIFY_USCORELIST_USCORERETURN() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCOREGET_USCOREREGISTER_USCORELIST_USCOREQUERY
#define SOAP_TYPE_ns1__ST_USCOREGET_USCOREREGISTER_USCORELIST_USCOREQUERY (40)
/* ns1:ST_GET_REGISTER_LIST_QUERY */
class SOAP_CMAC ns1__ST_USCOREGET_USCOREREGISTER_USCORELIST_USCOREQUERY
{
public:
	std::string *strRegisterName;	/* optional element of type xsd:string */
	std::string *strRegisterEMail;	/* optional element of type xsd:string */
	std::string *strStartDate;	/* optional element of type xsd:string */
	std::string *strEndDate;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 40; } /* = unique type id SOAP_TYPE_ns1__ST_USCOREGET_USCOREREGISTER_USCORELIST_USCOREQUERY */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCOREGET_USCOREREGISTER_USCORELIST_USCOREQUERY() { ns1__ST_USCOREGET_USCOREREGISTER_USCORELIST_USCOREQUERY::soap_default(NULL); }
	virtual ~ns1__ST_USCOREGET_USCOREREGISTER_USCORELIST_USCOREQUERY() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfST_USCOREGET_USCOREREGISTER_USCORELIST_USCORERETURN
#define SOAP_TYPE_ns1__ArrayOfST_USCOREGET_USCOREREGISTER_USCORELIST_USCORERETURN (41)
/* ns1:ArrayOfST_GET_REGISTER_LIST_RETURN */
class SOAP_CMAC ns1__ArrayOfST_USCOREGET_USCOREREGISTER_USCORELIST_USCORERETURN
{
public:
	std::vector<class ns1__ST_USCOREGET_USCOREREGISTER_USCORELIST_USCORERETURN * >ST_USCOREGET_USCOREREGISTER_USCORELIST_USCORERETURN;	/* optional element of type ns1:ST_GET_REGISTER_LIST_RETURN */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 41; } /* = unique type id SOAP_TYPE_ns1__ArrayOfST_USCOREGET_USCOREREGISTER_USCORELIST_USCORERETURN */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfST_USCOREGET_USCOREREGISTER_USCORELIST_USCORERETURN() { ns1__ArrayOfST_USCOREGET_USCOREREGISTER_USCORELIST_USCORERETURN::soap_default(NULL); }
	virtual ~ns1__ArrayOfST_USCOREGET_USCOREREGISTER_USCORELIST_USCORERETURN() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCOREGET_USCOREREGISTER_USCORELIST_USCORERETURN
#define SOAP_TYPE_ns1__ST_USCOREGET_USCOREREGISTER_USCORELIST_USCORERETURN (42)
/* ns1:ST_GET_REGISTER_LIST_RETURN */
class SOAP_CMAC ns1__ST_USCOREGET_USCOREREGISTER_USCORELIST_USCORERETURN
{
public:
	std::string *strRegisterName;	/* optional element of type xsd:string */
	std::string *strRegisterEMail;	/* optional element of type xsd:string */
	std::string *strRegisterURL;	/* optional element of type xsd:string */
	std::string *strRegisterPhone;	/* optional element of type xsd:string */
	std::string *strRegisterComment;	/* optional element of type xsd:string */
	std::string *strRegisterFirst;	/* optional element of type xsd:string */
	std::string *strRegistDate;	/* optional element of type xsd:string */
	std::string *strTitleName;	/* optional element of type xsd:string */
	std::string *strArtistName;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 42; } /* = unique type id SOAP_TYPE_ns1__ST_USCOREGET_USCOREREGISTER_USCORELIST_USCORERETURN */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCOREGET_USCOREREGISTER_USCORELIST_USCORERETURN() { ns1__ST_USCOREGET_USCOREREGISTER_USCORELIST_USCORERETURN::soap_default(NULL); }
	virtual ~ns1__ST_USCOREGET_USCOREREGISTER_USCORELIST_USCORERETURN() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCOREMEMBER_USCOREADDMEMBER_USCOREQUERY
#define SOAP_TYPE_ns1__ST_USCOREMEMBER_USCOREADDMEMBER_USCOREQUERY (43)
/* ns1:ST_MEMBER_ADDMEMBER_QUERY */
class SOAP_CMAC ns1__ST_USCOREMEMBER_USCOREADDMEMBER_USCOREQUERY
{
public:
	std::string *strNicName;	/* optional element of type xsd:string */
	std::string *strPassWord;	/* optional element of type xsd:string */
	std::string *strName;	/* optional element of type xsd:string */
	std::string *strGroup;	/* optional element of type xsd:string */
	std::string *strPhone;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 43; } /* = unique type id SOAP_TYPE_ns1__ST_USCOREMEMBER_USCOREADDMEMBER_USCOREQUERY */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCOREMEMBER_USCOREADDMEMBER_USCOREQUERY() { ns1__ST_USCOREMEMBER_USCOREADDMEMBER_USCOREQUERY::soap_default(NULL); }
	virtual ~ns1__ST_USCOREMEMBER_USCOREADDMEMBER_USCOREQUERY() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCOREMEMBER_USCOREMODIFYMEMBER_USCOREQUERY
#define SOAP_TYPE_ns1__ST_USCOREMEMBER_USCOREMODIFYMEMBER_USCOREQUERY (44)
/* ns1:ST_MEMBER_MODIFYMEMBER_QUERY */
class SOAP_CMAC ns1__ST_USCOREMEMBER_USCOREMODIFYMEMBER_USCOREQUERY
{
public:
	int nMemberID;	/* required element of type xsd:int */
	std::string *strMemberPassWord;	/* optional element of type xsd:string */
	std::string *strMemberGroup;	/* optional element of type xsd:string */
	std::string *strMemberPhone;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 44; } /* = unique type id SOAP_TYPE_ns1__ST_USCOREMEMBER_USCOREMODIFYMEMBER_USCOREQUERY */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCOREMEMBER_USCOREMODIFYMEMBER_USCOREQUERY() { ns1__ST_USCOREMEMBER_USCOREMODIFYMEMBER_USCOREQUERY::soap_default(NULL); }
	virtual ~ns1__ST_USCOREMEMBER_USCOREMODIFYMEMBER_USCOREQUERY() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCOREMEMBER_USCOREREMOVEMEMBER_USCOREQUERY
#define SOAP_TYPE_ns1__ST_USCOREMEMBER_USCOREREMOVEMEMBER_USCOREQUERY (45)
/* ns1:ST_MEMBER_REMOVEMEMBER_QUERY */
class SOAP_CMAC ns1__ST_USCOREMEMBER_USCOREREMOVEMEMBER_USCOREQUERY
{
public:
	int nMemberID;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 45; } /* = unique type id SOAP_TYPE_ns1__ST_USCOREMEMBER_USCOREREMOVEMEMBER_USCOREQUERY */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCOREMEMBER_USCOREREMOVEMEMBER_USCOREQUERY() { ns1__ST_USCOREMEMBER_USCOREREMOVEMEMBER_USCOREQUERY::soap_default(NULL); }
	virtual ~ns1__ST_USCOREMEMBER_USCOREREMOVEMEMBER_USCOREQUERY() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCOREMEMBER_USCORELOGIN_USCOREQUERY
#define SOAP_TYPE_ns1__ST_USCOREMEMBER_USCORELOGIN_USCOREQUERY (46)
/* ns1:ST_MEMBER_LOGIN_QUERY */
class SOAP_CMAC ns1__ST_USCOREMEMBER_USCORELOGIN_USCOREQUERY
{
public:
	std::string *strUserID;	/* optional element of type xsd:string */
	std::string *strPassWord;	/* optional element of type xsd:string */
	int guid_USCOREData1;	/* required element of type xsd:int */
	short guid_USCOREData2;	/* required element of type xsd:short */
	short guid_USCOREData3;	/* required element of type xsd:short */
	unsigned char guid_USCOREData4_USCORE1;	/* required element of type xsd:unsignedByte */
	unsigned char guid_USCOREData4_USCORE2;	/* required element of type xsd:unsignedByte */
	unsigned char guid_USCOREData4_USCORE3;	/* required element of type xsd:unsignedByte */
	unsigned char guid_USCOREData4_USCORE4;	/* required element of type xsd:unsignedByte */
	unsigned char guid_USCOREData4_USCORE5;	/* required element of type xsd:unsignedByte */
	unsigned char guid_USCOREData4_USCORE6;	/* required element of type xsd:unsignedByte */
	unsigned char guid_USCOREData4_USCORE7;	/* required element of type xsd:unsignedByte */
	unsigned char guid_USCOREData4_USCORE8;	/* required element of type xsd:unsignedByte */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 46; } /* = unique type id SOAP_TYPE_ns1__ST_USCOREMEMBER_USCORELOGIN_USCOREQUERY */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCOREMEMBER_USCORELOGIN_USCOREQUERY() { ns1__ST_USCOREMEMBER_USCORELOGIN_USCOREQUERY::soap_default(NULL); }
	virtual ~ns1__ST_USCOREMEMBER_USCORELOGIN_USCOREQUERY() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCOREMEMBER_USCORELOGOUT_USCOREQUERY
#define SOAP_TYPE_ns1__ST_USCOREMEMBER_USCORELOGOUT_USCOREQUERY (47)
/* ns1:ST_MEMBER_LOGOUT_QUERY */
class SOAP_CMAC ns1__ST_USCOREMEMBER_USCORELOGOUT_USCOREQUERY
{
public:
	int nAdministratorID;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 47; } /* = unique type id SOAP_TYPE_ns1__ST_USCOREMEMBER_USCORELOGOUT_USCOREQUERY */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCOREMEMBER_USCORELOGOUT_USCOREQUERY() { ns1__ST_USCOREMEMBER_USCORELOGOUT_USCOREQUERY::soap_default(NULL); }
	virtual ~ns1__ST_USCOREMEMBER_USCORELOGOUT_USCOREQUERY() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCOREAPPLY_USCOREREGISTRATION_USCOREQUERY
#define SOAP_TYPE_ns1__ST_USCOREAPPLY_USCOREREGISTRATION_USCOREQUERY (48)
/* ns1:ST_APPLY_REGISTRATION_QUERY */
class SOAP_CMAC ns1__ST_USCOREAPPLY_USCOREREGISTRATION_USCOREQUERY
{
public:
	std::string *strUserID;	/* optional element of type xsd:string */
	std::string *strPassWord;	/* optional element of type xsd:string */
	std::string *strComputerName;	/* optional element of type xsd:string */
	std::string *strComment;	/* optional element of type xsd:string */
	int guid_USCOREData1;	/* required element of type xsd:int */
	short guid_USCOREData2;	/* required element of type xsd:short */
	short guid_USCOREData3;	/* required element of type xsd:short */
	unsigned char guid_USCOREData4_USCORE1;	/* required element of type xsd:unsignedByte */
	unsigned char guid_USCOREData4_USCORE2;	/* required element of type xsd:unsignedByte */
	unsigned char guid_USCOREData4_USCORE3;	/* required element of type xsd:unsignedByte */
	unsigned char guid_USCOREData4_USCORE4;	/* required element of type xsd:unsignedByte */
	unsigned char guid_USCOREData4_USCORE5;	/* required element of type xsd:unsignedByte */
	unsigned char guid_USCOREData4_USCORE6;	/* required element of type xsd:unsignedByte */
	unsigned char guid_USCOREData4_USCORE7;	/* required element of type xsd:unsignedByte */
	unsigned char guid_USCOREData4_USCORE8;	/* required element of type xsd:unsignedByte */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 48; } /* = unique type id SOAP_TYPE_ns1__ST_USCOREAPPLY_USCOREREGISTRATION_USCOREQUERY */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCOREAPPLY_USCOREREGISTRATION_USCOREQUERY() { ns1__ST_USCOREAPPLY_USCOREREGISTRATION_USCOREQUERY::soap_default(NULL); }
	virtual ~ns1__ST_USCOREAPPLY_USCOREREGISTRATION_USCOREQUERY() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCOREMODIFY_USCOREMEMBER_USCORELICENSE_USCOREQUERY
#define SOAP_TYPE_ns1__ST_USCOREMODIFY_USCOREMEMBER_USCORELICENSE_USCOREQUERY (49)
/* ns1:ST_MODIFY_MEMBER_LICENSE_QUERY */
class SOAP_CMAC ns1__ST_USCOREMODIFY_USCOREMEMBER_USCORELICENSE_USCOREQUERY
{
public:
	int nLicenseID;	/* required element of type xsd:int */
	int nAdmit;	/* required element of type xsd:int */
	int nDelete;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 49; } /* = unique type id SOAP_TYPE_ns1__ST_USCOREMODIFY_USCOREMEMBER_USCORELICENSE_USCOREQUERY */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCOREMODIFY_USCOREMEMBER_USCORELICENSE_USCOREQUERY() { ns1__ST_USCOREMODIFY_USCOREMEMBER_USCORELICENSE_USCOREQUERY::soap_default(NULL); }
	virtual ~ns1__ST_USCOREMODIFY_USCOREMEMBER_USCORELICENSE_USCOREQUERY() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCOREGET_USCOREMEMBER_USCORELIST_USCOREQUERY
#define SOAP_TYPE_ns1__ST_USCOREGET_USCOREMEMBER_USCORELIST_USCOREQUERY (50)
/* ns1:ST_GET_MEMBER_LIST_QUERY */
class SOAP_CMAC ns1__ST_USCOREGET_USCOREMEMBER_USCORELIST_USCOREQUERY
{
public:
	std::string *strMemberName;	/* optional element of type xsd:string */
	std::string *strGroup;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 50; } /* = unique type id SOAP_TYPE_ns1__ST_USCOREGET_USCOREMEMBER_USCORELIST_USCOREQUERY */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCOREGET_USCOREMEMBER_USCORELIST_USCOREQUERY() { ns1__ST_USCOREGET_USCOREMEMBER_USCORELIST_USCOREQUERY::soap_default(NULL); }
	virtual ~ns1__ST_USCOREGET_USCOREMEMBER_USCORELIST_USCOREQUERY() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfST_USCOREGET_USCOREMEMBER_USCORELIST_USCORERETURN
#define SOAP_TYPE_ns1__ArrayOfST_USCOREGET_USCOREMEMBER_USCORELIST_USCORERETURN (51)
/* ns1:ArrayOfST_GET_MEMBER_LIST_RETURN */
class SOAP_CMAC ns1__ArrayOfST_USCOREGET_USCOREMEMBER_USCORELIST_USCORERETURN
{
public:
	std::vector<class ns1__ST_USCOREGET_USCOREMEMBER_USCORELIST_USCORERETURN * >ST_USCOREGET_USCOREMEMBER_USCORELIST_USCORERETURN;	/* optional element of type ns1:ST_GET_MEMBER_LIST_RETURN */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 51; } /* = unique type id SOAP_TYPE_ns1__ArrayOfST_USCOREGET_USCOREMEMBER_USCORELIST_USCORERETURN */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfST_USCOREGET_USCOREMEMBER_USCORELIST_USCORERETURN() { ns1__ArrayOfST_USCOREGET_USCOREMEMBER_USCORELIST_USCORERETURN::soap_default(NULL); }
	virtual ~ns1__ArrayOfST_USCOREGET_USCOREMEMBER_USCORELIST_USCORERETURN() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCOREGET_USCOREMEMBER_USCORELIST_USCORERETURN
#define SOAP_TYPE_ns1__ST_USCOREGET_USCOREMEMBER_USCORELIST_USCORERETURN (52)
/* ns1:ST_GET_MEMBER_LIST_RETURN */
class SOAP_CMAC ns1__ST_USCOREGET_USCOREMEMBER_USCORELIST_USCORERETURN
{
public:
	std::string *strMemberID;	/* optional element of type xsd:string */
	std::string *strMemberNicName;	/* optional element of type xsd:string */
	std::string *strMemberPassWord;	/* optional element of type xsd:string */
	std::string *strMemberName;	/* optional element of type xsd:string */
	std::string *strMemberGroup;	/* optional element of type xsd:string */
	std::string *strMemberPhone;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 52; } /* = unique type id SOAP_TYPE_ns1__ST_USCOREGET_USCOREMEMBER_USCORELIST_USCORERETURN */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCOREGET_USCOREMEMBER_USCORELIST_USCORERETURN() { ns1__ST_USCOREGET_USCOREMEMBER_USCORELIST_USCORERETURN::soap_default(NULL); }
	virtual ~ns1__ST_USCOREGET_USCOREMEMBER_USCORELIST_USCORERETURN() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCOREGET_USCOREMEMBER_USCORELICENSE_USCORELIST_USCOREQUERY
#define SOAP_TYPE_ns1__ST_USCOREGET_USCOREMEMBER_USCORELICENSE_USCORELIST_USCOREQUERY (53)
/* ns1:ST_GET_MEMBER_LICENSE_LIST_QUERY */
class SOAP_CMAC ns1__ST_USCOREGET_USCOREMEMBER_USCORELICENSE_USCORELIST_USCOREQUERY
{
public:
	int nMemberID;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 53; } /* = unique type id SOAP_TYPE_ns1__ST_USCOREGET_USCOREMEMBER_USCORELICENSE_USCORELIST_USCOREQUERY */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCOREGET_USCOREMEMBER_USCORELICENSE_USCORELIST_USCOREQUERY() { ns1__ST_USCOREGET_USCOREMEMBER_USCORELICENSE_USCORELIST_USCOREQUERY::soap_default(NULL); }
	virtual ~ns1__ST_USCOREGET_USCOREMEMBER_USCORELICENSE_USCORELIST_USCOREQUERY() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfST_USCOREGET_USCOREMEMBER_USCORELICENSE_USCORELIST_USCORERETURN
#define SOAP_TYPE_ns1__ArrayOfST_USCOREGET_USCOREMEMBER_USCORELICENSE_USCORELIST_USCORERETURN (54)
/* ns1:ArrayOfST_GET_MEMBER_LICENSE_LIST_RETURN */
class SOAP_CMAC ns1__ArrayOfST_USCOREGET_USCOREMEMBER_USCORELICENSE_USCORELIST_USCORERETURN
{
public:
	std::vector<class ns1__ST_USCOREGET_USCOREMEMBER_USCORELICENSE_USCORELIST_USCORERETURN * >ST_USCOREGET_USCOREMEMBER_USCORELICENSE_USCORELIST_USCORERETURN;	/* optional element of type ns1:ST_GET_MEMBER_LICENSE_LIST_RETURN */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 54; } /* = unique type id SOAP_TYPE_ns1__ArrayOfST_USCOREGET_USCOREMEMBER_USCORELICENSE_USCORELIST_USCORERETURN */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfST_USCOREGET_USCOREMEMBER_USCORELICENSE_USCORELIST_USCORERETURN() { ns1__ArrayOfST_USCOREGET_USCOREMEMBER_USCORELICENSE_USCORELIST_USCORERETURN::soap_default(NULL); }
	virtual ~ns1__ArrayOfST_USCOREGET_USCOREMEMBER_USCORELICENSE_USCORELIST_USCORERETURN() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCOREGET_USCOREMEMBER_USCORELICENSE_USCORELIST_USCORERETURN
#define SOAP_TYPE_ns1__ST_USCOREGET_USCOREMEMBER_USCORELICENSE_USCORELIST_USCORERETURN (55)
/* ns1:ST_GET_MEMBER_LICENSE_LIST_RETURN */
class SOAP_CMAC ns1__ST_USCOREGET_USCOREMEMBER_USCORELICENSE_USCORELIST_USCORERETURN
{
public:
	std::string *strLicenseID;	/* optional element of type xsd:string */
	std::string *strMemberID;	/* optional element of type xsd:string */
	std::string *strAdmission;	/* optional element of type xsd:string */
	std::string *strRegistDate;	/* optional element of type xsd:string */
	std::string *strComputerName;	/* optional element of type xsd:string */
	std::string *strComment;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 55; } /* = unique type id SOAP_TYPE_ns1__ST_USCOREGET_USCOREMEMBER_USCORELICENSE_USCORELIST_USCORERETURN */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCOREGET_USCOREMEMBER_USCORELICENSE_USCORELIST_USCORERETURN() { ns1__ST_USCOREGET_USCOREMEMBER_USCORELICENSE_USCORELIST_USCORERETURN::soap_default(NULL); }
	virtual ~ns1__ST_USCOREGET_USCOREMEMBER_USCORELICENSE_USCORELIST_USCORERETURN() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCOREDELETE_USCORERECORD_USCOREQUERY
#define SOAP_TYPE_ns1__ST_USCOREDELETE_USCORERECORD_USCOREQUERY (56)
/* ns1:ST_DELETE_RECORD_QUERY */
class SOAP_CMAC ns1__ST_USCOREDELETE_USCORERECORD_USCOREQUERY
{
public:
	std::string *strTargetName;	/* optional element of type xsd:string */
	std::string *strTargetKeyValue;	/* optional element of type xsd:string */
	int nAdministratorID;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 56; } /* = unique type id SOAP_TYPE_ns1__ST_USCOREDELETE_USCORERECORD_USCOREQUERY */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCOREDELETE_USCORERECORD_USCOREQUERY() { ns1__ST_USCOREDELETE_USCORERECORD_USCOREQUERY::soap_default(NULL); }
	virtual ~ns1__ST_USCOREDELETE_USCORERECORD_USCOREQUERY() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCOREADMIT_USCOREMODIFY_USCORELYRIC_USCOREQUERY
#define SOAP_TYPE_ns1__ST_USCOREADMIT_USCOREMODIFY_USCORELYRIC_USCOREQUERY (57)
/* ns1:ST_ADMIT_MODIFY_LYRIC_QUERY */
class SOAP_CMAC ns1__ST_USCOREADMIT_USCOREMODIFY_USCORELYRIC_USCOREQUERY
{
public:
	std::string *strMD5;	/* optional element of type xsd:string */
	std::string *strModifyID;	/* optional element of type xsd:string */
	int nAdministratorID;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 57; } /* = unique type id SOAP_TYPE_ns1__ST_USCOREADMIT_USCOREMODIFY_USCORELYRIC_USCOREQUERY */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCOREADMIT_USCOREMODIFY_USCORELYRIC_USCOREQUERY() { ns1__ST_USCOREADMIT_USCOREMODIFY_USCORELYRIC_USCOREQUERY::soap_default(NULL); }
	virtual ~ns1__ST_USCOREADMIT_USCOREMODIFY_USCORELYRIC_USCOREQUERY() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCOREREPORT_USCOREBLACKLIST_USCOREREPORT_USCOREQUERY
#define SOAP_TYPE_ns1__ST_USCOREREPORT_USCOREBLACKLIST_USCOREREPORT_USCOREQUERY (58)
/* ns1:ST_REPORT_BLACKLIST_REPORT_QUERY */
class SOAP_CMAC ns1__ST_USCOREREPORT_USCOREBLACKLIST_USCOREREPORT_USCOREQUERY
{
public:
	short nIsModifyReport;	/* required element of type xsd:short */
	int nLyricID;	/* required element of type xsd:int */
	int nAdministratorID;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 58; } /* = unique type id SOAP_TYPE_ns1__ST_USCOREREPORT_USCOREBLACKLIST_USCOREREPORT_USCOREQUERY */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCOREREPORT_USCOREBLACKLIST_USCOREREPORT_USCOREQUERY() { ns1__ST_USCOREREPORT_USCOREBLACKLIST_USCOREREPORT_USCOREQUERY::soap_default(NULL); }
	virtual ~ns1__ST_USCOREREPORT_USCOREBLACKLIST_USCOREREPORT_USCOREQUERY() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCOREGET_USCORECOUNT_USCOREIN_USCOREREGISTER_USCOREQUERY
#define SOAP_TYPE_ns1__ST_USCOREGET_USCORECOUNT_USCOREIN_USCOREREGISTER_USCOREQUERY (59)
/* ns1:ST_GET_COUNT_IN_REGISTER_QUERY */
class SOAP_CMAC ns1__ST_USCOREGET_USCORECOUNT_USCOREIN_USCOREREGISTER_USCOREQUERY
{
public:
	std::string *strRegisterName;	/* optional element of type xsd:string */
	std::string *strRegisterEMail;	/* optional element of type xsd:string */
	std::string *strStartDate;	/* optional element of type xsd:string */
	std::string *strEndDate;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 59; } /* = unique type id SOAP_TYPE_ns1__ST_USCOREGET_USCORECOUNT_USCOREIN_USCOREREGISTER_USCOREQUERY */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCOREGET_USCORECOUNT_USCOREIN_USCOREREGISTER_USCOREQUERY() { ns1__ST_USCOREGET_USCORECOUNT_USCOREIN_USCOREREGISTER_USCOREQUERY::soap_default(NULL); }
	virtual ~ns1__ST_USCOREGET_USCORECOUNT_USCOREIN_USCOREREGISTER_USCOREQUERY() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCOREGET_USCORECOUNT_USCOREIN_USCOREREGISTER_USCORERETURN
#define SOAP_TYPE_ns1__ST_USCOREGET_USCORECOUNT_USCOREIN_USCOREREGISTER_USCORERETURN (60)
/* ns1:ST_GET_COUNT_IN_REGISTER_RETURN */
class SOAP_CMAC ns1__ST_USCOREGET_USCORECOUNT_USCOREIN_USCOREREGISTER_USCORERETURN
{
public:
	std::string *strRegistLyricFirstCount;	/* optional element of type xsd:string */
	std::string *strRegistLyricLastCount;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 60; } /* = unique type id SOAP_TYPE_ns1__ST_USCOREGET_USCORECOUNT_USCOREIN_USCOREREGISTER_USCORERETURN */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCOREGET_USCORECOUNT_USCOREIN_USCOREREGISTER_USCORERETURN() { ns1__ST_USCOREGET_USCORECOUNT_USCOREIN_USCOREREGISTER_USCORERETURN::soap_default(NULL); }
	virtual ~ns1__ST_USCOREGET_USCORECOUNT_USCOREIN_USCOREREGISTER_USCORERETURN() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCOREGET_USCORECOUNT_USCORECHECKSUM_USCORERETURN
#define SOAP_TYPE_ns1__ST_USCOREGET_USCORECOUNT_USCORECHECKSUM_USCORERETURN (61)
/* ns1:ST_GET_COUNT_CHECKSUM_RETURN */
class SOAP_CMAC ns1__ST_USCOREGET_USCORECOUNT_USCORECHECKSUM_USCORERETURN
{
public:
	std::string *strMainCount;	/* optional element of type xsd:string */
	std::string *strExistSyncCount;	/* optional element of type xsd:string */
	std::string *strExistWordCount;	/* optional element of type xsd:string */
	std::string *strDeletedMainCount;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 61; } /* = unique type id SOAP_TYPE_ns1__ST_USCOREGET_USCORECOUNT_USCORECHECKSUM_USCORERETURN */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCOREGET_USCORECOUNT_USCORECHECKSUM_USCORERETURN() { ns1__ST_USCOREGET_USCORECOUNT_USCORECHECKSUM_USCORERETURN::soap_default(NULL); }
	virtual ~ns1__ST_USCOREGET_USCORECOUNT_USCORECHECKSUM_USCORERETURN() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCOREGET_USCORECOUNT_USCORELYRIC_USCORERETURN
#define SOAP_TYPE_ns1__ST_USCOREGET_USCORECOUNT_USCORELYRIC_USCORERETURN (62)
/* ns1:ST_GET_COUNT_LYRIC_RETURN */
class SOAP_CMAC ns1__ST_USCOREGET_USCORECOUNT_USCORELYRIC_USCORERETURN
{
public:
	std::string *strInfoCount;	/* optional element of type xsd:string */
	std::string *strExistSyncCount;	/* optional element of type xsd:string */
	std::string *strExistWordCount;	/* optional element of type xsd:string */
	std::string *strDeletedInfoCount;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 62; } /* = unique type id SOAP_TYPE_ns1__ST_USCOREGET_USCORECOUNT_USCORELYRIC_USCORERETURN */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCOREGET_USCORECOUNT_USCORELYRIC_USCORERETURN() { ns1__ST_USCOREGET_USCORECOUNT_USCORELYRIC_USCORERETURN::soap_default(NULL); }
	virtual ~ns1__ST_USCOREGET_USCORECOUNT_USCORELYRIC_USCORERETURN() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCOREGET_USCORECOUNT_USCOREMODIFY_USCOREQUERY
#define SOAP_TYPE_ns1__ST_USCOREGET_USCORECOUNT_USCOREMODIFY_USCOREQUERY (63)
/* ns1:ST_GET_COUNT_MODIFY_QUERY */
class SOAP_CMAC ns1__ST_USCOREGET_USCORECOUNT_USCOREMODIFY_USCOREQUERY
{
public:
	std::string *strStartDate;	/* optional element of type xsd:string */
	std::string *strEndDate;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 63; } /* = unique type id SOAP_TYPE_ns1__ST_USCOREGET_USCORECOUNT_USCOREMODIFY_USCOREQUERY */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCOREGET_USCORECOUNT_USCOREMODIFY_USCOREQUERY() { ns1__ST_USCOREGET_USCORECOUNT_USCOREMODIFY_USCOREQUERY::soap_default(NULL); }
	virtual ~ns1__ST_USCOREGET_USCORECOUNT_USCOREMODIFY_USCOREQUERY() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCOREGET_USCORECOUNT_USCOREMODIFY_USCORERETURN
#define SOAP_TYPE_ns1__ST_USCOREGET_USCORECOUNT_USCOREMODIFY_USCORERETURN (64)
/* ns1:ST_GET_COUNT_MODIFY_RETURN */
class SOAP_CMAC ns1__ST_USCOREGET_USCORECOUNT_USCOREMODIFY_USCORERETURN
{
public:
	std::string *strModifyCount;	/* optional element of type xsd:string */
	std::string *strNotAdmitCount;	/* optional element of type xsd:string */
	std::string *strAdmitCount;	/* optional element of type xsd:string */
	std::string *strDeleteCount;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 64; } /* = unique type id SOAP_TYPE_ns1__ST_USCOREGET_USCORECOUNT_USCOREMODIFY_USCORERETURN */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCOREGET_USCORECOUNT_USCOREMODIFY_USCORERETURN() { ns1__ST_USCOREGET_USCORECOUNT_USCOREMODIFY_USCORERETURN::soap_default(NULL); }
	virtual ~ns1__ST_USCOREGET_USCORECOUNT_USCOREMODIFY_USCORERETURN() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCOREGET_USCORECOUNT_USCOREREPORT_USCOREQUERY
#define SOAP_TYPE_ns1__ST_USCOREGET_USCORECOUNT_USCOREREPORT_USCOREQUERY (65)
/* ns1:ST_GET_COUNT_REPORT_QUERY */
class SOAP_CMAC ns1__ST_USCOREGET_USCORECOUNT_USCOREREPORT_USCOREQUERY
{
public:
	std::string *strStartDate;	/* optional element of type xsd:string */
	std::string *strEndDate;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 65; } /* = unique type id SOAP_TYPE_ns1__ST_USCOREGET_USCORECOUNT_USCOREREPORT_USCOREQUERY */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCOREGET_USCORECOUNT_USCOREREPORT_USCOREQUERY() { ns1__ST_USCOREGET_USCORECOUNT_USCOREREPORT_USCOREQUERY::soap_default(NULL); }
	virtual ~ns1__ST_USCOREGET_USCORECOUNT_USCOREREPORT_USCOREQUERY() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCOREGET_USCORECOUNT_USCOREREPORT_USCORERETURN
#define SOAP_TYPE_ns1__ST_USCOREGET_USCORECOUNT_USCOREREPORT_USCORERETURN (66)
/* ns1:ST_GET_COUNT_REPORT_RETURN */
class SOAP_CMAC ns1__ST_USCOREGET_USCORECOUNT_USCOREREPORT_USCORERETURN
{
public:
	std::string *strReportCount;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 66; } /* = unique type id SOAP_TYPE_ns1__ST_USCOREGET_USCORECOUNT_USCOREREPORT_USCORERETURN */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCOREGET_USCORECOUNT_USCOREREPORT_USCORERETURN() { ns1__ST_USCOREGET_USCORECOUNT_USCOREREPORT_USCORERETURN::soap_default(NULL); }
	virtual ~ns1__ST_USCOREGET_USCORECOUNT_USCOREREPORT_USCORERETURN() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCOREGET_USCOREALBA_USCORESTATISTIC_USCOREQUERY
#define SOAP_TYPE_ns1__ST_USCOREGET_USCOREALBA_USCORESTATISTIC_USCOREQUERY (67)
/* ns1:ST_GET_ALBA_STATISTIC_QUERY */
class SOAP_CMAC ns1__ST_USCOREGET_USCOREALBA_USCORESTATISTIC_USCOREQUERY
{
public:
	std::string *strMemberName;	/* optional element of type xsd:string */
	std::string *strStartDate;	/* optional element of type xsd:string */
	std::string *strEndDate;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 67; } /* = unique type id SOAP_TYPE_ns1__ST_USCOREGET_USCOREALBA_USCORESTATISTIC_USCOREQUERY */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCOREGET_USCOREALBA_USCORESTATISTIC_USCOREQUERY() { ns1__ST_USCOREGET_USCOREALBA_USCORESTATISTIC_USCOREQUERY::soap_default(NULL); }
	virtual ~ns1__ST_USCOREGET_USCOREALBA_USCORESTATISTIC_USCOREQUERY() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfST_USCOREGET_USCOREALBA_USCORESTATISTIC_USCORERETURN
#define SOAP_TYPE_ns1__ArrayOfST_USCOREGET_USCOREALBA_USCORESTATISTIC_USCORERETURN (68)
/* ns1:ArrayOfST_GET_ALBA_STATISTIC_RETURN */
class SOAP_CMAC ns1__ArrayOfST_USCOREGET_USCOREALBA_USCORESTATISTIC_USCORERETURN
{
public:
	std::vector<class ns1__ST_USCOREGET_USCOREALBA_USCORESTATISTIC_USCORERETURN * >ST_USCOREGET_USCOREALBA_USCORESTATISTIC_USCORERETURN;	/* optional element of type ns1:ST_GET_ALBA_STATISTIC_RETURN */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 68; } /* = unique type id SOAP_TYPE_ns1__ArrayOfST_USCOREGET_USCOREALBA_USCORESTATISTIC_USCORERETURN */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfST_USCOREGET_USCOREALBA_USCORESTATISTIC_USCORERETURN() { ns1__ArrayOfST_USCOREGET_USCOREALBA_USCORESTATISTIC_USCORERETURN::soap_default(NULL); }
	virtual ~ns1__ArrayOfST_USCOREGET_USCOREALBA_USCORESTATISTIC_USCORERETURN() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCOREGET_USCOREALBA_USCORESTATISTIC_USCORERETURN
#define SOAP_TYPE_ns1__ST_USCOREGET_USCOREALBA_USCORESTATISTIC_USCORERETURN (69)
/* ns1:ST_GET_ALBA_STATISTIC_RETURN */
class SOAP_CMAC ns1__ST_USCOREGET_USCOREALBA_USCORESTATISTIC_USCORERETURN
{
public:
	std::string *strModifyCount;	/* optional element of type xsd:string */
	std::string *strReportCount;	/* optional element of type xsd:string */
	std::string *strCountDate;	/* optional element of type xsd:string */
	std::string *strAdministratorName;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 69; } /* = unique type id SOAP_TYPE_ns1__ST_USCOREGET_USCOREALBA_USCORESTATISTIC_USCORERETURN */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCOREGET_USCOREALBA_USCORESTATISTIC_USCORERETURN() { ns1__ST_USCOREGET_USCOREALBA_USCORESTATISTIC_USCORERETURN::soap_default(NULL); }
	virtual ~ns1__ST_USCOREGET_USCOREALBA_USCORESTATISTIC_USCORERETURN() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCORECAST_USCOREUPLOAD_USCOREEX_USCOREMETADATA_USCOREQUERY
#define SOAP_TYPE_ns1__ST_USCORECAST_USCOREUPLOAD_USCOREEX_USCOREMETADATA_USCOREQUERY (70)
/* ns1:ST_CAST_UPLOAD_EX_METADATA_QUERY */
class SOAP_CMAC ns1__ST_USCORECAST_USCOREUPLOAD_USCOREEX_USCOREMETADATA_USCOREQUERY
{
public:
	std::string *strCastID;	/* optional element of type xsd:string */
	std::string *strMD5;	/* optional element of type xsd:string */
	std::string *strCastTitle;	/* optional element of type xsd:string */
	std::string *strListenURL;	/* optional element of type xsd:string */
	std::string *strMusicTitle;	/* optional element of type xsd:string */
	std::string *strRefURL;	/* optional element of type xsd:string */
	std::string *strIntro;	/* optional element of type xsd:string */
	int nSortOrder;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 70; } /* = unique type id SOAP_TYPE_ns1__ST_USCORECAST_USCOREUPLOAD_USCOREEX_USCOREMETADATA_USCOREQUERY */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCORECAST_USCOREUPLOAD_USCOREEX_USCOREMETADATA_USCOREQUERY() { ns1__ST_USCORECAST_USCOREUPLOAD_USCOREEX_USCOREMETADATA_USCOREQUERY::soap_default(NULL); }
	virtual ~ns1__ST_USCORECAST_USCOREUPLOAD_USCOREEX_USCOREMETADATA_USCOREQUERY() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCORECAST_USCOREUPLOAD_USCOREEX_USCOREMETADATA2_USCOREQUERY
#define SOAP_TYPE_ns1__ST_USCORECAST_USCOREUPLOAD_USCOREEX_USCOREMETADATA2_USCOREQUERY (71)
/* ns1:ST_CAST_UPLOAD_EX_METADATA2_QUERY */
class SOAP_CMAC ns1__ST_USCORECAST_USCOREUPLOAD_USCOREEX_USCOREMETADATA2_USCOREQUERY
{
public:
	std::string *strCastID;	/* optional element of type xsd:string */
	std::string *strMD5;	/* optional element of type xsd:string */
	std::string *strCastTitle;	/* optional element of type xsd:string */
	std::string *strListenURL;	/* optional element of type xsd:string */
	std::string *strMusicTitle;	/* optional element of type xsd:string */
	std::string *strRefURL;	/* optional element of type xsd:string */
	std::string *strIntro;	/* optional element of type xsd:string */
	int nSortOrder;	/* required element of type xsd:int */
	short bHide;	/* required element of type xsd:short */
	int nListenerCount;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 71; } /* = unique type id SOAP_TYPE_ns1__ST_USCORECAST_USCOREUPLOAD_USCOREEX_USCOREMETADATA2_USCOREQUERY */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCORECAST_USCOREUPLOAD_USCOREEX_USCOREMETADATA2_USCOREQUERY() { ns1__ST_USCORECAST_USCOREUPLOAD_USCOREEX_USCOREMETADATA2_USCOREQUERY::soap_default(NULL); }
	virtual ~ns1__ST_USCORECAST_USCOREUPLOAD_USCOREEX_USCOREMETADATA2_USCOREQUERY() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCORECAST_USCOREUPLOAD_USCOREEX_USCOREMETADATA3_USCOREQUERY
#define SOAP_TYPE_ns1__ST_USCORECAST_USCOREUPLOAD_USCOREEX_USCOREMETADATA3_USCOREQUERY (72)
/* ns1:ST_CAST_UPLOAD_EX_METADATA3_QUERY */
class SOAP_CMAC ns1__ST_USCORECAST_USCOREUPLOAD_USCOREEX_USCOREMETADATA3_USCOREQUERY
{
public:
	std::string *strCastID;	/* optional element of type xsd:string */
	std::string *strMD5;	/* optional element of type xsd:string */
	std::string *strCastTitle;	/* optional element of type xsd:string */
	std::string *strListenURL;	/* optional element of type xsd:string */
	std::string *strMusicTitle;	/* optional element of type xsd:string */
	std::string *strRefURL;	/* optional element of type xsd:string */
	std::string *strIntro;	/* optional element of type xsd:string */
	int nSortOrder;	/* required element of type xsd:int */
	short bHide;	/* required element of type xsd:short */
	int nListenerCount;	/* required element of type xsd:int */
	std::string *genre;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 72; } /* = unique type id SOAP_TYPE_ns1__ST_USCORECAST_USCOREUPLOAD_USCOREEX_USCOREMETADATA3_USCOREQUERY */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCORECAST_USCOREUPLOAD_USCOREEX_USCOREMETADATA3_USCOREQUERY() { ns1__ST_USCORECAST_USCOREUPLOAD_USCOREEX_USCOREMETADATA3_USCOREQUERY::soap_default(NULL); }
	virtual ~ns1__ST_USCORECAST_USCOREUPLOAD_USCOREEX_USCOREMETADATA3_USCOREQUERY() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCORECAST_USCOREREMOVE_USCOREEX_USCOREMETADATA_USCOREQUERY
#define SOAP_TYPE_ns1__ST_USCORECAST_USCOREREMOVE_USCOREEX_USCOREMETADATA_USCOREQUERY (73)
/* ns1:ST_CAST_REMOVE_EX_METADATA_QUERY */
class SOAP_CMAC ns1__ST_USCORECAST_USCOREREMOVE_USCOREEX_USCOREMETADATA_USCOREQUERY
{
public:
	std::string *strCastID;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 73; } /* = unique type id SOAP_TYPE_ns1__ST_USCORECAST_USCOREREMOVE_USCOREEX_USCOREMETADATA_USCOREQUERY */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCORECAST_USCOREREMOVE_USCOREEX_USCOREMETADATA_USCOREQUERY() { ns1__ST_USCORECAST_USCOREREMOVE_USCOREEX_USCOREMETADATA_USCOREQUERY::soap_default(NULL); }
	virtual ~ns1__ST_USCORECAST_USCOREREMOVE_USCOREEX_USCOREMETADATA_USCOREQUERY() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCOREQUERY
#define SOAP_TYPE_ns1__ST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCOREQUERY (74)
/* ns1:ST_CAST_GET_EX_METADATA_QUERY */
class SOAP_CMAC ns1__ST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCOREQUERY
{
public:
	std::string *strCastID;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 74; } /* = unique type id SOAP_TYPE_ns1__ST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCOREQUERY */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCOREQUERY() { ns1__ST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCOREQUERY::soap_default(NULL); }
	virtual ~ns1__ST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCOREQUERY() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORERETURN
#define SOAP_TYPE_ns1__ST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORERETURN (75)
/* ns1:ST_CAST_GET_EX_METADATA_RETURN */
class SOAP_CMAC ns1__ST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORERETURN
{
public:
	std::string *strCastID;	/* optional element of type xsd:string */
	std::string *strMD5;	/* optional element of type xsd:string */
	std::string *strCastTitle;	/* optional element of type xsd:string */
	std::string *strListenURL;	/* optional element of type xsd:string */
	std::string *strMusicTitle;	/* optional element of type xsd:string */
	std::string *strRefURL;	/* optional element of type xsd:string */
	std::string *strMusicIntro;	/* optional element of type xsd:string */
	std::string *strLyric;	/* optional element of type xsd:string */
	std::string *strRegisterFirstName;	/* optional element of type xsd:string */
	std::string *strRegisterName;	/* optional element of type xsd:string */
	std::string *strRegisterFirstEMail;	/* optional element of type xsd:string */
	std::string *strRegisterEMail;	/* optional element of type xsd:string */
	std::string *strRegisterFirstURL;	/* optional element of type xsd:string */
	std::string *strRegisterURL;	/* optional element of type xsd:string */
	std::string *strRegisterFirstPhone;	/* optional element of type xsd:string */
	std::string *strRegisterPhone;	/* optional element of type xsd:string */
	std::string *strRegisterFirstComment;	/* optional element of type xsd:string */
	std::string *strRegisterComment;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 75; } /* = unique type id SOAP_TYPE_ns1__ST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORERETURN */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORERETURN() { ns1__ST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORERETURN::soap_default(NULL); }
	virtual ~ns1__ST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORERETURN() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORELIST_USCORERETURN
#define SOAP_TYPE_ns1__ArrayOfST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORELIST_USCORERETURN (76)
/* ns1:ArrayOfST_CAST_GET_EX_METADATA_LIST_RETURN */
class SOAP_CMAC ns1__ArrayOfST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORELIST_USCORERETURN
{
public:
	std::vector<class ns1__ST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORELIST_USCORERETURN * >ST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORELIST_USCORERETURN;	/* optional element of type ns1:ST_CAST_GET_EX_METADATA_LIST_RETURN */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 76; } /* = unique type id SOAP_TYPE_ns1__ArrayOfST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORELIST_USCORERETURN */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORELIST_USCORERETURN() { ns1__ArrayOfST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORELIST_USCORERETURN::soap_default(NULL); }
	virtual ~ns1__ArrayOfST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORELIST_USCORERETURN() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORELIST_USCORERETURN
#define SOAP_TYPE_ns1__ST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORELIST_USCORERETURN (77)
/* ns1:ST_CAST_GET_EX_METADATA_LIST_RETURN */
class SOAP_CMAC ns1__ST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORELIST_USCORERETURN
{
public:
	std::string *strCastID;	/* optional element of type xsd:string */
	std::string *strCastTitle;	/* optional element of type xsd:string */
	std::string *strListenURL;	/* optional element of type xsd:string */
	std::string *strMusicTitle;	/* optional element of type xsd:string */
	std::string *strRefURL;	/* optional element of type xsd:string */
	std::string *strIntro;	/* optional element of type xsd:string */
	std::string *strSortOrder;	/* optional element of type xsd:string */
	std::string *strCreateDate;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 77; } /* = unique type id SOAP_TYPE_ns1__ST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORELIST_USCORERETURN */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORELIST_USCORERETURN() { ns1__ST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORELIST_USCORERETURN::soap_default(NULL); }
	virtual ~ns1__ST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORELIST_USCORERETURN() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORELIST2_USCORERETURN
#define SOAP_TYPE_ns1__ArrayOfST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORELIST2_USCORERETURN (78)
/* ns1:ArrayOfST_CAST_GET_EX_METADATA_LIST2_RETURN */
class SOAP_CMAC ns1__ArrayOfST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORELIST2_USCORERETURN
{
public:
	std::vector<class ns1__ST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORELIST2_USCORERETURN * >ST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORELIST2_USCORERETURN;	/* optional element of type ns1:ST_CAST_GET_EX_METADATA_LIST2_RETURN */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 78; } /* = unique type id SOAP_TYPE_ns1__ArrayOfST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORELIST2_USCORERETURN */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORELIST2_USCORERETURN() { ns1__ArrayOfST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORELIST2_USCORERETURN::soap_default(NULL); }
	virtual ~ns1__ArrayOfST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORELIST2_USCORERETURN() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORELIST2_USCORERETURN
#define SOAP_TYPE_ns1__ST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORELIST2_USCORERETURN (79)
/* ns1:ST_CAST_GET_EX_METADATA_LIST2_RETURN */
class SOAP_CMAC ns1__ST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORELIST2_USCORERETURN
{
public:
	std::string *strCastID;	/* optional element of type xsd:string */
	std::string *strCastTitle;	/* optional element of type xsd:string */
	std::string *strListenURL;	/* optional element of type xsd:string */
	std::string *strMusicTitle;	/* optional element of type xsd:string */
	std::string *strRefURL;	/* optional element of type xsd:string */
	std::string *strIntro;	/* optional element of type xsd:string */
	std::string *strSortOrder;	/* optional element of type xsd:string */
	std::string *strCreateDate;	/* optional element of type xsd:string */
	std::string *strListenerCount;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 79; } /* = unique type id SOAP_TYPE_ns1__ST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORELIST2_USCORERETURN */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORELIST2_USCORERETURN() { ns1__ST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORELIST2_USCORERETURN::soap_default(NULL); }
	virtual ~ns1__ST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORELIST2_USCORERETURN() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORELIST3_USCORERETURN
#define SOAP_TYPE_ns1__ArrayOfST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORELIST3_USCORERETURN (80)
/* ns1:ArrayOfST_CAST_GET_EX_METADATA_LIST3_RETURN */
class SOAP_CMAC ns1__ArrayOfST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORELIST3_USCORERETURN
{
public:
	std::vector<class ns1__ST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORELIST3_USCORERETURN * >ST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORELIST3_USCORERETURN;	/* optional element of type ns1:ST_CAST_GET_EX_METADATA_LIST3_RETURN */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 80; } /* = unique type id SOAP_TYPE_ns1__ArrayOfST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORELIST3_USCORERETURN */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORELIST3_USCORERETURN() { ns1__ArrayOfST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORELIST3_USCORERETURN::soap_default(NULL); }
	virtual ~ns1__ArrayOfST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORELIST3_USCORERETURN() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORELIST3_USCORERETURN
#define SOAP_TYPE_ns1__ST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORELIST3_USCORERETURN (81)
/* ns1:ST_CAST_GET_EX_METADATA_LIST3_RETURN */
class SOAP_CMAC ns1__ST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORELIST3_USCORERETURN
{
public:
	std::string *strCastID;	/* optional element of type xsd:string */
	std::string *strCastTitle;	/* optional element of type xsd:string */
	std::string *strListenURL;	/* optional element of type xsd:string */
	std::string *strMusicTitle;	/* optional element of type xsd:string */
	std::string *strRefURL;	/* optional element of type xsd:string */
	std::string *strIntro;	/* optional element of type xsd:string */
	std::string *strSortOrder;	/* optional element of type xsd:string */
	std::string *strCreateDate;	/* optional element of type xsd:string */
	std::string *strListenerCount;	/* optional element of type xsd:string */
	std::string *genre;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 81; } /* = unique type id SOAP_TYPE_ns1__ST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORELIST3_USCORERETURN */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORELIST3_USCORERETURN() { ns1__ST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORELIST3_USCORERETURN::soap_default(NULL); }
	virtual ~ns1__ST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORELIST3_USCORERETURN() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfGetBroadcastingListReturn
#define SOAP_TYPE_ns1__ArrayOfGetBroadcastingListReturn (82)
/* ns1:ArrayOfGetBroadcastingListReturn */
class SOAP_CMAC ns1__ArrayOfGetBroadcastingListReturn
{
public:
	std::vector<class ns1__GetBroadcastingListReturn * >GetBroadcastingListReturn;	/* optional element of type ns1:GetBroadcastingListReturn */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 82; } /* = unique type id SOAP_TYPE_ns1__ArrayOfGetBroadcastingListReturn */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfGetBroadcastingListReturn() { ns1__ArrayOfGetBroadcastingListReturn::soap_default(NULL); }
	virtual ~ns1__ArrayOfGetBroadcastingListReturn() { }
};
#endif

#ifndef SOAP_TYPE_ns1__GetBroadcastingListReturn
#define SOAP_TYPE_ns1__GetBroadcastingListReturn (83)
/* ns1:GetBroadcastingListReturn */
class SOAP_CMAC ns1__GetBroadcastingListReturn
{
public:
	std::string *address;	/* optional element of type xsd:string */
	std::string *title;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 83; } /* = unique type id SOAP_TYPE_ns1__GetBroadcastingListReturn */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__GetBroadcastingListReturn() { ns1__GetBroadcastingListReturn::soap_default(NULL); }
	virtual ~ns1__GetBroadcastingListReturn() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UploadForeignLyricInfo
#define SOAP_TYPE_ns1__UploadForeignLyricInfo (84)
/* ns1:UploadForeignLyricInfo */
class SOAP_CMAC ns1__UploadForeignLyricInfo
{
public:
	std::string *MD5;	/* optional element of type xsd:string */
	std::string *regionalCode_USCOREfile;	/* optional element of type xsd:string */
	std::string *registerFirstName;	/* optional element of type xsd:string */
	std::string *registerFirstEmail;	/* optional element of type xsd:string */
	std::string *registerFirstURL;	/* optional element of type xsd:string */
	std::string *registerFirstPhone;	/* optional element of type xsd:string */
	std::string *registerFirstComment;	/* optional element of type xsd:string */
	std::string *registerName;	/* optional element of type xsd:string */
	std::string *registerEmail;	/* optional element of type xsd:string */
	std::string *registerURL;	/* optional element of type xsd:string */
	std::string *registerPhone;	/* optional element of type xsd:string */
	std::string *registerComment;	/* optional element of type xsd:string */
	std::string *title;	/* optional element of type xsd:string */
	std::string *artist;	/* optional element of type xsd:string */
	std::string *album;	/* optional element of type xsd:string */
	std::string *lyric;	/* optional element of type xsd:string */
	std::string *lyricGuid;	/* optional element of type xsd:string */
	std::string *regionalCode_USCORElyric;	/* optional element of type xsd:string */
	std::string *registerMAC;	/* optional element of type xsd:string */
	std::string *registerIP;	/* optional element of type xsd:string */
	std::string *modified;	/* optional element of type xsd:string */
	std::string *regionalCode_USCOREsender;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 84; } /* = unique type id SOAP_TYPE_ns1__UploadForeignLyricInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UploadForeignLyricInfo() { ns1__UploadForeignLyricInfo::soap_default(NULL); }
	virtual ~ns1__UploadForeignLyricInfo() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfST_USCORESEARCHLYRIC_USCORELIST
#define SOAP_TYPE_ns1__ArrayOfST_USCORESEARCHLYRIC_USCORELIST (85)
/* ns1:ArrayOfST_SEARCHLYRIC_LIST */
class SOAP_CMAC ns1__ArrayOfST_USCORESEARCHLYRIC_USCORELIST
{
public:
	std::vector<class ns1__ST_USCORESEARCHLYRIC_USCORELIST * >ST_USCORESEARCHLYRIC_USCORELIST;	/* optional element of type ns1:ST_SEARCHLYRIC_LIST */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 85; } /* = unique type id SOAP_TYPE_ns1__ArrayOfST_USCORESEARCHLYRIC_USCORELIST */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfST_USCORESEARCHLYRIC_USCORELIST() { ns1__ArrayOfST_USCORESEARCHLYRIC_USCORELIST::soap_default(NULL); }
	virtual ~ns1__ArrayOfST_USCORESEARCHLYRIC_USCORELIST() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCORESEARCHLYRIC_USCORELIST
#define SOAP_TYPE_ns1__ST_USCORESEARCHLYRIC_USCORELIST (86)
/* ns1:ST_SEARCHLYRIC_LIST */
class SOAP_CMAC ns1__ST_USCORESEARCHLYRIC_USCORELIST
{
public:
	std::string *lyricID;	/* optional element of type xsd:string */
	std::string *title;	/* optional element of type xsd:string */
	std::string *artist;	/* optional element of type xsd:string */
	std::string *album;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 86; } /* = unique type id SOAP_TYPE_ns1__ST_USCORESEARCHLYRIC_USCORELIST */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCORESEARCHLYRIC_USCORELIST() { ns1__ST_USCORESEARCHLYRIC_USCORELIST::soap_default(NULL); }
	virtual ~ns1__ST_USCORESEARCHLYRIC_USCORELIST() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCORELYRICINFO
#define SOAP_TYPE_ns1__ST_USCORELYRICINFO (87)
/* ns1:ST_LYRICINFO */
class SOAP_CMAC ns1__ST_USCORELYRICINFO
{
public:
	std::string *lyricID;	/* optional element of type xsd:string */
	std::string *title;	/* optional element of type xsd:string */
	std::string *lyric;	/* optional element of type xsd:string */
	std::string *artist;	/* optional element of type xsd:string */
	std::string *album;	/* optional element of type xsd:string */
	std::string *registerName;	/* optional element of type xsd:string */
	std::string *registerMail;	/* optional element of type xsd:string */
	std::string *registerHomeURL;	/* optional element of type xsd:string */
	std::string *registerPhone;	/* optional element of type xsd:string */
	std::string *registerComment;	/* optional element of type xsd:string */
	std::string *modifierName;	/* optional element of type xsd:string */
	std::string *modifierMail;	/* optional element of type xsd:string */
	std::string *modifierHomeURL;	/* optional element of type xsd:string */
	std::string *modifierPhone;	/* optional element of type xsd:string */
	std::string *modifierComment;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 87; } /* = unique type id SOAP_TYPE_ns1__ST_USCORELYRICINFO */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCORELYRICINFO() { ns1__ST_USCORELYRICINFO::soap_default(NULL); }
	virtual ~ns1__ST_USCORELYRICINFO() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCORERIGHTSINFO_USCOREJPN
#define SOAP_TYPE_ns1__ST_USCORERIGHTSINFO_USCOREJPN (88)
/* ns1:ST_RIGHTSINFO_JPN */
class SOAP_CMAC ns1__ST_USCORERIGHTSINFO_USCOREJPN
{
public:
	int infoID;	/* required element of type xsd:int */
	std::string *title;	/* optional element of type xsd:string */
	std::string *album;	/* optional element of type xsd:string */
	std::string *artist;	/* optional element of type xsd:string */
	std::string *rightsNum1;	/* optional element of type xsd:string */
	std::string *rightsNum2;	/* optional element of type xsd:string */
	std::string *rightsNum3;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 88; } /* = unique type id SOAP_TYPE_ns1__ST_USCORERIGHTSINFO_USCOREJPN */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCORERIGHTSINFO_USCOREJPN() { ns1__ST_USCORERIGHTSINFO_USCOREJPN::soap_default(NULL); }
	virtual ~ns1__ST_USCORERIGHTSINFO_USCOREJPN() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfST_USCORERIGHTSINFO_USCOREJPN
#define SOAP_TYPE_ns1__ArrayOfST_USCORERIGHTSINFO_USCOREJPN (89)
/* ns1:ArrayOfST_RIGHTSINFO_JPN */
class SOAP_CMAC ns1__ArrayOfST_USCORERIGHTSINFO_USCOREJPN
{
public:
	std::vector<ns1__ST_USCORERIGHTSINFO_USCOREJPN * >ST_USCORERIGHTSINFO_USCOREJPN;	/* optional element of type ns1:ST_RIGHTSINFO_JPN */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 89; } /* = unique type id SOAP_TYPE_ns1__ArrayOfST_USCORERIGHTSINFO_USCOREJPN */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfST_USCORERIGHTSINFO_USCOREJPN() { ns1__ArrayOfST_USCORERIGHTSINFO_USCOREJPN::soap_default(NULL); }
	virtual ~ns1__ArrayOfST_USCORERIGHTSINFO_USCOREJPN() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfST_USCORELYRIC_USCOREFORMONITOR
#define SOAP_TYPE_ns1__ArrayOfST_USCORELYRIC_USCOREFORMONITOR (90)
/* ns1:ArrayOfST_LYRIC_FORMONITOR */
class SOAP_CMAC ns1__ArrayOfST_USCORELYRIC_USCOREFORMONITOR
{
public:
	std::vector<class ns1__ST_USCORELYRIC_USCOREFORMONITOR * >ST_USCORELYRIC_USCOREFORMONITOR;	/* optional element of type ns1:ST_LYRIC_FORMONITOR */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 90; } /* = unique type id SOAP_TYPE_ns1__ArrayOfST_USCORELYRIC_USCOREFORMONITOR */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfST_USCORELYRIC_USCOREFORMONITOR() { ns1__ArrayOfST_USCORELYRIC_USCOREFORMONITOR::soap_default(NULL); }
	virtual ~ns1__ArrayOfST_USCORELYRIC_USCOREFORMONITOR() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCORELYRIC_USCOREFORMONITOR
#define SOAP_TYPE_ns1__ST_USCORELYRIC_USCOREFORMONITOR (91)
/* ns1:ST_LYRIC_FORMONITOR */
class SOAP_CMAC ns1__ST_USCORELYRIC_USCOREFORMONITOR
{
public:
	int infoID;	/* required element of type xsd:int */
	std::string *lyric;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 91; } /* = unique type id SOAP_TYPE_ns1__ST_USCORELYRIC_USCOREFORMONITOR */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCORELYRIC_USCOREFORMONITOR() { ns1__ST_USCORELYRIC_USCOREFORMONITOR::soap_default(NULL); }
	virtual ~ns1__ST_USCORELYRIC_USCOREFORMONITOR() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfInt
#define SOAP_TYPE_ns1__ArrayOfInt (92)
/* ns1:ArrayOfInt */
class SOAP_CMAC ns1__ArrayOfInt
{
public:
	std::vector<int >int_;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 92; } /* = unique type id SOAP_TYPE_ns1__ArrayOfInt */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfInt() { ns1__ArrayOfInt::soap_default(NULL); }
	virtual ~ns1__ArrayOfInt() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfST_USCORELYRIC_USCOREDELETE_USCORERESULT
#define SOAP_TYPE_ns1__ArrayOfST_USCORELYRIC_USCOREDELETE_USCORERESULT (93)
/* ns1:ArrayOfST_LYRIC_DELETE_RESULT */
class SOAP_CMAC ns1__ArrayOfST_USCORELYRIC_USCOREDELETE_USCORERESULT
{
public:
	std::vector<class ns1__ST_USCORELYRIC_USCOREDELETE_USCORERESULT * >ST_USCORELYRIC_USCOREDELETE_USCORERESULT;	/* optional element of type ns1:ST_LYRIC_DELETE_RESULT */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 93; } /* = unique type id SOAP_TYPE_ns1__ArrayOfST_USCORELYRIC_USCOREDELETE_USCORERESULT */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfST_USCORELYRIC_USCOREDELETE_USCORERESULT() { ns1__ArrayOfST_USCORELYRIC_USCOREDELETE_USCORERESULT::soap_default(NULL); }
	virtual ~ns1__ArrayOfST_USCORELYRIC_USCOREDELETE_USCORERESULT() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ST_USCORELYRIC_USCOREDELETE_USCORERESULT
#define SOAP_TYPE_ns1__ST_USCORELYRIC_USCOREDELETE_USCORERESULT (94)
/* ns1:ST_LYRIC_DELETE_RESULT */
class SOAP_CMAC ns1__ST_USCORELYRIC_USCOREDELETE_USCORERESULT
{
public:
	int infoID;	/* required element of type xsd:int */
	int result;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 94; } /* = unique type id SOAP_TYPE_ns1__ST_USCORELYRIC_USCOREDELETE_USCORERESULT */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ST_USCORELYRIC_USCOREDELETE_USCORERESULT() { ns1__ST_USCORELYRIC_USCOREDELETE_USCORERESULT::soap_default(NULL); }
	virtual ~ns1__ST_USCORELYRIC_USCOREDELETE_USCORERESULT() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetMurekaInfo
#define SOAP_TYPE__ns1__GetMurekaInfo (95)
/* ns1:GetMurekaInfo */
class SOAP_CMAC _ns1__GetMurekaInfo
{
public:
	std::string *encData;	/* optional element of type xsd:string */
	std::string *md5;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 95; } /* = unique type id SOAP_TYPE__ns1__GetMurekaInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetMurekaInfo() { _ns1__GetMurekaInfo::soap_default(NULL); }
	virtual ~_ns1__GetMurekaInfo() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetMurekaInfoResponse
#define SOAP_TYPE__ns1__GetMurekaInfoResponse (96)
/* ns1:GetMurekaInfoResponse */
class SOAP_CMAC _ns1__GetMurekaInfoResponse
{
public:
	bool GetMurekaInfoResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:boolean */
	ns1__ST_USCOREMUREKAINFO_USCORESERVICE *output;	/* required element of type ns1:ST_MUREKAINFO_SERVICE */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 96; } /* = unique type id SOAP_TYPE__ns1__GetMurekaInfoResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetMurekaInfoResponse() { _ns1__GetMurekaInfoResponse::soap_default(NULL); }
	virtual ~_ns1__GetMurekaInfoResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetSyncLyricBySearch
#define SOAP_TYPE__ns1__GetSyncLyricBySearch (97)
/* ns1:GetSyncLyricBySearch */
class SOAP_CMAC _ns1__GetSyncLyricBySearch
{
public:
	std::string *encData;	/* optional element of type xsd:string */
	std::string *title;	/* optional element of type xsd:string */
	std::string *artist;	/* optional element of type xsd:string */
	int playtime;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 97; } /* = unique type id SOAP_TYPE__ns1__GetSyncLyricBySearch */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetSyncLyricBySearch() { _ns1__GetSyncLyricBySearch::soap_default(NULL); }
	virtual ~_ns1__GetSyncLyricBySearch() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetSyncLyricBySearchResponse
#define SOAP_TYPE__ns1__GetSyncLyricBySearchResponse (98)
/* ns1:GetSyncLyricBySearchResponse */
class SOAP_CMAC _ns1__GetSyncLyricBySearchResponse
{
public:
	ns1__ST_USCOREGET_USCORELYRIC5_USCORERETURN *GetSyncLyricBySearchResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:ST_GET_LYRIC5_RETURN */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 98; } /* = unique type id SOAP_TYPE__ns1__GetSyncLyricBySearchResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetSyncLyricBySearchResponse() { _ns1__GetSyncLyricBySearchResponse::soap_default(NULL); }
	virtual ~_ns1__GetSyncLyricBySearchResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__SetLinkLyric
#define SOAP_TYPE__ns1__SetLinkLyric (99)
/* ns1:SetLinkLyric */
class SOAP_CMAC _ns1__SetLinkLyric
{
public:
	std::string *encData;	/* optional element of type xsd:string */
	std::string *md5;	/* optional element of type xsd:string */
	int lyricID;	/* required element of type xsd:int */
	std::string *version;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 99; } /* = unique type id SOAP_TYPE__ns1__SetLinkLyric */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__SetLinkLyric() { _ns1__SetLinkLyric::soap_default(NULL); }
	virtual ~_ns1__SetLinkLyric() { }
};
#endif

#ifndef SOAP_TYPE__ns1__SetLinkLyricResponse
#define SOAP_TYPE__ns1__SetLinkLyricResponse (100)
/* ns1:SetLinkLyricResponse */
class SOAP_CMAC _ns1__SetLinkLyricResponse
{
public:
	bool SetLinkLyricResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:boolean */
	std::string *resultString;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 100; } /* = unique type id SOAP_TYPE__ns1__SetLinkLyricResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__SetLinkLyricResponse() { _ns1__SetLinkLyricResponse::soap_default(NULL); }
	virtual ~_ns1__SetLinkLyricResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetResembleLyric2
#define SOAP_TYPE__ns1__GetResembleLyric2 (101)
/* ns1:GetResembleLyric2 */
class SOAP_CMAC _ns1__GetResembleLyric2
{
public:
	ns1__ST_USCOREGET_USCORERESEMBLELYRIC2_USCOREQUERY *stQuery;	/* required element of type ns1:ST_GET_RESEMBLELYRIC2_QUERY */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 101; } /* = unique type id SOAP_TYPE__ns1__GetResembleLyric2 */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetResembleLyric2() { _ns1__GetResembleLyric2::soap_default(NULL); }
	virtual ~_ns1__GetResembleLyric2() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetResembleLyric2Response
#define SOAP_TYPE__ns1__GetResembleLyric2Response (102)
/* ns1:GetResembleLyric2Response */
class SOAP_CMAC _ns1__GetResembleLyric2Response
{
public:
	ns1__ArrayOfST_USCOREGET_USCORERESEMBLELYRIC2_USCORERETURN *GetResembleLyric2Result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfST_GET_RESEMBLELYRIC2_RETURN */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 102; } /* = unique type id SOAP_TYPE__ns1__GetResembleLyric2Response */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetResembleLyric2Response() { _ns1__GetResembleLyric2Response::soap_default(NULL); }
	virtual ~_ns1__GetResembleLyric2Response() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetResembleLyric3
#define SOAP_TYPE__ns1__GetResembleLyric3 (103)
/* ns1:GetResembleLyric3 */
class SOAP_CMAC _ns1__GetResembleLyric3
{
public:
	std::string *encData;	/* optional element of type xsd:string */
	ns1__ST_USCOREGET_USCORERESEMBLELYRIC2_USCOREQUERY *stQuery;	/* required element of type ns1:ST_GET_RESEMBLELYRIC2_QUERY */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 103; } /* = unique type id SOAP_TYPE__ns1__GetResembleLyric3 */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetResembleLyric3() { _ns1__GetResembleLyric3::soap_default(NULL); }
	virtual ~_ns1__GetResembleLyric3() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetResembleLyric3Response
#define SOAP_TYPE__ns1__GetResembleLyric3Response (104)
/* ns1:GetResembleLyric3Response */
class SOAP_CMAC _ns1__GetResembleLyric3Response
{
public:
	ns1__ArrayOfST_USCOREGET_USCORERESEMBLELYRIC2_USCORERETURN *GetResembleLyric3Result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfST_GET_RESEMBLELYRIC2_RETURN */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 104; } /* = unique type id SOAP_TYPE__ns1__GetResembleLyric3Response */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetResembleLyric3Response() { _ns1__GetResembleLyric3Response::soap_default(NULL); }
	virtual ~_ns1__GetResembleLyric3Response() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetResembleLyric2Count
#define SOAP_TYPE__ns1__GetResembleLyric2Count (105)
/* ns1:GetResembleLyric2Count */
class SOAP_CMAC _ns1__GetResembleLyric2Count
{
public:
	ns1__ST_USCOREGET_USCORERESEMBLELYRIC2_USCORECOUNT_USCOREQUERY *stQuery;	/* required element of type ns1:ST_GET_RESEMBLELYRIC2_COUNT_QUERY */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 105; } /* = unique type id SOAP_TYPE__ns1__GetResembleLyric2Count */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetResembleLyric2Count() { _ns1__GetResembleLyric2Count::soap_default(NULL); }
	virtual ~_ns1__GetResembleLyric2Count() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetResembleLyric2CountResponse
#define SOAP_TYPE__ns1__GetResembleLyric2CountResponse (106)
/* ns1:GetResembleLyric2CountResponse */
class SOAP_CMAC _ns1__GetResembleLyric2CountResponse
{
public:
	ns1__ST_USCOREGET_USCORERESEMBLELYRIC2_USCORECOUNT_USCORERETURN *GetResembleLyric2CountResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:ST_GET_RESEMBLELYRIC2_COUNT_RETURN */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 106; } /* = unique type id SOAP_TYPE__ns1__GetResembleLyric2CountResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetResembleLyric2CountResponse() { _ns1__GetResembleLyric2CountResponse::soap_default(NULL); }
	virtual ~_ns1__GetResembleLyric2CountResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetResembleLyric2CountTest
#define SOAP_TYPE__ns1__GetResembleLyric2CountTest (107)
/* ns1:GetResembleLyric2CountTest */
class SOAP_CMAC _ns1__GetResembleLyric2CountTest
{
public:
	std::string *testTitle;	/* optional element of type xsd:string */
	std::string *testArtistName;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 107; } /* = unique type id SOAP_TYPE__ns1__GetResembleLyric2CountTest */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetResembleLyric2CountTest() { _ns1__GetResembleLyric2CountTest::soap_default(NULL); }
	virtual ~_ns1__GetResembleLyric2CountTest() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetResembleLyric2CountTestResponse
#define SOAP_TYPE__ns1__GetResembleLyric2CountTestResponse (108)
/* ns1:GetResembleLyric2CountTestResponse */
class SOAP_CMAC _ns1__GetResembleLyric2CountTestResponse
{
public:
	ns1__ST_USCOREGET_USCORERESEMBLELYRIC2_USCORECOUNT_USCORERETURN *GetResembleLyric2CountTestResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:ST_GET_RESEMBLELYRIC2_COUNT_RETURN */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 108; } /* = unique type id SOAP_TYPE__ns1__GetResembleLyric2CountTestResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetResembleLyric2CountTestResponse() { _ns1__GetResembleLyric2CountTestResponse::soap_default(NULL); }
	virtual ~_ns1__GetResembleLyric2CountTestResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__UploadLyric
#define SOAP_TYPE__ns1__UploadLyric (109)
/* ns1:UploadLyric */
class SOAP_CMAC _ns1__UploadLyric
{
public:
	ns1__ST_USCOREUPLOAD_USCORELYRIC_USCOREQUERY *stQuery;	/* required element of type ns1:ST_UPLOAD_LYRIC_QUERY */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 109; } /* = unique type id SOAP_TYPE__ns1__UploadLyric */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__UploadLyric() { _ns1__UploadLyric::soap_default(NULL); }
	virtual ~_ns1__UploadLyric() { }
};
#endif

#ifndef SOAP_TYPE__ns1__UploadLyricResponse
#define SOAP_TYPE__ns1__UploadLyricResponse (110)
/* ns1:UploadLyricResponse */
class SOAP_CMAC _ns1__UploadLyricResponse
{
public:
	std::string *UploadLyricResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 110; } /* = unique type id SOAP_TYPE__ns1__UploadLyricResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__UploadLyricResponse() { _ns1__UploadLyricResponse::soap_default(NULL); }
	virtual ~_ns1__UploadLyricResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__ReportFaultLyricWithComment
#define SOAP_TYPE__ns1__ReportFaultLyricWithComment (111)
/* ns1:ReportFaultLyricWithComment */
class SOAP_CMAC _ns1__ReportFaultLyricWithComment
{
public:
	ns1__ST_USCOREREPORT_USCOREFAULT_USCORELYRIC_USCOREWITH_USCORECOMMENT_USCOREQUERY *stReportFaultWithComment;	/* required element of type ns1:ST_REPORT_FAULT_LYRIC_WITH_COMMENT_QUERY */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 111; } /* = unique type id SOAP_TYPE__ns1__ReportFaultLyricWithComment */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__ReportFaultLyricWithComment() { _ns1__ReportFaultLyricWithComment::soap_default(NULL); }
	virtual ~_ns1__ReportFaultLyricWithComment() { }
};
#endif

#ifndef SOAP_TYPE__ns1__ReportFaultLyricWithCommentResponse
#define SOAP_TYPE__ns1__ReportFaultLyricWithCommentResponse (112)
/* ns1:ReportFaultLyricWithCommentResponse */
class SOAP_CMAC _ns1__ReportFaultLyricWithCommentResponse
{
public:
	std::string *ReportFaultLyricWithCommentResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 112; } /* = unique type id SOAP_TYPE__ns1__ReportFaultLyricWithCommentResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__ReportFaultLyricWithCommentResponse() { _ns1__ReportFaultLyricWithCommentResponse::soap_default(NULL); }
	virtual ~_ns1__ReportFaultLyricWithCommentResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__ReportFaultLyric2
#define SOAP_TYPE__ns1__ReportFaultLyric2 (113)
/* ns1:ReportFaultLyric2 */
class SOAP_CMAC _ns1__ReportFaultLyric2
{
public:
	ns1__ST_USCOREREPORT_USCOREFAULT_USCORELYRIC2_USCOREQUERY *stQuery;	/* required element of type ns1:ST_REPORT_FAULT_LYRIC2_QUERY */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 113; } /* = unique type id SOAP_TYPE__ns1__ReportFaultLyric2 */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__ReportFaultLyric2() { _ns1__ReportFaultLyric2::soap_default(NULL); }
	virtual ~_ns1__ReportFaultLyric2() { }
};
#endif

#ifndef SOAP_TYPE__ns1__ReportFaultLyric2Response
#define SOAP_TYPE__ns1__ReportFaultLyric2Response (114)
/* ns1:ReportFaultLyric2Response */
class SOAP_CMAC _ns1__ReportFaultLyric2Response
{
public:
	std::string *ReportFaultLyric2Result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 114; } /* = unique type id SOAP_TYPE__ns1__ReportFaultLyric2Response */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__ReportFaultLyric2Response() { _ns1__ReportFaultLyric2Response::soap_default(NULL); }
	virtual ~_ns1__ReportFaultLyric2Response() { }
};
#endif

#ifndef SOAP_TYPE__ns1__ReportRecommendationLyric
#define SOAP_TYPE__ns1__ReportRecommendationLyric (115)
/* ns1:ReportRecommendationLyric */
class SOAP_CMAC _ns1__ReportRecommendationLyric
{
public:
	ns1__ST_USCOREREPORT_USCORERECOMMENDATION_USCORELYRIC_USCOREQUERY *stQuery;	/* required element of type ns1:ST_REPORT_RECOMMENDATION_LYRIC_QUERY */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 115; } /* = unique type id SOAP_TYPE__ns1__ReportRecommendationLyric */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__ReportRecommendationLyric() { _ns1__ReportRecommendationLyric::soap_default(NULL); }
	virtual ~_ns1__ReportRecommendationLyric() { }
};
#endif

#ifndef SOAP_TYPE__ns1__ReportRecommendationLyricResponse
#define SOAP_TYPE__ns1__ReportRecommendationLyricResponse (116)
/* ns1:ReportRecommendationLyricResponse */
class SOAP_CMAC _ns1__ReportRecommendationLyricResponse
{
public:
	std::string *ReportRecommendationLyricResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 116; } /* = unique type id SOAP_TYPE__ns1__ReportRecommendationLyricResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__ReportRecommendationLyricResponse() { _ns1__ReportRecommendationLyricResponse::soap_default(NULL); }
	virtual ~_ns1__ReportRecommendationLyricResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__IsReportedRecommendationLyric
#define SOAP_TYPE__ns1__IsReportedRecommendationLyric (117)
/* ns1:IsReportedRecommendationLyric */
class SOAP_CMAC _ns1__IsReportedRecommendationLyric
{
public:
	ns1__ST_USCOREIS_USCOREREPORTED_USCORERECOMMENDATION_USCORELYRIC_USCOREQUERY *stQuery;	/* required element of type ns1:ST_IS_REPORTED_RECOMMENDATION_LYRIC_QUERY */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 117; } /* = unique type id SOAP_TYPE__ns1__IsReportedRecommendationLyric */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__IsReportedRecommendationLyric() { _ns1__IsReportedRecommendationLyric::soap_default(NULL); }
	virtual ~_ns1__IsReportedRecommendationLyric() { }
};
#endif

#ifndef SOAP_TYPE__ns1__IsReportedRecommendationLyricResponse
#define SOAP_TYPE__ns1__IsReportedRecommendationLyricResponse (118)
/* ns1:IsReportedRecommendationLyricResponse */
class SOAP_CMAC _ns1__IsReportedRecommendationLyricResponse
{
public:
	std::string *IsReportedRecommendationLyricResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 118; } /* = unique type id SOAP_TYPE__ns1__IsReportedRecommendationLyricResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__IsReportedRecommendationLyricResponse() { _ns1__IsReportedRecommendationLyricResponse::soap_default(NULL); }
	virtual ~_ns1__IsReportedRecommendationLyricResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__IsReportedFaultLyric
#define SOAP_TYPE__ns1__IsReportedFaultLyric (119)
/* ns1:IsReportedFaultLyric */
class SOAP_CMAC _ns1__IsReportedFaultLyric
{
public:
	ns1__ST_USCOREIS_USCOREREPORTED_USCOREFAULT_USCORELYRIC_USCOREQUERY *stQuery;	/* required element of type ns1:ST_IS_REPORTED_FAULT_LYRIC_QUERY */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 119; } /* = unique type id SOAP_TYPE__ns1__IsReportedFaultLyric */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__IsReportedFaultLyric() { _ns1__IsReportedFaultLyric::soap_default(NULL); }
	virtual ~_ns1__IsReportedFaultLyric() { }
};
#endif

#ifndef SOAP_TYPE__ns1__IsReportedFaultLyricResponse
#define SOAP_TYPE__ns1__IsReportedFaultLyricResponse (120)
/* ns1:IsReportedFaultLyricResponse */
class SOAP_CMAC _ns1__IsReportedFaultLyricResponse
{
public:
	std::string *IsReportedFaultLyricResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 120; } /* = unique type id SOAP_TYPE__ns1__IsReportedFaultLyricResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__IsReportedFaultLyricResponse() { _ns1__IsReportedFaultLyricResponse::soap_default(NULL); }
	virtual ~_ns1__IsReportedFaultLyricResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetLyric3
#define SOAP_TYPE__ns1__GetLyric3 (121)
/* ns1:GetLyric3 */
class SOAP_CMAC _ns1__GetLyric3
{
public:
	ns1__ST_USCOREGET_USCORELYRIC3_USCOREQUERY *stQuery;	/* required element of type ns1:ST_GET_LYRIC3_QUERY */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 121; } /* = unique type id SOAP_TYPE__ns1__GetLyric3 */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetLyric3() { _ns1__GetLyric3::soap_default(NULL); }
	virtual ~_ns1__GetLyric3() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetLyric3Response
#define SOAP_TYPE__ns1__GetLyric3Response (122)
/* ns1:GetLyric3Response */
class SOAP_CMAC _ns1__GetLyric3Response
{
public:
	ns1__ST_USCOREGET_USCORELYRIC3_USCORERETURN *GetLyric3Result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:ST_GET_LYRIC3_RETURN */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 122; } /* = unique type id SOAP_TYPE__ns1__GetLyric3Response */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetLyric3Response() { _ns1__GetLyric3Response::soap_default(NULL); }
	virtual ~_ns1__GetLyric3Response() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetLyric4
#define SOAP_TYPE__ns1__GetLyric4 (123)
/* ns1:GetLyric4 */
class SOAP_CMAC _ns1__GetLyric4
{
public:
	ns1__ST_USCOREGET_USCORELYRIC4_USCOREQUERY *stQuery;	/* required element of type ns1:ST_GET_LYRIC4_QUERY */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 123; } /* = unique type id SOAP_TYPE__ns1__GetLyric4 */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetLyric4() { _ns1__GetLyric4::soap_default(NULL); }
	virtual ~_ns1__GetLyric4() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetLyric4Response
#define SOAP_TYPE__ns1__GetLyric4Response (124)
/* ns1:GetLyric4Response */
class SOAP_CMAC _ns1__GetLyric4Response
{
public:
	ns1__ST_USCOREGET_USCORELYRIC4_USCORERETURN *GetLyric4Result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:ST_GET_LYRIC4_RETURN */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 124; } /* = unique type id SOAP_TYPE__ns1__GetLyric4Response */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetLyric4Response() { _ns1__GetLyric4Response::soap_default(NULL); }
	virtual ~_ns1__GetLyric4Response() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetLyric5
#define SOAP_TYPE__ns1__GetLyric5 (125)
/* ns1:GetLyric5 */
class SOAP_CMAC _ns1__GetLyric5
{
public:
	ns1__ST_USCOREGET_USCORELYRIC5_USCOREQUERY *stQuery;	/* required element of type ns1:ST_GET_LYRIC5_QUERY */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 125; } /* = unique type id SOAP_TYPE__ns1__GetLyric5 */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetLyric5() { _ns1__GetLyric5::soap_default(NULL); }
	virtual ~_ns1__GetLyric5() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetLyric5Response
#define SOAP_TYPE__ns1__GetLyric5Response (126)
/* ns1:GetLyric5Response */
class SOAP_CMAC _ns1__GetLyric5Response
{
public:
	ns1__ST_USCOREGET_USCORELYRIC5_USCORERETURN *GetLyric5Result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:ST_GET_LYRIC5_RETURN */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 126; } /* = unique type id SOAP_TYPE__ns1__GetLyric5Response */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetLyric5Response() { _ns1__GetLyric5Response::soap_default(NULL); }
	virtual ~_ns1__GetLyric5Response() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetLyric6
#define SOAP_TYPE__ns1__GetLyric6 (127)
/* ns1:GetLyric6 */
class SOAP_CMAC _ns1__GetLyric6
{
public:
	ns1__ST_USCOREGET_USCORELYRIC5_USCOREQUERY *stQuery;	/* required element of type ns1:ST_GET_LYRIC5_QUERY */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 127; } /* = unique type id SOAP_TYPE__ns1__GetLyric6 */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetLyric6() { _ns1__GetLyric6::soap_default(NULL); }
	virtual ~_ns1__GetLyric6() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetLyric6Response
#define SOAP_TYPE__ns1__GetLyric6Response (128)
/* ns1:GetLyric6Response */
class SOAP_CMAC _ns1__GetLyric6Response
{
public:
	ns1__ST_USCOREGET_USCORELYRIC5_USCORERETURN *GetLyric6Result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:ST_GET_LYRIC5_RETURN */
	bool requestAudioInfo;	/* required element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 128; } /* = unique type id SOAP_TYPE__ns1__GetLyric6Response */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetLyric6Response() { _ns1__GetLyric6Response::soap_default(NULL); }
	virtual ~_ns1__GetLyric6Response() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetLyric7
#define SOAP_TYPE__ns1__GetLyric7 (129)
/* ns1:GetLyric7 */
class SOAP_CMAC _ns1__GetLyric7
{
public:
	std::string *encData;	/* optional element of type xsd:string */
	ns1__ST_USCOREGET_USCORELYRIC5_USCOREQUERY *stQuery;	/* required element of type ns1:ST_GET_LYRIC5_QUERY */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 129; } /* = unique type id SOAP_TYPE__ns1__GetLyric7 */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetLyric7() { _ns1__GetLyric7::soap_default(NULL); }
	virtual ~_ns1__GetLyric7() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetLyric7Response
#define SOAP_TYPE__ns1__GetLyric7Response (130)
/* ns1:GetLyric7Response */
class SOAP_CMAC _ns1__GetLyric7Response
{
public:
	ns1__ST_USCOREGET_USCORELYRIC5_USCORERETURN *GetLyric7Result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:ST_GET_LYRIC5_RETURN */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 130; } /* = unique type id SOAP_TYPE__ns1__GetLyric7Response */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetLyric7Response() { _ns1__GetLyric7Response::soap_default(NULL); }
	virtual ~_ns1__GetLyric7Response() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetLyric8
#define SOAP_TYPE__ns1__GetLyric8 (131)
/* ns1:GetLyric8 */
class SOAP_CMAC _ns1__GetLyric8
{
public:
	std::string *encData;	/* optional element of type xsd:string */
	ns1__ST_USCOREGET_USCORELYRIC5_USCOREQUERY *stQuery;	/* required element of type ns1:ST_GET_LYRIC5_QUERY */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 131; } /* = unique type id SOAP_TYPE__ns1__GetLyric8 */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetLyric8() { _ns1__GetLyric8::soap_default(NULL); }
	virtual ~_ns1__GetLyric8() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetLyric8Response
#define SOAP_TYPE__ns1__GetLyric8Response (132)
/* ns1:GetLyric8Response */
class SOAP_CMAC _ns1__GetLyric8Response
{
public:
	ns1__ST_USCOREGET_USCORELYRIC5_USCORERETURN *GetLyric8Result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:ST_GET_LYRIC5_RETURN */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 132; } /* = unique type id SOAP_TYPE__ns1__GetLyric8Response */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetLyric8Response() { _ns1__GetLyric8Response::soap_default(NULL); }
	virtual ~_ns1__GetLyric8Response() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetSongID
#define SOAP_TYPE__ns1__GetSongID (133)
/* ns1:GetSongID */
class SOAP_CMAC _ns1__GetSongID
{
public:
	std::string *encData;	/* optional element of type xsd:string */
	ns1__ST_USCOREGET_USCORELYRIC5_USCOREQUERY *stQuery;	/* required element of type ns1:ST_GET_LYRIC5_QUERY */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 133; } /* = unique type id SOAP_TYPE__ns1__GetSongID */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetSongID() { _ns1__GetSongID::soap_default(NULL); }
	virtual ~_ns1__GetSongID() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetSongIDResponse
#define SOAP_TYPE__ns1__GetSongIDResponse (134)
/* ns1:GetSongIDResponse */
class SOAP_CMAC _ns1__GetSongIDResponse
{
public:
	std::string *GetSongIDResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 134; } /* = unique type id SOAP_TYPE__ns1__GetSongIDResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetSongIDResponse() { _ns1__GetSongIDResponse::soap_default(NULL); }
	virtual ~_ns1__GetSongIDResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AdminGetLyricList
#define SOAP_TYPE__ns1__AdminGetLyricList (135)
/* ns1:AdminGetLyricList */
class SOAP_CMAC _ns1__AdminGetLyricList
{
public:
	ns1__ST_USCOREGET_USCORELYRIC_USCORELIST_USCOREQUERY *stQuery;	/* required element of type ns1:ST_GET_LYRIC_LIST_QUERY */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 135; } /* = unique type id SOAP_TYPE__ns1__AdminGetLyricList */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AdminGetLyricList() { _ns1__AdminGetLyricList::soap_default(NULL); }
	virtual ~_ns1__AdminGetLyricList() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AdminGetLyricListResponse
#define SOAP_TYPE__ns1__AdminGetLyricListResponse (136)
/* ns1:AdminGetLyricListResponse */
class SOAP_CMAC _ns1__AdminGetLyricListResponse
{
public:
	ns1__ArrayOfST_USCOREGET_USCORELYRIC_USCORELIST_USCORERETURN *AdminGetLyricListResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfST_GET_LYRIC_LIST_RETURN */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 136; } /* = unique type id SOAP_TYPE__ns1__AdminGetLyricListResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AdminGetLyricListResponse() { _ns1__AdminGetLyricListResponse::soap_default(NULL); }
	virtual ~_ns1__AdminGetLyricListResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AdminGetLyricListByID
#define SOAP_TYPE__ns1__AdminGetLyricListByID (137)
/* ns1:AdminGetLyricListByID */
class SOAP_CMAC _ns1__AdminGetLyricListByID
{
public:
	int infoIDLo;	/* required element of type xsd:int */
	int infoIDHi;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 137; } /* = unique type id SOAP_TYPE__ns1__AdminGetLyricListByID */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AdminGetLyricListByID() { _ns1__AdminGetLyricListByID::soap_default(NULL); }
	virtual ~_ns1__AdminGetLyricListByID() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AdminGetLyricListByIDResponse
#define SOAP_TYPE__ns1__AdminGetLyricListByIDResponse (138)
/* ns1:AdminGetLyricListByIDResponse */
class SOAP_CMAC _ns1__AdminGetLyricListByIDResponse
{
public:
	ns1__ArrayOfST_USCOREGET_USCORELYRIC_USCORELIST_USCORERETURN *AdminGetLyricListByIDResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfST_GET_LYRIC_LIST_RETURN */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 138; } /* = unique type id SOAP_TYPE__ns1__AdminGetLyricListByIDResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AdminGetLyricListByIDResponse() { _ns1__AdminGetLyricListByIDResponse::soap_default(NULL); }
	virtual ~_ns1__AdminGetLyricListByIDResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AdminGetReportFaultList
#define SOAP_TYPE__ns1__AdminGetReportFaultList (139)
/* ns1:AdminGetReportFaultList */
class SOAP_CMAC _ns1__AdminGetReportFaultList
{
public:
	int nIgnore;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 139; } /* = unique type id SOAP_TYPE__ns1__AdminGetReportFaultList */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AdminGetReportFaultList() { _ns1__AdminGetReportFaultList::soap_default(NULL); }
	virtual ~_ns1__AdminGetReportFaultList() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AdminGetReportFaultListResponse
#define SOAP_TYPE__ns1__AdminGetReportFaultListResponse (140)
/* ns1:AdminGetReportFaultListResponse */
class SOAP_CMAC _ns1__AdminGetReportFaultListResponse
{
public:
	ns1__ArrayOfST_USCOREGET_USCOREREPORTFAULT_USCORELIST_USCORERETURN *AdminGetReportFaultListResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfST_GET_REPORTFAULT_LIST_RETURN */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 140; } /* = unique type id SOAP_TYPE__ns1__AdminGetReportFaultListResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AdminGetReportFaultListResponse() { _ns1__AdminGetReportFaultListResponse::soap_default(NULL); }
	virtual ~_ns1__AdminGetReportFaultListResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AdminGetModifyList
#define SOAP_TYPE__ns1__AdminGetModifyList (141)
/* ns1:AdminGetModifyList */
class SOAP_CMAC _ns1__AdminGetModifyList
{
public:
	ns1__ST_USCOREGET_USCOREMODIFY_USCORELIST_USCOREQUERY *stQuery;	/* required element of type ns1:ST_GET_MODIFY_LIST_QUERY */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 141; } /* = unique type id SOAP_TYPE__ns1__AdminGetModifyList */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AdminGetModifyList() { _ns1__AdminGetModifyList::soap_default(NULL); }
	virtual ~_ns1__AdminGetModifyList() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AdminGetModifyListResponse
#define SOAP_TYPE__ns1__AdminGetModifyListResponse (142)
/* ns1:AdminGetModifyListResponse */
class SOAP_CMAC _ns1__AdminGetModifyListResponse
{
public:
	ns1__ArrayOfST_USCOREGET_USCOREMODIFY_USCORELIST_USCORERETURN *AdminGetModifyListResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfST_GET_MODIFY_LIST_RETURN */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 142; } /* = unique type id SOAP_TYPE__ns1__AdminGetModifyListResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AdminGetModifyListResponse() { _ns1__AdminGetModifyListResponse::soap_default(NULL); }
	virtual ~_ns1__AdminGetModifyListResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AdminGetRegisterList
#define SOAP_TYPE__ns1__AdminGetRegisterList (143)
/* ns1:AdminGetRegisterList */
class SOAP_CMAC _ns1__AdminGetRegisterList
{
public:
	ns1__ST_USCOREGET_USCOREREGISTER_USCORELIST_USCOREQUERY *stQuery;	/* required element of type ns1:ST_GET_REGISTER_LIST_QUERY */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 143; } /* = unique type id SOAP_TYPE__ns1__AdminGetRegisterList */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AdminGetRegisterList() { _ns1__AdminGetRegisterList::soap_default(NULL); }
	virtual ~_ns1__AdminGetRegisterList() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AdminGetRegisterListResponse
#define SOAP_TYPE__ns1__AdminGetRegisterListResponse (144)
/* ns1:AdminGetRegisterListResponse */
class SOAP_CMAC _ns1__AdminGetRegisterListResponse
{
public:
	ns1__ArrayOfST_USCOREGET_USCOREREGISTER_USCORELIST_USCORERETURN *AdminGetRegisterListResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfST_GET_REGISTER_LIST_RETURN */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 144; } /* = unique type id SOAP_TYPE__ns1__AdminGetRegisterListResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AdminGetRegisterListResponse() { _ns1__AdminGetRegisterListResponse::soap_default(NULL); }
	virtual ~_ns1__AdminGetRegisterListResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__MemberAddMember
#define SOAP_TYPE__ns1__MemberAddMember (145)
/* ns1:MemberAddMember */
class SOAP_CMAC _ns1__MemberAddMember
{
public:
	ns1__ST_USCOREMEMBER_USCOREADDMEMBER_USCOREQUERY *stQuery;	/* required element of type ns1:ST_MEMBER_ADDMEMBER_QUERY */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 145; } /* = unique type id SOAP_TYPE__ns1__MemberAddMember */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__MemberAddMember() { _ns1__MemberAddMember::soap_default(NULL); }
	virtual ~_ns1__MemberAddMember() { }
};
#endif

#ifndef SOAP_TYPE__ns1__MemberAddMemberResponse
#define SOAP_TYPE__ns1__MemberAddMemberResponse (146)
/* ns1:MemberAddMemberResponse */
class SOAP_CMAC _ns1__MemberAddMemberResponse
{
public:
	std::string *MemberAddMemberResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 146; } /* = unique type id SOAP_TYPE__ns1__MemberAddMemberResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__MemberAddMemberResponse() { _ns1__MemberAddMemberResponse::soap_default(NULL); }
	virtual ~_ns1__MemberAddMemberResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__MemberModifyMember
#define SOAP_TYPE__ns1__MemberModifyMember (147)
/* ns1:MemberModifyMember */
class SOAP_CMAC _ns1__MemberModifyMember
{
public:
	ns1__ST_USCOREMEMBER_USCOREMODIFYMEMBER_USCOREQUERY *stQuery;	/* required element of type ns1:ST_MEMBER_MODIFYMEMBER_QUERY */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 147; } /* = unique type id SOAP_TYPE__ns1__MemberModifyMember */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__MemberModifyMember() { _ns1__MemberModifyMember::soap_default(NULL); }
	virtual ~_ns1__MemberModifyMember() { }
};
#endif

#ifndef SOAP_TYPE__ns1__MemberModifyMemberResponse
#define SOAP_TYPE__ns1__MemberModifyMemberResponse (148)
/* ns1:MemberModifyMemberResponse */
class SOAP_CMAC _ns1__MemberModifyMemberResponse
{
public:
	std::string *MemberModifyMemberResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 148; } /* = unique type id SOAP_TYPE__ns1__MemberModifyMemberResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__MemberModifyMemberResponse() { _ns1__MemberModifyMemberResponse::soap_default(NULL); }
	virtual ~_ns1__MemberModifyMemberResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__MemberRemoveMember
#define SOAP_TYPE__ns1__MemberRemoveMember (149)
/* ns1:MemberRemoveMember */
class SOAP_CMAC _ns1__MemberRemoveMember
{
public:
	ns1__ST_USCOREMEMBER_USCOREREMOVEMEMBER_USCOREQUERY *stQuery;	/* required element of type ns1:ST_MEMBER_REMOVEMEMBER_QUERY */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 149; } /* = unique type id SOAP_TYPE__ns1__MemberRemoveMember */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__MemberRemoveMember() { _ns1__MemberRemoveMember::soap_default(NULL); }
	virtual ~_ns1__MemberRemoveMember() { }
};
#endif

#ifndef SOAP_TYPE__ns1__MemberRemoveMemberResponse
#define SOAP_TYPE__ns1__MemberRemoveMemberResponse (150)
/* ns1:MemberRemoveMemberResponse */
class SOAP_CMAC _ns1__MemberRemoveMemberResponse
{
public:
	std::string *MemberRemoveMemberResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 150; } /* = unique type id SOAP_TYPE__ns1__MemberRemoveMemberResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__MemberRemoveMemberResponse() { _ns1__MemberRemoveMemberResponse::soap_default(NULL); }
	virtual ~_ns1__MemberRemoveMemberResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__MemberLogin
#define SOAP_TYPE__ns1__MemberLogin (151)
/* ns1:MemberLogin */
class SOAP_CMAC _ns1__MemberLogin
{
public:
	ns1__ST_USCOREMEMBER_USCORELOGIN_USCOREQUERY *stQuery;	/* required element of type ns1:ST_MEMBER_LOGIN_QUERY */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 151; } /* = unique type id SOAP_TYPE__ns1__MemberLogin */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__MemberLogin() { _ns1__MemberLogin::soap_default(NULL); }
	virtual ~_ns1__MemberLogin() { }
};
#endif

#ifndef SOAP_TYPE__ns1__MemberLoginResponse
#define SOAP_TYPE__ns1__MemberLoginResponse (152)
/* ns1:MemberLoginResponse */
class SOAP_CMAC _ns1__MemberLoginResponse
{
public:
	std::string *MemberLoginResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 152; } /* = unique type id SOAP_TYPE__ns1__MemberLoginResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__MemberLoginResponse() { _ns1__MemberLoginResponse::soap_default(NULL); }
	virtual ~_ns1__MemberLoginResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__MemberLogout
#define SOAP_TYPE__ns1__MemberLogout (153)
/* ns1:MemberLogout */
class SOAP_CMAC _ns1__MemberLogout
{
public:
	ns1__ST_USCOREMEMBER_USCORELOGOUT_USCOREQUERY *stQuery;	/* required element of type ns1:ST_MEMBER_LOGOUT_QUERY */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 153; } /* = unique type id SOAP_TYPE__ns1__MemberLogout */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__MemberLogout() { _ns1__MemberLogout::soap_default(NULL); }
	virtual ~_ns1__MemberLogout() { }
};
#endif

#ifndef SOAP_TYPE__ns1__MemberLogoutResponse
#define SOAP_TYPE__ns1__MemberLogoutResponse (154)
/* ns1:MemberLogoutResponse */
class SOAP_CMAC _ns1__MemberLogoutResponse
{
public:
	std::string *MemberLogoutResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 154; } /* = unique type id SOAP_TYPE__ns1__MemberLogoutResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__MemberLogoutResponse() { _ns1__MemberLogoutResponse::soap_default(NULL); }
	virtual ~_ns1__MemberLogoutResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__MemberApplyRegistration
#define SOAP_TYPE__ns1__MemberApplyRegistration (155)
/* ns1:MemberApplyRegistration */
class SOAP_CMAC _ns1__MemberApplyRegistration
{
public:
	ns1__ST_USCOREAPPLY_USCOREREGISTRATION_USCOREQUERY *stQuery;	/* required element of type ns1:ST_APPLY_REGISTRATION_QUERY */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 155; } /* = unique type id SOAP_TYPE__ns1__MemberApplyRegistration */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__MemberApplyRegistration() { _ns1__MemberApplyRegistration::soap_default(NULL); }
	virtual ~_ns1__MemberApplyRegistration() { }
};
#endif

#ifndef SOAP_TYPE__ns1__MemberApplyRegistrationResponse
#define SOAP_TYPE__ns1__MemberApplyRegistrationResponse (156)
/* ns1:MemberApplyRegistrationResponse */
class SOAP_CMAC _ns1__MemberApplyRegistrationResponse
{
public:
	std::string *MemberApplyRegistrationResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 156; } /* = unique type id SOAP_TYPE__ns1__MemberApplyRegistrationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__MemberApplyRegistrationResponse() { _ns1__MemberApplyRegistrationResponse::soap_default(NULL); }
	virtual ~_ns1__MemberApplyRegistrationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__MemberModifyMemberLicense
#define SOAP_TYPE__ns1__MemberModifyMemberLicense (157)
/* ns1:MemberModifyMemberLicense */
class SOAP_CMAC _ns1__MemberModifyMemberLicense
{
public:
	ns1__ST_USCOREMODIFY_USCOREMEMBER_USCORELICENSE_USCOREQUERY *stQuery;	/* required element of type ns1:ST_MODIFY_MEMBER_LICENSE_QUERY */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 157; } /* = unique type id SOAP_TYPE__ns1__MemberModifyMemberLicense */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__MemberModifyMemberLicense() { _ns1__MemberModifyMemberLicense::soap_default(NULL); }
	virtual ~_ns1__MemberModifyMemberLicense() { }
};
#endif

#ifndef SOAP_TYPE__ns1__MemberModifyMemberLicenseResponse
#define SOAP_TYPE__ns1__MemberModifyMemberLicenseResponse (158)
/* ns1:MemberModifyMemberLicenseResponse */
class SOAP_CMAC _ns1__MemberModifyMemberLicenseResponse
{
public:
	std::string *MemberModifyMemberLicenseResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 158; } /* = unique type id SOAP_TYPE__ns1__MemberModifyMemberLicenseResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__MemberModifyMemberLicenseResponse() { _ns1__MemberModifyMemberLicenseResponse::soap_default(NULL); }
	virtual ~_ns1__MemberModifyMemberLicenseResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__MemberGetMemberList
#define SOAP_TYPE__ns1__MemberGetMemberList (159)
/* ns1:MemberGetMemberList */
class SOAP_CMAC _ns1__MemberGetMemberList
{
public:
	ns1__ST_USCOREGET_USCOREMEMBER_USCORELIST_USCOREQUERY *stQuery;	/* required element of type ns1:ST_GET_MEMBER_LIST_QUERY */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 159; } /* = unique type id SOAP_TYPE__ns1__MemberGetMemberList */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__MemberGetMemberList() { _ns1__MemberGetMemberList::soap_default(NULL); }
	virtual ~_ns1__MemberGetMemberList() { }
};
#endif

#ifndef SOAP_TYPE__ns1__MemberGetMemberListResponse
#define SOAP_TYPE__ns1__MemberGetMemberListResponse (160)
/* ns1:MemberGetMemberListResponse */
class SOAP_CMAC _ns1__MemberGetMemberListResponse
{
public:
	ns1__ArrayOfST_USCOREGET_USCOREMEMBER_USCORELIST_USCORERETURN *MemberGetMemberListResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfST_GET_MEMBER_LIST_RETURN */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 160; } /* = unique type id SOAP_TYPE__ns1__MemberGetMemberListResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__MemberGetMemberListResponse() { _ns1__MemberGetMemberListResponse::soap_default(NULL); }
	virtual ~_ns1__MemberGetMemberListResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__MemberGetMemberLicenseList
#define SOAP_TYPE__ns1__MemberGetMemberLicenseList (161)
/* ns1:MemberGetMemberLicenseList */
class SOAP_CMAC _ns1__MemberGetMemberLicenseList
{
public:
	ns1__ST_USCOREGET_USCOREMEMBER_USCORELICENSE_USCORELIST_USCOREQUERY *stQuery;	/* required element of type ns1:ST_GET_MEMBER_LICENSE_LIST_QUERY */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 161; } /* = unique type id SOAP_TYPE__ns1__MemberGetMemberLicenseList */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__MemberGetMemberLicenseList() { _ns1__MemberGetMemberLicenseList::soap_default(NULL); }
	virtual ~_ns1__MemberGetMemberLicenseList() { }
};
#endif

#ifndef SOAP_TYPE__ns1__MemberGetMemberLicenseListResponse
#define SOAP_TYPE__ns1__MemberGetMemberLicenseListResponse (162)
/* ns1:MemberGetMemberLicenseListResponse */
class SOAP_CMAC _ns1__MemberGetMemberLicenseListResponse
{
public:
	ns1__ArrayOfST_USCOREGET_USCOREMEMBER_USCORELICENSE_USCORELIST_USCORERETURN *MemberGetMemberLicenseListResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfST_GET_MEMBER_LICENSE_LIST_RETURN */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 162; } /* = unique type id SOAP_TYPE__ns1__MemberGetMemberLicenseListResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__MemberGetMemberLicenseListResponse() { _ns1__MemberGetMemberLicenseListResponse::soap_default(NULL); }
	virtual ~_ns1__MemberGetMemberLicenseListResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AdminDeleteRecord
#define SOAP_TYPE__ns1__AdminDeleteRecord (163)
/* ns1:AdminDeleteRecord */
class SOAP_CMAC _ns1__AdminDeleteRecord
{
public:
	ns1__ST_USCOREDELETE_USCORERECORD_USCOREQUERY *stQuery;	/* required element of type ns1:ST_DELETE_RECORD_QUERY */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 163; } /* = unique type id SOAP_TYPE__ns1__AdminDeleteRecord */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AdminDeleteRecord() { _ns1__AdminDeleteRecord::soap_default(NULL); }
	virtual ~_ns1__AdminDeleteRecord() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AdminDeleteRecordResponse
#define SOAP_TYPE__ns1__AdminDeleteRecordResponse (164)
/* ns1:AdminDeleteRecordResponse */
class SOAP_CMAC _ns1__AdminDeleteRecordResponse
{
public:
	std::string *AdminDeleteRecordResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 164; } /* = unique type id SOAP_TYPE__ns1__AdminDeleteRecordResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AdminDeleteRecordResponse() { _ns1__AdminDeleteRecordResponse::soap_default(NULL); }
	virtual ~_ns1__AdminDeleteRecordResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AdminAdmitModifyLyric
#define SOAP_TYPE__ns1__AdminAdmitModifyLyric (165)
/* ns1:AdminAdmitModifyLyric */
class SOAP_CMAC _ns1__AdminAdmitModifyLyric
{
public:
	ns1__ST_USCOREADMIT_USCOREMODIFY_USCORELYRIC_USCOREQUERY *stQuery;	/* required element of type ns1:ST_ADMIT_MODIFY_LYRIC_QUERY */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 165; } /* = unique type id SOAP_TYPE__ns1__AdminAdmitModifyLyric */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AdminAdmitModifyLyric() { _ns1__AdminAdmitModifyLyric::soap_default(NULL); }
	virtual ~_ns1__AdminAdmitModifyLyric() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AdminAdmitModifyLyricResponse
#define SOAP_TYPE__ns1__AdminAdmitModifyLyricResponse (166)
/* ns1:AdminAdmitModifyLyricResponse */
class SOAP_CMAC _ns1__AdminAdmitModifyLyricResponse
{
public:
	std::string *AdminAdmitModifyLyricResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 166; } /* = unique type id SOAP_TYPE__ns1__AdminAdmitModifyLyricResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AdminAdmitModifyLyricResponse() { _ns1__AdminAdmitModifyLyricResponse::soap_default(NULL); }
	virtual ~_ns1__AdminAdmitModifyLyricResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AdminReportBlackList
#define SOAP_TYPE__ns1__AdminReportBlackList (167)
/* ns1:AdminReportBlackList */
class SOAP_CMAC _ns1__AdminReportBlackList
{
public:
	ns1__ST_USCOREREPORT_USCOREBLACKLIST_USCOREREPORT_USCOREQUERY *stQuery;	/* required element of type ns1:ST_REPORT_BLACKLIST_REPORT_QUERY */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 167; } /* = unique type id SOAP_TYPE__ns1__AdminReportBlackList */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AdminReportBlackList() { _ns1__AdminReportBlackList::soap_default(NULL); }
	virtual ~_ns1__AdminReportBlackList() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AdminReportBlackListResponse
#define SOAP_TYPE__ns1__AdminReportBlackListResponse (168)
/* ns1:AdminReportBlackListResponse */
class SOAP_CMAC _ns1__AdminReportBlackListResponse
{
public:
	std::string *AdminReportBlackListResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 168; } /* = unique type id SOAP_TYPE__ns1__AdminReportBlackListResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AdminReportBlackListResponse() { _ns1__AdminReportBlackListResponse::soap_default(NULL); }
	virtual ~_ns1__AdminReportBlackListResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AdminGetCountInRegister
#define SOAP_TYPE__ns1__AdminGetCountInRegister (169)
/* ns1:AdminGetCountInRegister */
class SOAP_CMAC _ns1__AdminGetCountInRegister
{
public:
	ns1__ST_USCOREGET_USCORECOUNT_USCOREIN_USCOREREGISTER_USCOREQUERY *stQuery;	/* required element of type ns1:ST_GET_COUNT_IN_REGISTER_QUERY */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 169; } /* = unique type id SOAP_TYPE__ns1__AdminGetCountInRegister */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AdminGetCountInRegister() { _ns1__AdminGetCountInRegister::soap_default(NULL); }
	virtual ~_ns1__AdminGetCountInRegister() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AdminGetCountInRegisterResponse
#define SOAP_TYPE__ns1__AdminGetCountInRegisterResponse (170)
/* ns1:AdminGetCountInRegisterResponse */
class SOAP_CMAC _ns1__AdminGetCountInRegisterResponse
{
public:
	ns1__ST_USCOREGET_USCORECOUNT_USCOREIN_USCOREREGISTER_USCORERETURN *AdminGetCountInRegisterResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:ST_GET_COUNT_IN_REGISTER_RETURN */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 170; } /* = unique type id SOAP_TYPE__ns1__AdminGetCountInRegisterResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AdminGetCountInRegisterResponse() { _ns1__AdminGetCountInRegisterResponse::soap_default(NULL); }
	virtual ~_ns1__AdminGetCountInRegisterResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AdminGetCountChecksum
#define SOAP_TYPE__ns1__AdminGetCountChecksum (171)
/* ns1:AdminGetCountChecksum */
class SOAP_CMAC _ns1__AdminGetCountChecksum
{
public:
	int nIgnore;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 171; } /* = unique type id SOAP_TYPE__ns1__AdminGetCountChecksum */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AdminGetCountChecksum() { _ns1__AdminGetCountChecksum::soap_default(NULL); }
	virtual ~_ns1__AdminGetCountChecksum() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AdminGetCountChecksumResponse
#define SOAP_TYPE__ns1__AdminGetCountChecksumResponse (172)
/* ns1:AdminGetCountChecksumResponse */
class SOAP_CMAC _ns1__AdminGetCountChecksumResponse
{
public:
	ns1__ST_USCOREGET_USCORECOUNT_USCORECHECKSUM_USCORERETURN *AdminGetCountChecksumResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:ST_GET_COUNT_CHECKSUM_RETURN */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 172; } /* = unique type id SOAP_TYPE__ns1__AdminGetCountChecksumResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AdminGetCountChecksumResponse() { _ns1__AdminGetCountChecksumResponse::soap_default(NULL); }
	virtual ~_ns1__AdminGetCountChecksumResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AdminGetCountLyric
#define SOAP_TYPE__ns1__AdminGetCountLyric (173)
/* ns1:AdminGetCountLyric */
class SOAP_CMAC _ns1__AdminGetCountLyric
{
public:
	int nIgnore;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 173; } /* = unique type id SOAP_TYPE__ns1__AdminGetCountLyric */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AdminGetCountLyric() { _ns1__AdminGetCountLyric::soap_default(NULL); }
	virtual ~_ns1__AdminGetCountLyric() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AdminGetCountLyricResponse
#define SOAP_TYPE__ns1__AdminGetCountLyricResponse (174)
/* ns1:AdminGetCountLyricResponse */
class SOAP_CMAC _ns1__AdminGetCountLyricResponse
{
public:
	ns1__ST_USCOREGET_USCORECOUNT_USCORELYRIC_USCORERETURN *AdminGetCountLyricResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:ST_GET_COUNT_LYRIC_RETURN */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 174; } /* = unique type id SOAP_TYPE__ns1__AdminGetCountLyricResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AdminGetCountLyricResponse() { _ns1__AdminGetCountLyricResponse::soap_default(NULL); }
	virtual ~_ns1__AdminGetCountLyricResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AdminGetCountModify
#define SOAP_TYPE__ns1__AdminGetCountModify (175)
/* ns1:AdminGetCountModify */
class SOAP_CMAC _ns1__AdminGetCountModify
{
public:
	ns1__ST_USCOREGET_USCORECOUNT_USCOREMODIFY_USCOREQUERY *stQuery;	/* required element of type ns1:ST_GET_COUNT_MODIFY_QUERY */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 175; } /* = unique type id SOAP_TYPE__ns1__AdminGetCountModify */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AdminGetCountModify() { _ns1__AdminGetCountModify::soap_default(NULL); }
	virtual ~_ns1__AdminGetCountModify() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AdminGetCountModifyResponse
#define SOAP_TYPE__ns1__AdminGetCountModifyResponse (176)
/* ns1:AdminGetCountModifyResponse */
class SOAP_CMAC _ns1__AdminGetCountModifyResponse
{
public:
	ns1__ST_USCOREGET_USCORECOUNT_USCOREMODIFY_USCORERETURN *AdminGetCountModifyResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:ST_GET_COUNT_MODIFY_RETURN */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 176; } /* = unique type id SOAP_TYPE__ns1__AdminGetCountModifyResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AdminGetCountModifyResponse() { _ns1__AdminGetCountModifyResponse::soap_default(NULL); }
	virtual ~_ns1__AdminGetCountModifyResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AdminGetCountReport
#define SOAP_TYPE__ns1__AdminGetCountReport (177)
/* ns1:AdminGetCountReport */
class SOAP_CMAC _ns1__AdminGetCountReport
{
public:
	ns1__ST_USCOREGET_USCORECOUNT_USCOREREPORT_USCOREQUERY *stQuery;	/* required element of type ns1:ST_GET_COUNT_REPORT_QUERY */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 177; } /* = unique type id SOAP_TYPE__ns1__AdminGetCountReport */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AdminGetCountReport() { _ns1__AdminGetCountReport::soap_default(NULL); }
	virtual ~_ns1__AdminGetCountReport() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AdminGetCountReportResponse
#define SOAP_TYPE__ns1__AdminGetCountReportResponse (178)
/* ns1:AdminGetCountReportResponse */
class SOAP_CMAC _ns1__AdminGetCountReportResponse
{
public:
	ns1__ST_USCOREGET_USCORECOUNT_USCOREREPORT_USCORERETURN *AdminGetCountReportResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:ST_GET_COUNT_REPORT_RETURN */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 178; } /* = unique type id SOAP_TYPE__ns1__AdminGetCountReportResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AdminGetCountReportResponse() { _ns1__AdminGetCountReportResponse::soap_default(NULL); }
	virtual ~_ns1__AdminGetCountReportResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AdminGetAlbaStatistic
#define SOAP_TYPE__ns1__AdminGetAlbaStatistic (179)
/* ns1:AdminGetAlbaStatistic */
class SOAP_CMAC _ns1__AdminGetAlbaStatistic
{
public:
	ns1__ST_USCOREGET_USCOREALBA_USCORESTATISTIC_USCOREQUERY *stQuery;	/* required element of type ns1:ST_GET_ALBA_STATISTIC_QUERY */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 179; } /* = unique type id SOAP_TYPE__ns1__AdminGetAlbaStatistic */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AdminGetAlbaStatistic() { _ns1__AdminGetAlbaStatistic::soap_default(NULL); }
	virtual ~_ns1__AdminGetAlbaStatistic() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AdminGetAlbaStatisticResponse
#define SOAP_TYPE__ns1__AdminGetAlbaStatisticResponse (180)
/* ns1:AdminGetAlbaStatisticResponse */
class SOAP_CMAC _ns1__AdminGetAlbaStatisticResponse
{
public:
	ns1__ArrayOfST_USCOREGET_USCOREALBA_USCORESTATISTIC_USCORERETURN *AdminGetAlbaStatisticResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfST_GET_ALBA_STATISTIC_RETURN */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 180; } /* = unique type id SOAP_TYPE__ns1__AdminGetAlbaStatisticResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AdminGetAlbaStatisticResponse() { _ns1__AdminGetAlbaStatisticResponse::soap_default(NULL); }
	virtual ~_ns1__AdminGetAlbaStatisticResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__CastUploadExMetaData
#define SOAP_TYPE__ns1__CastUploadExMetaData (181)
/* ns1:CastUploadExMetaData */
class SOAP_CMAC _ns1__CastUploadExMetaData
{
public:
	ns1__ST_USCORECAST_USCOREUPLOAD_USCOREEX_USCOREMETADATA_USCOREQUERY *stQuery;	/* required element of type ns1:ST_CAST_UPLOAD_EX_METADATA_QUERY */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 181; } /* = unique type id SOAP_TYPE__ns1__CastUploadExMetaData */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__CastUploadExMetaData() { _ns1__CastUploadExMetaData::soap_default(NULL); }
	virtual ~_ns1__CastUploadExMetaData() { }
};
#endif

#ifndef SOAP_TYPE__ns1__CastUploadExMetaDataResponse
#define SOAP_TYPE__ns1__CastUploadExMetaDataResponse (182)
/* ns1:CastUploadExMetaDataResponse */
class SOAP_CMAC _ns1__CastUploadExMetaDataResponse
{
public:
	std::string *CastUploadExMetaDataResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 182; } /* = unique type id SOAP_TYPE__ns1__CastUploadExMetaDataResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__CastUploadExMetaDataResponse() { _ns1__CastUploadExMetaDataResponse::soap_default(NULL); }
	virtual ~_ns1__CastUploadExMetaDataResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__CastUploadExMetaData2
#define SOAP_TYPE__ns1__CastUploadExMetaData2 (183)
/* ns1:CastUploadExMetaData2 */
class SOAP_CMAC _ns1__CastUploadExMetaData2
{
public:
	ns1__ST_USCORECAST_USCOREUPLOAD_USCOREEX_USCOREMETADATA2_USCOREQUERY *stQuery;	/* required element of type ns1:ST_CAST_UPLOAD_EX_METADATA2_QUERY */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 183; } /* = unique type id SOAP_TYPE__ns1__CastUploadExMetaData2 */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__CastUploadExMetaData2() { _ns1__CastUploadExMetaData2::soap_default(NULL); }
	virtual ~_ns1__CastUploadExMetaData2() { }
};
#endif

#ifndef SOAP_TYPE__ns1__CastUploadExMetaData2Response
#define SOAP_TYPE__ns1__CastUploadExMetaData2Response (184)
/* ns1:CastUploadExMetaData2Response */
class SOAP_CMAC _ns1__CastUploadExMetaData2Response
{
public:
	std::string *CastUploadExMetaData2Result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 184; } /* = unique type id SOAP_TYPE__ns1__CastUploadExMetaData2Response */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__CastUploadExMetaData2Response() { _ns1__CastUploadExMetaData2Response::soap_default(NULL); }
	virtual ~_ns1__CastUploadExMetaData2Response() { }
};
#endif

#ifndef SOAP_TYPE__ns1__CastUploadExMetaData3
#define SOAP_TYPE__ns1__CastUploadExMetaData3 (185)
/* ns1:CastUploadExMetaData3 */
class SOAP_CMAC _ns1__CastUploadExMetaData3
{
public:
	ns1__ST_USCORECAST_USCOREUPLOAD_USCOREEX_USCOREMETADATA3_USCOREQUERY *stQuery;	/* required element of type ns1:ST_CAST_UPLOAD_EX_METADATA3_QUERY */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 185; } /* = unique type id SOAP_TYPE__ns1__CastUploadExMetaData3 */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__CastUploadExMetaData3() { _ns1__CastUploadExMetaData3::soap_default(NULL); }
	virtual ~_ns1__CastUploadExMetaData3() { }
};
#endif

#ifndef SOAP_TYPE__ns1__CastUploadExMetaData3Response
#define SOAP_TYPE__ns1__CastUploadExMetaData3Response (186)
/* ns1:CastUploadExMetaData3Response */
class SOAP_CMAC _ns1__CastUploadExMetaData3Response
{
public:
	std::string *CastUploadExMetaData3Result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 186; } /* = unique type id SOAP_TYPE__ns1__CastUploadExMetaData3Response */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__CastUploadExMetaData3Response() { _ns1__CastUploadExMetaData3Response::soap_default(NULL); }
	virtual ~_ns1__CastUploadExMetaData3Response() { }
};
#endif

#ifndef SOAP_TYPE__ns1__CastRemoveExMetaData
#define SOAP_TYPE__ns1__CastRemoveExMetaData (187)
/* ns1:CastRemoveExMetaData */
class SOAP_CMAC _ns1__CastRemoveExMetaData
{
public:
	ns1__ST_USCORECAST_USCOREREMOVE_USCOREEX_USCOREMETADATA_USCOREQUERY *stQuery;	/* required element of type ns1:ST_CAST_REMOVE_EX_METADATA_QUERY */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 187; } /* = unique type id SOAP_TYPE__ns1__CastRemoveExMetaData */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__CastRemoveExMetaData() { _ns1__CastRemoveExMetaData::soap_default(NULL); }
	virtual ~_ns1__CastRemoveExMetaData() { }
};
#endif

#ifndef SOAP_TYPE__ns1__CastRemoveExMetaDataResponse
#define SOAP_TYPE__ns1__CastRemoveExMetaDataResponse (188)
/* ns1:CastRemoveExMetaDataResponse */
class SOAP_CMAC _ns1__CastRemoveExMetaDataResponse
{
public:
	std::string *CastRemoveExMetaDataResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 188; } /* = unique type id SOAP_TYPE__ns1__CastRemoveExMetaDataResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__CastRemoveExMetaDataResponse() { _ns1__CastRemoveExMetaDataResponse::soap_default(NULL); }
	virtual ~_ns1__CastRemoveExMetaDataResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__CastGetExMetaData
#define SOAP_TYPE__ns1__CastGetExMetaData (189)
/* ns1:CastGetExMetaData */
class SOAP_CMAC _ns1__CastGetExMetaData
{
public:
	ns1__ST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCOREQUERY *stQuery;	/* required element of type ns1:ST_CAST_GET_EX_METADATA_QUERY */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 189; } /* = unique type id SOAP_TYPE__ns1__CastGetExMetaData */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__CastGetExMetaData() { _ns1__CastGetExMetaData::soap_default(NULL); }
	virtual ~_ns1__CastGetExMetaData() { }
};
#endif

#ifndef SOAP_TYPE__ns1__CastGetExMetaDataResponse
#define SOAP_TYPE__ns1__CastGetExMetaDataResponse (190)
/* ns1:CastGetExMetaDataResponse */
class SOAP_CMAC _ns1__CastGetExMetaDataResponse
{
public:
	ns1__ST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORERETURN *CastGetExMetaDataResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:ST_CAST_GET_EX_METADATA_RETURN */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 190; } /* = unique type id SOAP_TYPE__ns1__CastGetExMetaDataResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__CastGetExMetaDataResponse() { _ns1__CastGetExMetaDataResponse::soap_default(NULL); }
	virtual ~_ns1__CastGetExMetaDataResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__CastGetExMetaDataList
#define SOAP_TYPE__ns1__CastGetExMetaDataList (191)
/* ns1:CastGetExMetaDataList */
class SOAP_CMAC _ns1__CastGetExMetaDataList
{
public:
	int nIgnore;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 191; } /* = unique type id SOAP_TYPE__ns1__CastGetExMetaDataList */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__CastGetExMetaDataList() { _ns1__CastGetExMetaDataList::soap_default(NULL); }
	virtual ~_ns1__CastGetExMetaDataList() { }
};
#endif

#ifndef SOAP_TYPE__ns1__CastGetExMetaDataListResponse
#define SOAP_TYPE__ns1__CastGetExMetaDataListResponse (192)
/* ns1:CastGetExMetaDataListResponse */
class SOAP_CMAC _ns1__CastGetExMetaDataListResponse
{
public:
	ns1__ArrayOfST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORELIST_USCORERETURN *CastGetExMetaDataListResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfST_CAST_GET_EX_METADATA_LIST_RETURN */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 192; } /* = unique type id SOAP_TYPE__ns1__CastGetExMetaDataListResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__CastGetExMetaDataListResponse() { _ns1__CastGetExMetaDataListResponse::soap_default(NULL); }
	virtual ~_ns1__CastGetExMetaDataListResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__CastGetExMetaDataList2
#define SOAP_TYPE__ns1__CastGetExMetaDataList2 (193)
/* ns1:CastGetExMetaDataList2 */
class SOAP_CMAC _ns1__CastGetExMetaDataList2
{
public:
	int nIgnore;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 193; } /* = unique type id SOAP_TYPE__ns1__CastGetExMetaDataList2 */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__CastGetExMetaDataList2() { _ns1__CastGetExMetaDataList2::soap_default(NULL); }
	virtual ~_ns1__CastGetExMetaDataList2() { }
};
#endif

#ifndef SOAP_TYPE__ns1__CastGetExMetaDataList2Response
#define SOAP_TYPE__ns1__CastGetExMetaDataList2Response (194)
/* ns1:CastGetExMetaDataList2Response */
class SOAP_CMAC _ns1__CastGetExMetaDataList2Response
{
public:
	ns1__ArrayOfST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORELIST2_USCORERETURN *CastGetExMetaDataList2Result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfST_CAST_GET_EX_METADATA_LIST2_RETURN */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 194; } /* = unique type id SOAP_TYPE__ns1__CastGetExMetaDataList2Response */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__CastGetExMetaDataList2Response() { _ns1__CastGetExMetaDataList2Response::soap_default(NULL); }
	virtual ~_ns1__CastGetExMetaDataList2Response() { }
};
#endif

#ifndef SOAP_TYPE__ns1__CastGetExMetaDataList3
#define SOAP_TYPE__ns1__CastGetExMetaDataList3 (195)
/* ns1:CastGetExMetaDataList3 */
class SOAP_CMAC _ns1__CastGetExMetaDataList3
{
public:
	int nIgnore;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 195; } /* = unique type id SOAP_TYPE__ns1__CastGetExMetaDataList3 */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__CastGetExMetaDataList3() { _ns1__CastGetExMetaDataList3::soap_default(NULL); }
	virtual ~_ns1__CastGetExMetaDataList3() { }
};
#endif

#ifndef SOAP_TYPE__ns1__CastGetExMetaDataList3Response
#define SOAP_TYPE__ns1__CastGetExMetaDataList3Response (196)
/* ns1:CastGetExMetaDataList3Response */
class SOAP_CMAC _ns1__CastGetExMetaDataList3Response
{
public:
	ns1__ArrayOfST_USCORECAST_USCOREGET_USCOREEX_USCOREMETADATA_USCORELIST3_USCORERETURN *CastGetExMetaDataList3Result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfST_CAST_GET_EX_METADATA_LIST3_RETURN */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 196; } /* = unique type id SOAP_TYPE__ns1__CastGetExMetaDataList3Response */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__CastGetExMetaDataList3Response() { _ns1__CastGetExMetaDataList3Response::soap_default(NULL); }
	virtual ~_ns1__CastGetExMetaDataList3Response() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetBroadcastingList
#define SOAP_TYPE__ns1__GetBroadcastingList (197)
/* ns1:GetBroadcastingList */
class SOAP_CMAC _ns1__GetBroadcastingList
{
public:
	int category;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 197; } /* = unique type id SOAP_TYPE__ns1__GetBroadcastingList */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetBroadcastingList() { _ns1__GetBroadcastingList::soap_default(NULL); }
	virtual ~_ns1__GetBroadcastingList() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetBroadcastingListResponse
#define SOAP_TYPE__ns1__GetBroadcastingListResponse (198)
/* ns1:GetBroadcastingListResponse */
class SOAP_CMAC _ns1__GetBroadcastingListResponse
{
public:
	ns1__ArrayOfGetBroadcastingListReturn *GetBroadcastingListResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfGetBroadcastingListReturn */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 198; } /* = unique type id SOAP_TYPE__ns1__GetBroadcastingListResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetBroadcastingListResponse() { _ns1__GetBroadcastingListResponse::soap_default(NULL); }
	virtual ~_ns1__GetBroadcastingListResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetBroadcastingList2
#define SOAP_TYPE__ns1__GetBroadcastingList2 (199)
/* ns1:GetBroadcastingList2 */
class SOAP_CMAC _ns1__GetBroadcastingList2
{
public:
	int category;	/* required element of type xsd:int */
	float version;	/* required element of type xsd:float */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 199; } /* = unique type id SOAP_TYPE__ns1__GetBroadcastingList2 */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetBroadcastingList2() { _ns1__GetBroadcastingList2::soap_default(NULL); }
	virtual ~_ns1__GetBroadcastingList2() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetBroadcastingList2Response
#define SOAP_TYPE__ns1__GetBroadcastingList2Response (200)
/* ns1:GetBroadcastingList2Response */
class SOAP_CMAC _ns1__GetBroadcastingList2Response
{
public:
	ns1__ArrayOfGetBroadcastingListReturn *GetBroadcastingList2Result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfGetBroadcastingListReturn */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 200; } /* = unique type id SOAP_TYPE__ns1__GetBroadcastingList2Response */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetBroadcastingList2Response() { _ns1__GetBroadcastingList2Response::soap_default(NULL); }
	virtual ~_ns1__GetBroadcastingList2Response() { }
};
#endif

#ifndef SOAP_TYPE__ns1__UploadForeignLyric
#define SOAP_TYPE__ns1__UploadForeignLyric (201)
/* ns1:UploadForeignLyric */
class SOAP_CMAC _ns1__UploadForeignLyric
{
public:
	ns1__UploadForeignLyricInfo *uploadInfo;	/* required element of type ns1:UploadForeignLyricInfo */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 201; } /* = unique type id SOAP_TYPE__ns1__UploadForeignLyric */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__UploadForeignLyric() { _ns1__UploadForeignLyric::soap_default(NULL); }
	virtual ~_ns1__UploadForeignLyric() { }
};
#endif

#ifndef SOAP_TYPE__ns1__UploadForeignLyricResponse
#define SOAP_TYPE__ns1__UploadForeignLyricResponse (202)
/* ns1:UploadForeignLyricResponse */
class SOAP_CMAC _ns1__UploadForeignLyricResponse
{
public:
	bool UploadForeignLyricResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 202; } /* = unique type id SOAP_TYPE__ns1__UploadForeignLyricResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__UploadForeignLyricResponse() { _ns1__UploadForeignLyricResponse::soap_default(NULL); }
	virtual ~_ns1__UploadForeignLyricResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetResembleLyricList
#define SOAP_TYPE__ns1__GetResembleLyricList (203)
/* ns1:GetResembleLyricList */
class SOAP_CMAC _ns1__GetResembleLyricList
{
public:
	std::string *title;	/* optional element of type xsd:string */
	std::string *artist;	/* optional element of type xsd:string */
	int pageNo;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 203; } /* = unique type id SOAP_TYPE__ns1__GetResembleLyricList */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetResembleLyricList() { _ns1__GetResembleLyricList::soap_default(NULL); }
	virtual ~_ns1__GetResembleLyricList() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetResembleLyricListResponse
#define SOAP_TYPE__ns1__GetResembleLyricListResponse (204)
/* ns1:GetResembleLyricListResponse */
class SOAP_CMAC _ns1__GetResembleLyricListResponse
{
public:
	ns1__ArrayOfST_USCORESEARCHLYRIC_USCORELIST *GetResembleLyricListResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfST_SEARCHLYRIC_LIST */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 204; } /* = unique type id SOAP_TYPE__ns1__GetResembleLyricListResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetResembleLyricListResponse() { _ns1__GetResembleLyricListResponse::soap_default(NULL); }
	virtual ~_ns1__GetResembleLyricListResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetResembleLyricList2
#define SOAP_TYPE__ns1__GetResembleLyricList2 (205)
/* ns1:GetResembleLyricList2 */
class SOAP_CMAC _ns1__GetResembleLyricList2
{
public:
	std::string *encData;	/* optional element of type xsd:string */
	std::string *title;	/* optional element of type xsd:string */
	std::string *artist;	/* optional element of type xsd:string */
	int pageNo;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 205; } /* = unique type id SOAP_TYPE__ns1__GetResembleLyricList2 */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetResembleLyricList2() { _ns1__GetResembleLyricList2::soap_default(NULL); }
	virtual ~_ns1__GetResembleLyricList2() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetResembleLyricList2Response
#define SOAP_TYPE__ns1__GetResembleLyricList2Response (206)
/* ns1:GetResembleLyricList2Response */
class SOAP_CMAC _ns1__GetResembleLyricList2Response
{
public:
	ns1__ArrayOfST_USCORESEARCHLYRIC_USCORELIST *GetResembleLyricList2Result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfST_SEARCHLYRIC_LIST */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 206; } /* = unique type id SOAP_TYPE__ns1__GetResembleLyricList2Response */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetResembleLyricList2Response() { _ns1__GetResembleLyricList2Response::soap_default(NULL); }
	virtual ~_ns1__GetResembleLyricList2Response() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetLyricByID
#define SOAP_TYPE__ns1__GetLyricByID (207)
/* ns1:GetLyricByID */
class SOAP_CMAC _ns1__GetLyricByID
{
public:
	int lyricID;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 207; } /* = unique type id SOAP_TYPE__ns1__GetLyricByID */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetLyricByID() { _ns1__GetLyricByID::soap_default(NULL); }
	virtual ~_ns1__GetLyricByID() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetLyricByIDResponse
#define SOAP_TYPE__ns1__GetLyricByIDResponse (208)
/* ns1:GetLyricByIDResponse */
class SOAP_CMAC _ns1__GetLyricByIDResponse
{
public:
	bool GetLyricByIDResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:boolean */
	ns1__ST_USCORELYRICINFO *output;	/* required element of type ns1:ST_LYRICINFO */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 208; } /* = unique type id SOAP_TYPE__ns1__GetLyricByIDResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetLyricByIDResponse() { _ns1__GetLyricByIDResponse::soap_default(NULL); }
	virtual ~_ns1__GetLyricByIDResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetLyricByID2
#define SOAP_TYPE__ns1__GetLyricByID2 (209)
/* ns1:GetLyricByID2 */
class SOAP_CMAC _ns1__GetLyricByID2
{
public:
	std::string *encData;	/* optional element of type xsd:string */
	int lyricID;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 209; } /* = unique type id SOAP_TYPE__ns1__GetLyricByID2 */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetLyricByID2() { _ns1__GetLyricByID2::soap_default(NULL); }
	virtual ~_ns1__GetLyricByID2() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetLyricByID2Response
#define SOAP_TYPE__ns1__GetLyricByID2Response (210)
/* ns1:GetLyricByID2Response */
class SOAP_CMAC _ns1__GetLyricByID2Response
{
public:
	bool GetLyricByID2Result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:boolean */
	ns1__ST_USCORELYRICINFO *output;	/* required element of type ns1:ST_LYRICINFO */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 210; } /* = unique type id SOAP_TYPE__ns1__GetLyricByID2Response */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetLyricByID2Response() { _ns1__GetLyricByID2Response::soap_default(NULL); }
	virtual ~_ns1__GetLyricByID2Response() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AdminJPNGetRightsInfoByModifyID
#define SOAP_TYPE__ns1__AdminJPNGetRightsInfoByModifyID (211)
/* ns1:AdminJPNGetRightsInfoByModifyID */
class SOAP_CMAC _ns1__AdminJPNGetRightsInfoByModifyID
{
public:
	int modifyID;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 211; } /* = unique type id SOAP_TYPE__ns1__AdminJPNGetRightsInfoByModifyID */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AdminJPNGetRightsInfoByModifyID() { _ns1__AdminJPNGetRightsInfoByModifyID::soap_default(NULL); }
	virtual ~_ns1__AdminJPNGetRightsInfoByModifyID() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AdminJPNGetRightsInfoByModifyIDResponse
#define SOAP_TYPE__ns1__AdminJPNGetRightsInfoByModifyIDResponse (212)
/* ns1:AdminJPNGetRightsInfoByModifyIDResponse */
class SOAP_CMAC _ns1__AdminJPNGetRightsInfoByModifyIDResponse
{
public:
	bool AdminJPNGetRightsInfoByModifyIDResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:boolean */
	ns1__ST_USCORERIGHTSINFO_USCOREJPN *output;	/* required element of type ns1:ST_RIGHTSINFO_JPN */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 212; } /* = unique type id SOAP_TYPE__ns1__AdminJPNGetRightsInfoByModifyIDResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AdminJPNGetRightsInfoByModifyIDResponse() { _ns1__AdminJPNGetRightsInfoByModifyIDResponse::soap_default(NULL); }
	virtual ~_ns1__AdminJPNGetRightsInfoByModifyIDResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AdminJPNGetRightsInfoByLyricID
#define SOAP_TYPE__ns1__AdminJPNGetRightsInfoByLyricID (213)
/* ns1:AdminJPNGetRightsInfoByLyricID */
class SOAP_CMAC _ns1__AdminJPNGetRightsInfoByLyricID
{
public:
	int lyricID;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 213; } /* = unique type id SOAP_TYPE__ns1__AdminJPNGetRightsInfoByLyricID */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AdminJPNGetRightsInfoByLyricID() { _ns1__AdminJPNGetRightsInfoByLyricID::soap_default(NULL); }
	virtual ~_ns1__AdminJPNGetRightsInfoByLyricID() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AdminJPNGetRightsInfoByLyricIDResponse
#define SOAP_TYPE__ns1__AdminJPNGetRightsInfoByLyricIDResponse (214)
/* ns1:AdminJPNGetRightsInfoByLyricIDResponse */
class SOAP_CMAC _ns1__AdminJPNGetRightsInfoByLyricIDResponse
{
public:
	bool AdminJPNGetRightsInfoByLyricIDResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:boolean */
	ns1__ST_USCORERIGHTSINFO_USCOREJPN *output;	/* required element of type ns1:ST_RIGHTSINFO_JPN */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 214; } /* = unique type id SOAP_TYPE__ns1__AdminJPNGetRightsInfoByLyricIDResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AdminJPNGetRightsInfoByLyricIDResponse() { _ns1__AdminJPNGetRightsInfoByLyricIDResponse::soap_default(NULL); }
	virtual ~_ns1__AdminJPNGetRightsInfoByLyricIDResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AdminJPNSetRightsInfo
#define SOAP_TYPE__ns1__AdminJPNSetRightsInfo (215)
/* ns1:AdminJPNSetRightsInfo */
class SOAP_CMAC _ns1__AdminJPNSetRightsInfo
{
public:
	ns1__ST_USCORERIGHTSINFO_USCOREJPN *input;	/* required element of type ns1:ST_RIGHTSINFO_JPN */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 215; } /* = unique type id SOAP_TYPE__ns1__AdminJPNSetRightsInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AdminJPNSetRightsInfo() { _ns1__AdminJPNSetRightsInfo::soap_default(NULL); }
	virtual ~_ns1__AdminJPNSetRightsInfo() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AdminJPNSetRightsInfoResponse
#define SOAP_TYPE__ns1__AdminJPNSetRightsInfoResponse (216)
/* ns1:AdminJPNSetRightsInfoResponse */
class SOAP_CMAC _ns1__AdminJPNSetRightsInfoResponse
{
public:
	bool AdminJPNSetRightsInfoResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 216; } /* = unique type id SOAP_TYPE__ns1__AdminJPNSetRightsInfoResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AdminJPNSetRightsInfoResponse() { _ns1__AdminJPNSetRightsInfoResponse::soap_default(NULL); }
	virtual ~_ns1__AdminJPNSetRightsInfoResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AdminJPNSearchRightsInfoList
#define SOAP_TYPE__ns1__AdminJPNSearchRightsInfoList (217)
/* ns1:AdminJPNSearchRightsInfoList */
class SOAP_CMAC _ns1__AdminJPNSearchRightsInfoList
{
public:
	std::string *title;	/* optional element of type xsd:string */
	std::string *artist;	/* optional element of type xsd:string */
	int pageNo;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 217; } /* = unique type id SOAP_TYPE__ns1__AdminJPNSearchRightsInfoList */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AdminJPNSearchRightsInfoList() { _ns1__AdminJPNSearchRightsInfoList::soap_default(NULL); }
	virtual ~_ns1__AdminJPNSearchRightsInfoList() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AdminJPNSearchRightsInfoListResponse
#define SOAP_TYPE__ns1__AdminJPNSearchRightsInfoListResponse (218)
/* ns1:AdminJPNSearchRightsInfoListResponse */
class SOAP_CMAC _ns1__AdminJPNSearchRightsInfoListResponse
{
public:
	ns1__ArrayOfST_USCORERIGHTSINFO_USCOREJPN *AdminJPNSearchRightsInfoListResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfST_RIGHTSINFO_JPN */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 218; } /* = unique type id SOAP_TYPE__ns1__AdminJPNSearchRightsInfoListResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AdminJPNSearchRightsInfoListResponse() { _ns1__AdminJPNSearchRightsInfoListResponse::soap_default(NULL); }
	virtual ~_ns1__AdminJPNSearchRightsInfoListResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AdminLoginRightsJPN
#define SOAP_TYPE__ns1__AdminLoginRightsJPN (219)
/* ns1:AdminLoginRightsJPN */
class SOAP_CMAC _ns1__AdminLoginRightsJPN
{
public:
	xsd__base64Binary *userID;	/* optional element of type xsd:base64Binary */
	xsd__base64Binary *password;	/* optional element of type xsd:base64Binary */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 219; } /* = unique type id SOAP_TYPE__ns1__AdminLoginRightsJPN */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AdminLoginRightsJPN() { _ns1__AdminLoginRightsJPN::soap_default(NULL); }
	virtual ~_ns1__AdminLoginRightsJPN() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AdminLoginRightsJPNResponse
#define SOAP_TYPE__ns1__AdminLoginRightsJPNResponse (220)
/* ns1:AdminLoginRightsJPNResponse */
class SOAP_CMAC _ns1__AdminLoginRightsJPNResponse
{
public:
	bool AdminLoginRightsJPNResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 220; } /* = unique type id SOAP_TYPE__ns1__AdminLoginRightsJPNResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AdminLoginRightsJPNResponse() { _ns1__AdminLoginRightsJPNResponse::soap_default(NULL); }
	virtual ~_ns1__AdminLoginRightsJPNResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetSearchLyricCount
#define SOAP_TYPE__ns1__GetSearchLyricCount (221)
/* ns1:GetSearchLyricCount */
class SOAP_CMAC _ns1__GetSearchLyricCount
{
public:
	std::string *title;	/* optional element of type xsd:string */
	std::string *artist;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 221; } /* = unique type id SOAP_TYPE__ns1__GetSearchLyricCount */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetSearchLyricCount() { _ns1__GetSearchLyricCount::soap_default(NULL); }
	virtual ~_ns1__GetSearchLyricCount() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetSearchLyricCountResponse
#define SOAP_TYPE__ns1__GetSearchLyricCountResponse (222)
/* ns1:GetSearchLyricCountResponse */
class SOAP_CMAC _ns1__GetSearchLyricCountResponse
{
public:
	int GetSearchLyricCountResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 222; } /* = unique type id SOAP_TYPE__ns1__GetSearchLyricCountResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetSearchLyricCountResponse() { _ns1__GetSearchLyricCountResponse::soap_default(NULL); }
	virtual ~_ns1__GetSearchLyricCountResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AdminLoginLyricMonitor
#define SOAP_TYPE__ns1__AdminLoginLyricMonitor (223)
/* ns1:AdminLoginLyricMonitor */
class SOAP_CMAC _ns1__AdminLoginLyricMonitor
{
public:
	xsd__base64Binary *userID;	/* optional element of type xsd:base64Binary */
	xsd__base64Binary *password;	/* optional element of type xsd:base64Binary */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 223; } /* = unique type id SOAP_TYPE__ns1__AdminLoginLyricMonitor */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AdminLoginLyricMonitor() { _ns1__AdminLoginLyricMonitor::soap_default(NULL); }
	virtual ~_ns1__AdminLoginLyricMonitor() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AdminLoginLyricMonitorResponse
#define SOAP_TYPE__ns1__AdminLoginLyricMonitorResponse (224)
/* ns1:AdminLoginLyricMonitorResponse */
class SOAP_CMAC _ns1__AdminLoginLyricMonitorResponse
{
public:
	bool AdminLoginLyricMonitorResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 224; } /* = unique type id SOAP_TYPE__ns1__AdminLoginLyricMonitorResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AdminLoginLyricMonitorResponse() { _ns1__AdminLoginLyricMonitorResponse::soap_default(NULL); }
	virtual ~_ns1__AdminLoginLyricMonitorResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AdminGetLyrics
#define SOAP_TYPE__ns1__AdminGetLyrics (225)
/* ns1:AdminGetLyrics */
class SOAP_CMAC _ns1__AdminGetLyrics
{
public:
	int infoIDLo;	/* required element of type xsd:int */
	int infoIDHi;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 225; } /* = unique type id SOAP_TYPE__ns1__AdminGetLyrics */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AdminGetLyrics() { _ns1__AdminGetLyrics::soap_default(NULL); }
	virtual ~_ns1__AdminGetLyrics() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AdminGetLyricsResponse
#define SOAP_TYPE__ns1__AdminGetLyricsResponse (226)
/* ns1:AdminGetLyricsResponse */
class SOAP_CMAC _ns1__AdminGetLyricsResponse
{
public:
	ns1__ArrayOfST_USCORELYRIC_USCOREFORMONITOR *AdminGetLyricsResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfST_LYRIC_FORMONITOR */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 226; } /* = unique type id SOAP_TYPE__ns1__AdminGetLyricsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AdminGetLyricsResponse() { _ns1__AdminGetLyricsResponse::soap_default(NULL); }
	virtual ~_ns1__AdminGetLyricsResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AdminDeleteLyrics
#define SOAP_TYPE__ns1__AdminDeleteLyrics (227)
/* ns1:AdminDeleteLyrics */
class SOAP_CMAC _ns1__AdminDeleteLyrics
{
public:
	ns1__ArrayOfInt *infoIDs;	/* optional element of type ns1:ArrayOfInt */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 227; } /* = unique type id SOAP_TYPE__ns1__AdminDeleteLyrics */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AdminDeleteLyrics() { _ns1__AdminDeleteLyrics::soap_default(NULL); }
	virtual ~_ns1__AdminDeleteLyrics() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AdminDeleteLyricsResponse
#define SOAP_TYPE__ns1__AdminDeleteLyricsResponse (228)
/* ns1:AdminDeleteLyricsResponse */
class SOAP_CMAC _ns1__AdminDeleteLyricsResponse
{
public:
	ns1__ArrayOfST_USCORELYRIC_USCOREDELETE_USCORERESULT *AdminDeleteLyricsResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfST_LYRIC_DELETE_RESULT */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 228; } /* = unique type id SOAP_TYPE__ns1__AdminDeleteLyricsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AdminDeleteLyricsResponse() { _ns1__AdminDeleteLyricsResponse::soap_default(NULL); }
	virtual ~_ns1__AdminDeleteLyricsResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AdminGetLatestLyricID
#define SOAP_TYPE__ns1__AdminGetLatestLyricID (229)
/* ns1:AdminGetLatestLyricID */
class SOAP_CMAC _ns1__AdminGetLatestLyricID
{
public:
	int reserved;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 229; } /* = unique type id SOAP_TYPE__ns1__AdminGetLatestLyricID */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AdminGetLatestLyricID() { _ns1__AdminGetLatestLyricID::soap_default(NULL); }
	virtual ~_ns1__AdminGetLatestLyricID() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AdminGetLatestLyricIDResponse
#define SOAP_TYPE__ns1__AdminGetLatestLyricIDResponse (230)
/* ns1:AdminGetLatestLyricIDResponse */
class SOAP_CMAC _ns1__AdminGetLatestLyricIDResponse
{
public:
	int AdminGetLatestLyricIDResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 230; } /* = unique type id SOAP_TYPE__ns1__AdminGetLatestLyricIDResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AdminGetLatestLyricIDResponse() { _ns1__AdminGetLatestLyricIDResponse::soap_default(NULL); }
	virtual ~_ns1__AdminGetLatestLyricIDResponse() { }
};
#endif

#ifndef SOAP_TYPE___ns1__GetMurekaInfo
#define SOAP_TYPE___ns1__GetMurekaInfo (338)
/* Operation wrapper: */
struct __ns1__GetMurekaInfo
{
public:
	_ns1__GetMurekaInfo *ns1__GetMurekaInfo;	/* optional element of type ns1:GetMurekaInfo */
public:
	int soap_type() const { return 338; } /* = unique type id SOAP_TYPE___ns1__GetMurekaInfo */
};
#endif

#ifndef SOAP_TYPE___ns1__GetSyncLyricBySearch
#define SOAP_TYPE___ns1__GetSyncLyricBySearch (342)
/* Operation wrapper: */
struct __ns1__GetSyncLyricBySearch
{
public:
	_ns1__GetSyncLyricBySearch *ns1__GetSyncLyricBySearch;	/* optional element of type ns1:GetSyncLyricBySearch */
public:
	int soap_type() const { return 342; } /* = unique type id SOAP_TYPE___ns1__GetSyncLyricBySearch */
};
#endif

#ifndef SOAP_TYPE___ns1__SetLinkLyric
#define SOAP_TYPE___ns1__SetLinkLyric (346)
/* Operation wrapper: */
struct __ns1__SetLinkLyric
{
public:
	_ns1__SetLinkLyric *ns1__SetLinkLyric;	/* optional element of type ns1:SetLinkLyric */
public:
	int soap_type() const { return 346; } /* = unique type id SOAP_TYPE___ns1__SetLinkLyric */
};
#endif

#ifndef SOAP_TYPE___ns1__GetResembleLyric2
#define SOAP_TYPE___ns1__GetResembleLyric2 (350)
/* Operation wrapper: */
struct __ns1__GetResembleLyric2
{
public:
	_ns1__GetResembleLyric2 *ns1__GetResembleLyric2;	/* optional element of type ns1:GetResembleLyric2 */
public:
	int soap_type() const { return 350; } /* = unique type id SOAP_TYPE___ns1__GetResembleLyric2 */
};
#endif

#ifndef SOAP_TYPE___ns1__GetResembleLyric3
#define SOAP_TYPE___ns1__GetResembleLyric3 (354)
/* Operation wrapper: */
struct __ns1__GetResembleLyric3
{
public:
	_ns1__GetResembleLyric3 *ns1__GetResembleLyric3;	/* optional element of type ns1:GetResembleLyric3 */
public:
	int soap_type() const { return 354; } /* = unique type id SOAP_TYPE___ns1__GetResembleLyric3 */
};
#endif

#ifndef SOAP_TYPE___ns1__GetResembleLyric2Count
#define SOAP_TYPE___ns1__GetResembleLyric2Count (358)
/* Operation wrapper: */
struct __ns1__GetResembleLyric2Count
{
public:
	_ns1__GetResembleLyric2Count *ns1__GetResembleLyric2Count;	/* optional element of type ns1:GetResembleLyric2Count */
public:
	int soap_type() const { return 358; } /* = unique type id SOAP_TYPE___ns1__GetResembleLyric2Count */
};
#endif

#ifndef SOAP_TYPE___ns1__GetResembleLyric2CountTest
#define SOAP_TYPE___ns1__GetResembleLyric2CountTest (362)
/* Operation wrapper: */
struct __ns1__GetResembleLyric2CountTest
{
public:
	_ns1__GetResembleLyric2CountTest *ns1__GetResembleLyric2CountTest;	/* optional element of type ns1:GetResembleLyric2CountTest */
public:
	int soap_type() const { return 362; } /* = unique type id SOAP_TYPE___ns1__GetResembleLyric2CountTest */
};
#endif

#ifndef SOAP_TYPE___ns1__UploadLyric
#define SOAP_TYPE___ns1__UploadLyric (366)
/* Operation wrapper: */
struct __ns1__UploadLyric
{
public:
	_ns1__UploadLyric *ns1__UploadLyric;	/* optional element of type ns1:UploadLyric */
public:
	int soap_type() const { return 366; } /* = unique type id SOAP_TYPE___ns1__UploadLyric */
};
#endif

#ifndef SOAP_TYPE___ns1__ReportFaultLyricWithComment
#define SOAP_TYPE___ns1__ReportFaultLyricWithComment (370)
/* Operation wrapper: */
struct __ns1__ReportFaultLyricWithComment
{
public:
	_ns1__ReportFaultLyricWithComment *ns1__ReportFaultLyricWithComment;	/* optional element of type ns1:ReportFaultLyricWithComment */
public:
	int soap_type() const { return 370; } /* = unique type id SOAP_TYPE___ns1__ReportFaultLyricWithComment */
};
#endif

#ifndef SOAP_TYPE___ns1__ReportFaultLyric2
#define SOAP_TYPE___ns1__ReportFaultLyric2 (374)
/* Operation wrapper: */
struct __ns1__ReportFaultLyric2
{
public:
	_ns1__ReportFaultLyric2 *ns1__ReportFaultLyric2;	/* optional element of type ns1:ReportFaultLyric2 */
public:
	int soap_type() const { return 374; } /* = unique type id SOAP_TYPE___ns1__ReportFaultLyric2 */
};
#endif

#ifndef SOAP_TYPE___ns1__ReportRecommendationLyric
#define SOAP_TYPE___ns1__ReportRecommendationLyric (378)
/* Operation wrapper: */
struct __ns1__ReportRecommendationLyric
{
public:
	_ns1__ReportRecommendationLyric *ns1__ReportRecommendationLyric;	/* optional element of type ns1:ReportRecommendationLyric */
public:
	int soap_type() const { return 378; } /* = unique type id SOAP_TYPE___ns1__ReportRecommendationLyric */
};
#endif

#ifndef SOAP_TYPE___ns1__IsReportedRecommendationLyric
#define SOAP_TYPE___ns1__IsReportedRecommendationLyric (382)
/* Operation wrapper: */
struct __ns1__IsReportedRecommendationLyric
{
public:
	_ns1__IsReportedRecommendationLyric *ns1__IsReportedRecommendationLyric;	/* optional element of type ns1:IsReportedRecommendationLyric */
public:
	int soap_type() const { return 382; } /* = unique type id SOAP_TYPE___ns1__IsReportedRecommendationLyric */
};
#endif

#ifndef SOAP_TYPE___ns1__IsReportedFaultLyric
#define SOAP_TYPE___ns1__IsReportedFaultLyric (386)
/* Operation wrapper: */
struct __ns1__IsReportedFaultLyric
{
public:
	_ns1__IsReportedFaultLyric *ns1__IsReportedFaultLyric;	/* optional element of type ns1:IsReportedFaultLyric */
public:
	int soap_type() const { return 386; } /* = unique type id SOAP_TYPE___ns1__IsReportedFaultLyric */
};
#endif

#ifndef SOAP_TYPE___ns1__GetLyric3
#define SOAP_TYPE___ns1__GetLyric3 (390)
/* Operation wrapper: */
struct __ns1__GetLyric3
{
public:
	_ns1__GetLyric3 *ns1__GetLyric3;	/* optional element of type ns1:GetLyric3 */
public:
	int soap_type() const { return 390; } /* = unique type id SOAP_TYPE___ns1__GetLyric3 */
};
#endif

#ifndef SOAP_TYPE___ns1__GetLyric4
#define SOAP_TYPE___ns1__GetLyric4 (394)
/* Operation wrapper: */
struct __ns1__GetLyric4
{
public:
	_ns1__GetLyric4 *ns1__GetLyric4;	/* optional element of type ns1:GetLyric4 */
public:
	int soap_type() const { return 394; } /* = unique type id SOAP_TYPE___ns1__GetLyric4 */
};
#endif

#ifndef SOAP_TYPE___ns1__GetLyric5
#define SOAP_TYPE___ns1__GetLyric5 (398)
/* Operation wrapper: */
struct __ns1__GetLyric5
{
public:
	_ns1__GetLyric5 *ns1__GetLyric5;	/* optional element of type ns1:GetLyric5 */
public:
	int soap_type() const { return 398; } /* = unique type id SOAP_TYPE___ns1__GetLyric5 */
};
#endif

#ifndef SOAP_TYPE___ns1__GetLyric6
#define SOAP_TYPE___ns1__GetLyric6 (402)
/* Operation wrapper: */
struct __ns1__GetLyric6
{
public:
	_ns1__GetLyric6 *ns1__GetLyric6;	/* optional element of type ns1:GetLyric6 */
public:
	int soap_type() const { return 402; } /* = unique type id SOAP_TYPE___ns1__GetLyric6 */
};
#endif

#ifndef SOAP_TYPE___ns1__GetLyric7
#define SOAP_TYPE___ns1__GetLyric7 (406)
/* Operation wrapper: */
struct __ns1__GetLyric7
{
public:
	_ns1__GetLyric7 *ns1__GetLyric7;	/* optional element of type ns1:GetLyric7 */
public:
	int soap_type() const { return 406; } /* = unique type id SOAP_TYPE___ns1__GetLyric7 */
};
#endif

#ifndef SOAP_TYPE___ns1__GetLyric8
#define SOAP_TYPE___ns1__GetLyric8 (410)
/* Operation wrapper: */
struct __ns1__GetLyric8
{
public:
	_ns1__GetLyric8 *ns1__GetLyric8;	/* optional element of type ns1:GetLyric8 */
public:
	int soap_type() const { return 410; } /* = unique type id SOAP_TYPE___ns1__GetLyric8 */
};
#endif

#ifndef SOAP_TYPE___ns1__GetSongID
#define SOAP_TYPE___ns1__GetSongID (414)
/* Operation wrapper: */
struct __ns1__GetSongID
{
public:
	_ns1__GetSongID *ns1__GetSongID;	/* optional element of type ns1:GetSongID */
public:
	int soap_type() const { return 414; } /* = unique type id SOAP_TYPE___ns1__GetSongID */
};
#endif

#ifndef SOAP_TYPE___ns1__AdminGetLyricList
#define SOAP_TYPE___ns1__AdminGetLyricList (418)
/* Operation wrapper: */
struct __ns1__AdminGetLyricList
{
public:
	_ns1__AdminGetLyricList *ns1__AdminGetLyricList;	/* optional element of type ns1:AdminGetLyricList */
public:
	int soap_type() const { return 418; } /* = unique type id SOAP_TYPE___ns1__AdminGetLyricList */
};
#endif

#ifndef SOAP_TYPE___ns1__AdminGetLyricListByID
#define SOAP_TYPE___ns1__AdminGetLyricListByID (422)
/* Operation wrapper: */
struct __ns1__AdminGetLyricListByID
{
public:
	_ns1__AdminGetLyricListByID *ns1__AdminGetLyricListByID;	/* optional element of type ns1:AdminGetLyricListByID */
public:
	int soap_type() const { return 422; } /* = unique type id SOAP_TYPE___ns1__AdminGetLyricListByID */
};
#endif

#ifndef SOAP_TYPE___ns1__AdminGetReportFaultList
#define SOAP_TYPE___ns1__AdminGetReportFaultList (426)
/* Operation wrapper: */
struct __ns1__AdminGetReportFaultList
{
public:
	_ns1__AdminGetReportFaultList *ns1__AdminGetReportFaultList;	/* optional element of type ns1:AdminGetReportFaultList */
public:
	int soap_type() const { return 426; } /* = unique type id SOAP_TYPE___ns1__AdminGetReportFaultList */
};
#endif

#ifndef SOAP_TYPE___ns1__AdminGetModifyList
#define SOAP_TYPE___ns1__AdminGetModifyList (430)
/* Operation wrapper: */
struct __ns1__AdminGetModifyList
{
public:
	_ns1__AdminGetModifyList *ns1__AdminGetModifyList;	/* optional element of type ns1:AdminGetModifyList */
public:
	int soap_type() const { return 430; } /* = unique type id SOAP_TYPE___ns1__AdminGetModifyList */
};
#endif

#ifndef SOAP_TYPE___ns1__AdminGetRegisterList
#define SOAP_TYPE___ns1__AdminGetRegisterList (434)
/* Operation wrapper: */
struct __ns1__AdminGetRegisterList
{
public:
	_ns1__AdminGetRegisterList *ns1__AdminGetRegisterList;	/* optional element of type ns1:AdminGetRegisterList */
public:
	int soap_type() const { return 434; } /* = unique type id SOAP_TYPE___ns1__AdminGetRegisterList */
};
#endif

#ifndef SOAP_TYPE___ns1__MemberAddMember
#define SOAP_TYPE___ns1__MemberAddMember (438)
/* Operation wrapper: */
struct __ns1__MemberAddMember
{
public:
	_ns1__MemberAddMember *ns1__MemberAddMember;	/* optional element of type ns1:MemberAddMember */
public:
	int soap_type() const { return 438; } /* = unique type id SOAP_TYPE___ns1__MemberAddMember */
};
#endif

#ifndef SOAP_TYPE___ns1__MemberModifyMember
#define SOAP_TYPE___ns1__MemberModifyMember (442)
/* Operation wrapper: */
struct __ns1__MemberModifyMember
{
public:
	_ns1__MemberModifyMember *ns1__MemberModifyMember;	/* optional element of type ns1:MemberModifyMember */
public:
	int soap_type() const { return 442; } /* = unique type id SOAP_TYPE___ns1__MemberModifyMember */
};
#endif

#ifndef SOAP_TYPE___ns1__MemberRemoveMember
#define SOAP_TYPE___ns1__MemberRemoveMember (446)
/* Operation wrapper: */
struct __ns1__MemberRemoveMember
{
public:
	_ns1__MemberRemoveMember *ns1__MemberRemoveMember;	/* optional element of type ns1:MemberRemoveMember */
public:
	int soap_type() const { return 446; } /* = unique type id SOAP_TYPE___ns1__MemberRemoveMember */
};
#endif

#ifndef SOAP_TYPE___ns1__MemberLogin
#define SOAP_TYPE___ns1__MemberLogin (450)
/* Operation wrapper: */
struct __ns1__MemberLogin
{
public:
	_ns1__MemberLogin *ns1__MemberLogin;	/* optional element of type ns1:MemberLogin */
public:
	int soap_type() const { return 450; } /* = unique type id SOAP_TYPE___ns1__MemberLogin */
};
#endif

#ifndef SOAP_TYPE___ns1__MemberLogout
#define SOAP_TYPE___ns1__MemberLogout (454)
/* Operation wrapper: */
struct __ns1__MemberLogout
{
public:
	_ns1__MemberLogout *ns1__MemberLogout;	/* optional element of type ns1:MemberLogout */
public:
	int soap_type() const { return 454; } /* = unique type id SOAP_TYPE___ns1__MemberLogout */
};
#endif

#ifndef SOAP_TYPE___ns1__MemberApplyRegistration
#define SOAP_TYPE___ns1__MemberApplyRegistration (458)
/* Operation wrapper: */
struct __ns1__MemberApplyRegistration
{
public:
	_ns1__MemberApplyRegistration *ns1__MemberApplyRegistration;	/* optional element of type ns1:MemberApplyRegistration */
public:
	int soap_type() const { return 458; } /* = unique type id SOAP_TYPE___ns1__MemberApplyRegistration */
};
#endif

#ifndef SOAP_TYPE___ns1__MemberModifyMemberLicense
#define SOAP_TYPE___ns1__MemberModifyMemberLicense (462)
/* Operation wrapper: */
struct __ns1__MemberModifyMemberLicense
{
public:
	_ns1__MemberModifyMemberLicense *ns1__MemberModifyMemberLicense;	/* optional element of type ns1:MemberModifyMemberLicense */
public:
	int soap_type() const { return 462; } /* = unique type id SOAP_TYPE___ns1__MemberModifyMemberLicense */
};
#endif

#ifndef SOAP_TYPE___ns1__MemberGetMemberList
#define SOAP_TYPE___ns1__MemberGetMemberList (466)
/* Operation wrapper: */
struct __ns1__MemberGetMemberList
{
public:
	_ns1__MemberGetMemberList *ns1__MemberGetMemberList;	/* optional element of type ns1:MemberGetMemberList */
public:
	int soap_type() const { return 466; } /* = unique type id SOAP_TYPE___ns1__MemberGetMemberList */
};
#endif

#ifndef SOAP_TYPE___ns1__MemberGetMemberLicenseList
#define SOAP_TYPE___ns1__MemberGetMemberLicenseList (470)
/* Operation wrapper: */
struct __ns1__MemberGetMemberLicenseList
{
public:
	_ns1__MemberGetMemberLicenseList *ns1__MemberGetMemberLicenseList;	/* optional element of type ns1:MemberGetMemberLicenseList */
public:
	int soap_type() const { return 470; } /* = unique type id SOAP_TYPE___ns1__MemberGetMemberLicenseList */
};
#endif

#ifndef SOAP_TYPE___ns1__AdminDeleteRecord
#define SOAP_TYPE___ns1__AdminDeleteRecord (474)
/* Operation wrapper: */
struct __ns1__AdminDeleteRecord
{
public:
	_ns1__AdminDeleteRecord *ns1__AdminDeleteRecord;	/* optional element of type ns1:AdminDeleteRecord */
public:
	int soap_type() const { return 474; } /* = unique type id SOAP_TYPE___ns1__AdminDeleteRecord */
};
#endif

#ifndef SOAP_TYPE___ns1__AdminAdmitModifyLyric
#define SOAP_TYPE___ns1__AdminAdmitModifyLyric (478)
/* Operation wrapper: */
struct __ns1__AdminAdmitModifyLyric
{
public:
	_ns1__AdminAdmitModifyLyric *ns1__AdminAdmitModifyLyric;	/* optional element of type ns1:AdminAdmitModifyLyric */
public:
	int soap_type() const { return 478; } /* = unique type id SOAP_TYPE___ns1__AdminAdmitModifyLyric */
};
#endif

#ifndef SOAP_TYPE___ns1__AdminReportBlackList
#define SOAP_TYPE___ns1__AdminReportBlackList (482)
/* Operation wrapper: */
struct __ns1__AdminReportBlackList
{
public:
	_ns1__AdminReportBlackList *ns1__AdminReportBlackList;	/* optional element of type ns1:AdminReportBlackList */
public:
	int soap_type() const { return 482; } /* = unique type id SOAP_TYPE___ns1__AdminReportBlackList */
};
#endif

#ifndef SOAP_TYPE___ns1__AdminGetCountInRegister
#define SOAP_TYPE___ns1__AdminGetCountInRegister (486)
/* Operation wrapper: */
struct __ns1__AdminGetCountInRegister
{
public:
	_ns1__AdminGetCountInRegister *ns1__AdminGetCountInRegister;	/* optional element of type ns1:AdminGetCountInRegister */
public:
	int soap_type() const { return 486; } /* = unique type id SOAP_TYPE___ns1__AdminGetCountInRegister */
};
#endif

#ifndef SOAP_TYPE___ns1__AdminGetCountChecksum
#define SOAP_TYPE___ns1__AdminGetCountChecksum (490)
/* Operation wrapper: */
struct __ns1__AdminGetCountChecksum
{
public:
	_ns1__AdminGetCountChecksum *ns1__AdminGetCountChecksum;	/* optional element of type ns1:AdminGetCountChecksum */
public:
	int soap_type() const { return 490; } /* = unique type id SOAP_TYPE___ns1__AdminGetCountChecksum */
};
#endif

#ifndef SOAP_TYPE___ns1__AdminGetCountLyric
#define SOAP_TYPE___ns1__AdminGetCountLyric (494)
/* Operation wrapper: */
struct __ns1__AdminGetCountLyric
{
public:
	_ns1__AdminGetCountLyric *ns1__AdminGetCountLyric;	/* optional element of type ns1:AdminGetCountLyric */
public:
	int soap_type() const { return 494; } /* = unique type id SOAP_TYPE___ns1__AdminGetCountLyric */
};
#endif

#ifndef SOAP_TYPE___ns1__AdminGetCountModify
#define SOAP_TYPE___ns1__AdminGetCountModify (498)
/* Operation wrapper: */
struct __ns1__AdminGetCountModify
{
public:
	_ns1__AdminGetCountModify *ns1__AdminGetCountModify;	/* optional element of type ns1:AdminGetCountModify */
public:
	int soap_type() const { return 498; } /* = unique type id SOAP_TYPE___ns1__AdminGetCountModify */
};
#endif

#ifndef SOAP_TYPE___ns1__AdminGetCountReport
#define SOAP_TYPE___ns1__AdminGetCountReport (502)
/* Operation wrapper: */
struct __ns1__AdminGetCountReport
{
public:
	_ns1__AdminGetCountReport *ns1__AdminGetCountReport;	/* optional element of type ns1:AdminGetCountReport */
public:
	int soap_type() const { return 502; } /* = unique type id SOAP_TYPE___ns1__AdminGetCountReport */
};
#endif

#ifndef SOAP_TYPE___ns1__AdminGetAlbaStatistic
#define SOAP_TYPE___ns1__AdminGetAlbaStatistic (506)
/* Operation wrapper: */
struct __ns1__AdminGetAlbaStatistic
{
public:
	_ns1__AdminGetAlbaStatistic *ns1__AdminGetAlbaStatistic;	/* optional element of type ns1:AdminGetAlbaStatistic */
public:
	int soap_type() const { return 506; } /* = unique type id SOAP_TYPE___ns1__AdminGetAlbaStatistic */
};
#endif

#ifndef SOAP_TYPE___ns1__CastUploadExMetaData
#define SOAP_TYPE___ns1__CastUploadExMetaData (510)
/* Operation wrapper: */
struct __ns1__CastUploadExMetaData
{
public:
	_ns1__CastUploadExMetaData *ns1__CastUploadExMetaData;	/* optional element of type ns1:CastUploadExMetaData */
public:
	int soap_type() const { return 510; } /* = unique type id SOAP_TYPE___ns1__CastUploadExMetaData */
};
#endif

#ifndef SOAP_TYPE___ns1__CastUploadExMetaData2
#define SOAP_TYPE___ns1__CastUploadExMetaData2 (514)
/* Operation wrapper: */
struct __ns1__CastUploadExMetaData2
{
public:
	_ns1__CastUploadExMetaData2 *ns1__CastUploadExMetaData2;	/* optional element of type ns1:CastUploadExMetaData2 */
public:
	int soap_type() const { return 514; } /* = unique type id SOAP_TYPE___ns1__CastUploadExMetaData2 */
};
#endif

#ifndef SOAP_TYPE___ns1__CastUploadExMetaData3
#define SOAP_TYPE___ns1__CastUploadExMetaData3 (518)
/* Operation wrapper: */
struct __ns1__CastUploadExMetaData3
{
public:
	_ns1__CastUploadExMetaData3 *ns1__CastUploadExMetaData3;	/* optional element of type ns1:CastUploadExMetaData3 */
public:
	int soap_type() const { return 518; } /* = unique type id SOAP_TYPE___ns1__CastUploadExMetaData3 */
};
#endif

#ifndef SOAP_TYPE___ns1__CastRemoveExMetaData
#define SOAP_TYPE___ns1__CastRemoveExMetaData (522)
/* Operation wrapper: */
struct __ns1__CastRemoveExMetaData
{
public:
	_ns1__CastRemoveExMetaData *ns1__CastRemoveExMetaData;	/* optional element of type ns1:CastRemoveExMetaData */
public:
	int soap_type() const { return 522; } /* = unique type id SOAP_TYPE___ns1__CastRemoveExMetaData */
};
#endif

#ifndef SOAP_TYPE___ns1__CastGetExMetaData
#define SOAP_TYPE___ns1__CastGetExMetaData (526)
/* Operation wrapper: */
struct __ns1__CastGetExMetaData
{
public:
	_ns1__CastGetExMetaData *ns1__CastGetExMetaData;	/* optional element of type ns1:CastGetExMetaData */
public:
	int soap_type() const { return 526; } /* = unique type id SOAP_TYPE___ns1__CastGetExMetaData */
};
#endif

#ifndef SOAP_TYPE___ns1__CastGetExMetaDataList
#define SOAP_TYPE___ns1__CastGetExMetaDataList (530)
/* Operation wrapper: */
struct __ns1__CastGetExMetaDataList
{
public:
	_ns1__CastGetExMetaDataList *ns1__CastGetExMetaDataList;	/* optional element of type ns1:CastGetExMetaDataList */
public:
	int soap_type() const { return 530; } /* = unique type id SOAP_TYPE___ns1__CastGetExMetaDataList */
};
#endif

#ifndef SOAP_TYPE___ns1__CastGetExMetaDataList2
#define SOAP_TYPE___ns1__CastGetExMetaDataList2 (534)
/* Operation wrapper: */
struct __ns1__CastGetExMetaDataList2
{
public:
	_ns1__CastGetExMetaDataList2 *ns1__CastGetExMetaDataList2;	/* optional element of type ns1:CastGetExMetaDataList2 */
public:
	int soap_type() const { return 534; } /* = unique type id SOAP_TYPE___ns1__CastGetExMetaDataList2 */
};
#endif

#ifndef SOAP_TYPE___ns1__CastGetExMetaDataList3
#define SOAP_TYPE___ns1__CastGetExMetaDataList3 (538)
/* Operation wrapper: */
struct __ns1__CastGetExMetaDataList3
{
public:
	_ns1__CastGetExMetaDataList3 *ns1__CastGetExMetaDataList3;	/* optional element of type ns1:CastGetExMetaDataList3 */
public:
	int soap_type() const { return 538; } /* = unique type id SOAP_TYPE___ns1__CastGetExMetaDataList3 */
};
#endif

#ifndef SOAP_TYPE___ns1__GetBroadcastingList
#define SOAP_TYPE___ns1__GetBroadcastingList (542)
/* Operation wrapper: */
struct __ns1__GetBroadcastingList
{
public:
	_ns1__GetBroadcastingList *ns1__GetBroadcastingList;	/* optional element of type ns1:GetBroadcastingList */
public:
	int soap_type() const { return 542; } /* = unique type id SOAP_TYPE___ns1__GetBroadcastingList */
};
#endif

#ifndef SOAP_TYPE___ns1__GetBroadcastingList2
#define SOAP_TYPE___ns1__GetBroadcastingList2 (546)
/* Operation wrapper: */
struct __ns1__GetBroadcastingList2
{
public:
	_ns1__GetBroadcastingList2 *ns1__GetBroadcastingList2;	/* optional element of type ns1:GetBroadcastingList2 */
public:
	int soap_type() const { return 546; } /* = unique type id SOAP_TYPE___ns1__GetBroadcastingList2 */
};
#endif

#ifndef SOAP_TYPE___ns1__UploadForeignLyric
#define SOAP_TYPE___ns1__UploadForeignLyric (550)
/* Operation wrapper: */
struct __ns1__UploadForeignLyric
{
public:
	_ns1__UploadForeignLyric *ns1__UploadForeignLyric;	/* optional element of type ns1:UploadForeignLyric */
public:
	int soap_type() const { return 550; } /* = unique type id SOAP_TYPE___ns1__UploadForeignLyric */
};
#endif

#ifndef SOAP_TYPE___ns1__GetResembleLyricList
#define SOAP_TYPE___ns1__GetResembleLyricList (554)
/* Operation wrapper: */
struct __ns1__GetResembleLyricList
{
public:
	_ns1__GetResembleLyricList *ns1__GetResembleLyricList;	/* optional element of type ns1:GetResembleLyricList */
public:
	int soap_type() const { return 554; } /* = unique type id SOAP_TYPE___ns1__GetResembleLyricList */
};
#endif

#ifndef SOAP_TYPE___ns1__GetResembleLyricList2
#define SOAP_TYPE___ns1__GetResembleLyricList2 (558)
/* Operation wrapper: */
struct __ns1__GetResembleLyricList2
{
public:
	_ns1__GetResembleLyricList2 *ns1__GetResembleLyricList2;	/* optional element of type ns1:GetResembleLyricList2 */
public:
	int soap_type() const { return 558; } /* = unique type id SOAP_TYPE___ns1__GetResembleLyricList2 */
};
#endif

#ifndef SOAP_TYPE___ns1__GetLyricByID
#define SOAP_TYPE___ns1__GetLyricByID (562)
/* Operation wrapper: */
struct __ns1__GetLyricByID
{
public:
	_ns1__GetLyricByID *ns1__GetLyricByID;	/* optional element of type ns1:GetLyricByID */
public:
	int soap_type() const { return 562; } /* = unique type id SOAP_TYPE___ns1__GetLyricByID */
};
#endif

#ifndef SOAP_TYPE___ns1__GetLyricByID2
#define SOAP_TYPE___ns1__GetLyricByID2 (566)
/* Operation wrapper: */
struct __ns1__GetLyricByID2
{
public:
	_ns1__GetLyricByID2 *ns1__GetLyricByID2;	/* optional element of type ns1:GetLyricByID2 */
public:
	int soap_type() const { return 566; } /* = unique type id SOAP_TYPE___ns1__GetLyricByID2 */
};
#endif

#ifndef SOAP_TYPE___ns1__AdminJPNGetRightsInfoByModifyID
#define SOAP_TYPE___ns1__AdminJPNGetRightsInfoByModifyID (570)
/* Operation wrapper: */
struct __ns1__AdminJPNGetRightsInfoByModifyID
{
public:
	_ns1__AdminJPNGetRightsInfoByModifyID *ns1__AdminJPNGetRightsInfoByModifyID;	/* optional element of type ns1:AdminJPNGetRightsInfoByModifyID */
public:
	int soap_type() const { return 570; } /* = unique type id SOAP_TYPE___ns1__AdminJPNGetRightsInfoByModifyID */
};
#endif

#ifndef SOAP_TYPE___ns1__AdminJPNGetRightsInfoByLyricID
#define SOAP_TYPE___ns1__AdminJPNGetRightsInfoByLyricID (574)
/* Operation wrapper: */
struct __ns1__AdminJPNGetRightsInfoByLyricID
{
public:
	_ns1__AdminJPNGetRightsInfoByLyricID *ns1__AdminJPNGetRightsInfoByLyricID;	/* optional element of type ns1:AdminJPNGetRightsInfoByLyricID */
public:
	int soap_type() const { return 574; } /* = unique type id SOAP_TYPE___ns1__AdminJPNGetRightsInfoByLyricID */
};
#endif

#ifndef SOAP_TYPE___ns1__AdminJPNSetRightsInfo
#define SOAP_TYPE___ns1__AdminJPNSetRightsInfo (578)
/* Operation wrapper: */
struct __ns1__AdminJPNSetRightsInfo
{
public:
	_ns1__AdminJPNSetRightsInfo *ns1__AdminJPNSetRightsInfo;	/* optional element of type ns1:AdminJPNSetRightsInfo */
public:
	int soap_type() const { return 578; } /* = unique type id SOAP_TYPE___ns1__AdminJPNSetRightsInfo */
};
#endif

#ifndef SOAP_TYPE___ns1__AdminJPNSearchRightsInfoList
#define SOAP_TYPE___ns1__AdminJPNSearchRightsInfoList (582)
/* Operation wrapper: */
struct __ns1__AdminJPNSearchRightsInfoList
{
public:
	_ns1__AdminJPNSearchRightsInfoList *ns1__AdminJPNSearchRightsInfoList;	/* optional element of type ns1:AdminJPNSearchRightsInfoList */
public:
	int soap_type() const { return 582; } /* = unique type id SOAP_TYPE___ns1__AdminJPNSearchRightsInfoList */
};
#endif

#ifndef SOAP_TYPE___ns1__AdminLoginRightsJPN
#define SOAP_TYPE___ns1__AdminLoginRightsJPN (586)
/* Operation wrapper: */
struct __ns1__AdminLoginRightsJPN
{
public:
	_ns1__AdminLoginRightsJPN *ns1__AdminLoginRightsJPN;	/* optional element of type ns1:AdminLoginRightsJPN */
public:
	int soap_type() const { return 586; } /* = unique type id SOAP_TYPE___ns1__AdminLoginRightsJPN */
};
#endif

#ifndef SOAP_TYPE___ns1__GetSearchLyricCount
#define SOAP_TYPE___ns1__GetSearchLyricCount (590)
/* Operation wrapper: */
struct __ns1__GetSearchLyricCount
{
public:
	_ns1__GetSearchLyricCount *ns1__GetSearchLyricCount;	/* optional element of type ns1:GetSearchLyricCount */
public:
	int soap_type() const { return 590; } /* = unique type id SOAP_TYPE___ns1__GetSearchLyricCount */
};
#endif

#ifndef SOAP_TYPE___ns1__AdminLoginLyricMonitor
#define SOAP_TYPE___ns1__AdminLoginLyricMonitor (594)
/* Operation wrapper: */
struct __ns1__AdminLoginLyricMonitor
{
public:
	_ns1__AdminLoginLyricMonitor *ns1__AdminLoginLyricMonitor;	/* optional element of type ns1:AdminLoginLyricMonitor */
public:
	int soap_type() const { return 594; } /* = unique type id SOAP_TYPE___ns1__AdminLoginLyricMonitor */
};
#endif

#ifndef SOAP_TYPE___ns1__AdminGetLyrics
#define SOAP_TYPE___ns1__AdminGetLyrics (598)
/* Operation wrapper: */
struct __ns1__AdminGetLyrics
{
public:
	_ns1__AdminGetLyrics *ns1__AdminGetLyrics;	/* optional element of type ns1:AdminGetLyrics */
public:
	int soap_type() const { return 598; } /* = unique type id SOAP_TYPE___ns1__AdminGetLyrics */
};
#endif

#ifndef SOAP_TYPE___ns1__AdminDeleteLyrics
#define SOAP_TYPE___ns1__AdminDeleteLyrics (602)
/* Operation wrapper: */
struct __ns1__AdminDeleteLyrics
{
public:
	_ns1__AdminDeleteLyrics *ns1__AdminDeleteLyrics;	/* optional element of type ns1:AdminDeleteLyrics */
public:
	int soap_type() const { return 602; } /* = unique type id SOAP_TYPE___ns1__AdminDeleteLyrics */
};
#endif

#ifndef SOAP_TYPE___ns1__AdminGetLatestLyricID
#define SOAP_TYPE___ns1__AdminGetLatestLyricID (606)
/* Operation wrapper: */
struct __ns1__AdminGetLatestLyricID
{
public:
	_ns1__AdminGetLatestLyricID *ns1__AdminGetLatestLyricID;	/* optional element of type ns1:AdminGetLatestLyricID */
public:
	int soap_type() const { return 606; } /* = unique type id SOAP_TYPE___ns1__AdminGetLatestLyricID */
};
#endif

#ifndef SOAP_TYPE___ns1__GetMurekaInfo_
#define SOAP_TYPE___ns1__GetMurekaInfo_ (608)
/* Operation wrapper: */
struct __ns1__GetMurekaInfo_
{
public:
	_ns1__GetMurekaInfo *ns1__GetMurekaInfo;	/* optional element of type ns1:GetMurekaInfo */
public:
	int soap_type() const { return 608; } /* = unique type id SOAP_TYPE___ns1__GetMurekaInfo_ */
};
#endif

#ifndef SOAP_TYPE___ns1__GetSyncLyricBySearch_
#define SOAP_TYPE___ns1__GetSyncLyricBySearch_ (610)
/* Operation wrapper: */
struct __ns1__GetSyncLyricBySearch_
{
public:
	_ns1__GetSyncLyricBySearch *ns1__GetSyncLyricBySearch;	/* optional element of type ns1:GetSyncLyricBySearch */
public:
	int soap_type() const { return 610; } /* = unique type id SOAP_TYPE___ns1__GetSyncLyricBySearch_ */
};
#endif

#ifndef SOAP_TYPE___ns1__SetLinkLyric_
#define SOAP_TYPE___ns1__SetLinkLyric_ (612)
/* Operation wrapper: */
struct __ns1__SetLinkLyric_
{
public:
	_ns1__SetLinkLyric *ns1__SetLinkLyric;	/* optional element of type ns1:SetLinkLyric */
public:
	int soap_type() const { return 612; } /* = unique type id SOAP_TYPE___ns1__SetLinkLyric_ */
};
#endif

#ifndef SOAP_TYPE___ns1__GetResembleLyric2_
#define SOAP_TYPE___ns1__GetResembleLyric2_ (614)
/* Operation wrapper: */
struct __ns1__GetResembleLyric2_
{
public:
	_ns1__GetResembleLyric2 *ns1__GetResembleLyric2;	/* optional element of type ns1:GetResembleLyric2 */
public:
	int soap_type() const { return 614; } /* = unique type id SOAP_TYPE___ns1__GetResembleLyric2_ */
};
#endif

#ifndef SOAP_TYPE___ns1__GetResembleLyric3_
#define SOAP_TYPE___ns1__GetResembleLyric3_ (616)
/* Operation wrapper: */
struct __ns1__GetResembleLyric3_
{
public:
	_ns1__GetResembleLyric3 *ns1__GetResembleLyric3;	/* optional element of type ns1:GetResembleLyric3 */
public:
	int soap_type() const { return 616; } /* = unique type id SOAP_TYPE___ns1__GetResembleLyric3_ */
};
#endif

#ifndef SOAP_TYPE___ns1__GetResembleLyric2Count_
#define SOAP_TYPE___ns1__GetResembleLyric2Count_ (618)
/* Operation wrapper: */
struct __ns1__GetResembleLyric2Count_
{
public:
	_ns1__GetResembleLyric2Count *ns1__GetResembleLyric2Count;	/* optional element of type ns1:GetResembleLyric2Count */
public:
	int soap_type() const { return 618; } /* = unique type id SOAP_TYPE___ns1__GetResembleLyric2Count_ */
};
#endif

#ifndef SOAP_TYPE___ns1__GetResembleLyric2CountTest_
#define SOAP_TYPE___ns1__GetResembleLyric2CountTest_ (620)
/* Operation wrapper: */
struct __ns1__GetResembleLyric2CountTest_
{
public:
	_ns1__GetResembleLyric2CountTest *ns1__GetResembleLyric2CountTest;	/* optional element of type ns1:GetResembleLyric2CountTest */
public:
	int soap_type() const { return 620; } /* = unique type id SOAP_TYPE___ns1__GetResembleLyric2CountTest_ */
};
#endif

#ifndef SOAP_TYPE___ns1__UploadLyric_
#define SOAP_TYPE___ns1__UploadLyric_ (622)
/* Operation wrapper: */
struct __ns1__UploadLyric_
{
public:
	_ns1__UploadLyric *ns1__UploadLyric;	/* optional element of type ns1:UploadLyric */
public:
	int soap_type() const { return 622; } /* = unique type id SOAP_TYPE___ns1__UploadLyric_ */
};
#endif

#ifndef SOAP_TYPE___ns1__ReportFaultLyricWithComment_
#define SOAP_TYPE___ns1__ReportFaultLyricWithComment_ (624)
/* Operation wrapper: */
struct __ns1__ReportFaultLyricWithComment_
{
public:
	_ns1__ReportFaultLyricWithComment *ns1__ReportFaultLyricWithComment;	/* optional element of type ns1:ReportFaultLyricWithComment */
public:
	int soap_type() const { return 624; } /* = unique type id SOAP_TYPE___ns1__ReportFaultLyricWithComment_ */
};
#endif

#ifndef SOAP_TYPE___ns1__ReportFaultLyric2_
#define SOAP_TYPE___ns1__ReportFaultLyric2_ (626)
/* Operation wrapper: */
struct __ns1__ReportFaultLyric2_
{
public:
	_ns1__ReportFaultLyric2 *ns1__ReportFaultLyric2;	/* optional element of type ns1:ReportFaultLyric2 */
public:
	int soap_type() const { return 626; } /* = unique type id SOAP_TYPE___ns1__ReportFaultLyric2_ */
};
#endif

#ifndef SOAP_TYPE___ns1__ReportRecommendationLyric_
#define SOAP_TYPE___ns1__ReportRecommendationLyric_ (628)
/* Operation wrapper: */
struct __ns1__ReportRecommendationLyric_
{
public:
	_ns1__ReportRecommendationLyric *ns1__ReportRecommendationLyric;	/* optional element of type ns1:ReportRecommendationLyric */
public:
	int soap_type() const { return 628; } /* = unique type id SOAP_TYPE___ns1__ReportRecommendationLyric_ */
};
#endif

#ifndef SOAP_TYPE___ns1__IsReportedRecommendationLyric_
#define SOAP_TYPE___ns1__IsReportedRecommendationLyric_ (630)
/* Operation wrapper: */
struct __ns1__IsReportedRecommendationLyric_
{
public:
	_ns1__IsReportedRecommendationLyric *ns1__IsReportedRecommendationLyric;	/* optional element of type ns1:IsReportedRecommendationLyric */
public:
	int soap_type() const { return 630; } /* = unique type id SOAP_TYPE___ns1__IsReportedRecommendationLyric_ */
};
#endif

#ifndef SOAP_TYPE___ns1__IsReportedFaultLyric_
#define SOAP_TYPE___ns1__IsReportedFaultLyric_ (632)
/* Operation wrapper: */
struct __ns1__IsReportedFaultLyric_
{
public:
	_ns1__IsReportedFaultLyric *ns1__IsReportedFaultLyric;	/* optional element of type ns1:IsReportedFaultLyric */
public:
	int soap_type() const { return 632; } /* = unique type id SOAP_TYPE___ns1__IsReportedFaultLyric_ */
};
#endif

#ifndef SOAP_TYPE___ns1__GetLyric3_
#define SOAP_TYPE___ns1__GetLyric3_ (634)
/* Operation wrapper: */
struct __ns1__GetLyric3_
{
public:
	_ns1__GetLyric3 *ns1__GetLyric3;	/* optional element of type ns1:GetLyric3 */
public:
	int soap_type() const { return 634; } /* = unique type id SOAP_TYPE___ns1__GetLyric3_ */
};
#endif

#ifndef SOAP_TYPE___ns1__GetLyric4_
#define SOAP_TYPE___ns1__GetLyric4_ (636)
/* Operation wrapper: */
struct __ns1__GetLyric4_
{
public:
	_ns1__GetLyric4 *ns1__GetLyric4;	/* optional element of type ns1:GetLyric4 */
public:
	int soap_type() const { return 636; } /* = unique type id SOAP_TYPE___ns1__GetLyric4_ */
};
#endif

#ifndef SOAP_TYPE___ns1__GetLyric5_
#define SOAP_TYPE___ns1__GetLyric5_ (638)
/* Operation wrapper: */
struct __ns1__GetLyric5_
{
public:
	_ns1__GetLyric5 *ns1__GetLyric5;	/* optional element of type ns1:GetLyric5 */
public:
	int soap_type() const { return 638; } /* = unique type id SOAP_TYPE___ns1__GetLyric5_ */
};
#endif

#ifndef SOAP_TYPE___ns1__GetLyric6_
#define SOAP_TYPE___ns1__GetLyric6_ (640)
/* Operation wrapper: */
struct __ns1__GetLyric6_
{
public:
	_ns1__GetLyric6 *ns1__GetLyric6;	/* optional element of type ns1:GetLyric6 */
public:
	int soap_type() const { return 640; } /* = unique type id SOAP_TYPE___ns1__GetLyric6_ */
};
#endif

#ifndef SOAP_TYPE___ns1__GetLyric7_
#define SOAP_TYPE___ns1__GetLyric7_ (642)
/* Operation wrapper: */
struct __ns1__GetLyric7_
{
public:
	_ns1__GetLyric7 *ns1__GetLyric7;	/* optional element of type ns1:GetLyric7 */
public:
	int soap_type() const { return 642; } /* = unique type id SOAP_TYPE___ns1__GetLyric7_ */
};
#endif

#ifndef SOAP_TYPE___ns1__GetLyric8_
#define SOAP_TYPE___ns1__GetLyric8_ (644)
/* Operation wrapper: */
struct __ns1__GetLyric8_
{
public:
	_ns1__GetLyric8 *ns1__GetLyric8;	/* optional element of type ns1:GetLyric8 */
public:
	int soap_type() const { return 644; } /* = unique type id SOAP_TYPE___ns1__GetLyric8_ */
};
#endif

#ifndef SOAP_TYPE___ns1__GetSongID_
#define SOAP_TYPE___ns1__GetSongID_ (646)
/* Operation wrapper: */
struct __ns1__GetSongID_
{
public:
	_ns1__GetSongID *ns1__GetSongID;	/* optional element of type ns1:GetSongID */
public:
	int soap_type() const { return 646; } /* = unique type id SOAP_TYPE___ns1__GetSongID_ */
};
#endif

#ifndef SOAP_TYPE___ns1__AdminGetLyricList_
#define SOAP_TYPE___ns1__AdminGetLyricList_ (648)
/* Operation wrapper: */
struct __ns1__AdminGetLyricList_
{
public:
	_ns1__AdminGetLyricList *ns1__AdminGetLyricList;	/* optional element of type ns1:AdminGetLyricList */
public:
	int soap_type() const { return 648; } /* = unique type id SOAP_TYPE___ns1__AdminGetLyricList_ */
};
#endif

#ifndef SOAP_TYPE___ns1__AdminGetLyricListByID_
#define SOAP_TYPE___ns1__AdminGetLyricListByID_ (650)
/* Operation wrapper: */
struct __ns1__AdminGetLyricListByID_
{
public:
	_ns1__AdminGetLyricListByID *ns1__AdminGetLyricListByID;	/* optional element of type ns1:AdminGetLyricListByID */
public:
	int soap_type() const { return 650; } /* = unique type id SOAP_TYPE___ns1__AdminGetLyricListByID_ */
};
#endif

#ifndef SOAP_TYPE___ns1__AdminGetReportFaultList_
#define SOAP_TYPE___ns1__AdminGetReportFaultList_ (652)
/* Operation wrapper: */
struct __ns1__AdminGetReportFaultList_
{
public:
	_ns1__AdminGetReportFaultList *ns1__AdminGetReportFaultList;	/* optional element of type ns1:AdminGetReportFaultList */
public:
	int soap_type() const { return 652; } /* = unique type id SOAP_TYPE___ns1__AdminGetReportFaultList_ */
};
#endif

#ifndef SOAP_TYPE___ns1__AdminGetModifyList_
#define SOAP_TYPE___ns1__AdminGetModifyList_ (654)
/* Operation wrapper: */
struct __ns1__AdminGetModifyList_
{
public:
	_ns1__AdminGetModifyList *ns1__AdminGetModifyList;	/* optional element of type ns1:AdminGetModifyList */
public:
	int soap_type() const { return 654; } /* = unique type id SOAP_TYPE___ns1__AdminGetModifyList_ */
};
#endif

#ifndef SOAP_TYPE___ns1__AdminGetRegisterList_
#define SOAP_TYPE___ns1__AdminGetRegisterList_ (656)
/* Operation wrapper: */
struct __ns1__AdminGetRegisterList_
{
public:
	_ns1__AdminGetRegisterList *ns1__AdminGetRegisterList;	/* optional element of type ns1:AdminGetRegisterList */
public:
	int soap_type() const { return 656; } /* = unique type id SOAP_TYPE___ns1__AdminGetRegisterList_ */
};
#endif

#ifndef SOAP_TYPE___ns1__MemberAddMember_
#define SOAP_TYPE___ns1__MemberAddMember_ (658)
/* Operation wrapper: */
struct __ns1__MemberAddMember_
{
public:
	_ns1__MemberAddMember *ns1__MemberAddMember;	/* optional element of type ns1:MemberAddMember */
public:
	int soap_type() const { return 658; } /* = unique type id SOAP_TYPE___ns1__MemberAddMember_ */
};
#endif

#ifndef SOAP_TYPE___ns1__MemberModifyMember_
#define SOAP_TYPE___ns1__MemberModifyMember_ (660)
/* Operation wrapper: */
struct __ns1__MemberModifyMember_
{
public:
	_ns1__MemberModifyMember *ns1__MemberModifyMember;	/* optional element of type ns1:MemberModifyMember */
public:
	int soap_type() const { return 660; } /* = unique type id SOAP_TYPE___ns1__MemberModifyMember_ */
};
#endif

#ifndef SOAP_TYPE___ns1__MemberRemoveMember_
#define SOAP_TYPE___ns1__MemberRemoveMember_ (662)
/* Operation wrapper: */
struct __ns1__MemberRemoveMember_
{
public:
	_ns1__MemberRemoveMember *ns1__MemberRemoveMember;	/* optional element of type ns1:MemberRemoveMember */
public:
	int soap_type() const { return 662; } /* = unique type id SOAP_TYPE___ns1__MemberRemoveMember_ */
};
#endif

#ifndef SOAP_TYPE___ns1__MemberLogin_
#define SOAP_TYPE___ns1__MemberLogin_ (664)
/* Operation wrapper: */
struct __ns1__MemberLogin_
{
public:
	_ns1__MemberLogin *ns1__MemberLogin;	/* optional element of type ns1:MemberLogin */
public:
	int soap_type() const { return 664; } /* = unique type id SOAP_TYPE___ns1__MemberLogin_ */
};
#endif

#ifndef SOAP_TYPE___ns1__MemberLogout_
#define SOAP_TYPE___ns1__MemberLogout_ (666)
/* Operation wrapper: */
struct __ns1__MemberLogout_
{
public:
	_ns1__MemberLogout *ns1__MemberLogout;	/* optional element of type ns1:MemberLogout */
public:
	int soap_type() const { return 666; } /* = unique type id SOAP_TYPE___ns1__MemberLogout_ */
};
#endif

#ifndef SOAP_TYPE___ns1__MemberApplyRegistration_
#define SOAP_TYPE___ns1__MemberApplyRegistration_ (668)
/* Operation wrapper: */
struct __ns1__MemberApplyRegistration_
{
public:
	_ns1__MemberApplyRegistration *ns1__MemberApplyRegistration;	/* optional element of type ns1:MemberApplyRegistration */
public:
	int soap_type() const { return 668; } /* = unique type id SOAP_TYPE___ns1__MemberApplyRegistration_ */
};
#endif

#ifndef SOAP_TYPE___ns1__MemberModifyMemberLicense_
#define SOAP_TYPE___ns1__MemberModifyMemberLicense_ (670)
/* Operation wrapper: */
struct __ns1__MemberModifyMemberLicense_
{
public:
	_ns1__MemberModifyMemberLicense *ns1__MemberModifyMemberLicense;	/* optional element of type ns1:MemberModifyMemberLicense */
public:
	int soap_type() const { return 670; } /* = unique type id SOAP_TYPE___ns1__MemberModifyMemberLicense_ */
};
#endif

#ifndef SOAP_TYPE___ns1__MemberGetMemberList_
#define SOAP_TYPE___ns1__MemberGetMemberList_ (672)
/* Operation wrapper: */
struct __ns1__MemberGetMemberList_
{
public:
	_ns1__MemberGetMemberList *ns1__MemberGetMemberList;	/* optional element of type ns1:MemberGetMemberList */
public:
	int soap_type() const { return 672; } /* = unique type id SOAP_TYPE___ns1__MemberGetMemberList_ */
};
#endif

#ifndef SOAP_TYPE___ns1__MemberGetMemberLicenseList_
#define SOAP_TYPE___ns1__MemberGetMemberLicenseList_ (674)
/* Operation wrapper: */
struct __ns1__MemberGetMemberLicenseList_
{
public:
	_ns1__MemberGetMemberLicenseList *ns1__MemberGetMemberLicenseList;	/* optional element of type ns1:MemberGetMemberLicenseList */
public:
	int soap_type() const { return 674; } /* = unique type id SOAP_TYPE___ns1__MemberGetMemberLicenseList_ */
};
#endif

#ifndef SOAP_TYPE___ns1__AdminDeleteRecord_
#define SOAP_TYPE___ns1__AdminDeleteRecord_ (676)
/* Operation wrapper: */
struct __ns1__AdminDeleteRecord_
{
public:
	_ns1__AdminDeleteRecord *ns1__AdminDeleteRecord;	/* optional element of type ns1:AdminDeleteRecord */
public:
	int soap_type() const { return 676; } /* = unique type id SOAP_TYPE___ns1__AdminDeleteRecord_ */
};
#endif

#ifndef SOAP_TYPE___ns1__AdminAdmitModifyLyric_
#define SOAP_TYPE___ns1__AdminAdmitModifyLyric_ (678)
/* Operation wrapper: */
struct __ns1__AdminAdmitModifyLyric_
{
public:
	_ns1__AdminAdmitModifyLyric *ns1__AdminAdmitModifyLyric;	/* optional element of type ns1:AdminAdmitModifyLyric */
public:
	int soap_type() const { return 678; } /* = unique type id SOAP_TYPE___ns1__AdminAdmitModifyLyric_ */
};
#endif

#ifndef SOAP_TYPE___ns1__AdminReportBlackList_
#define SOAP_TYPE___ns1__AdminReportBlackList_ (680)
/* Operation wrapper: */
struct __ns1__AdminReportBlackList_
{
public:
	_ns1__AdminReportBlackList *ns1__AdminReportBlackList;	/* optional element of type ns1:AdminReportBlackList */
public:
	int soap_type() const { return 680; } /* = unique type id SOAP_TYPE___ns1__AdminReportBlackList_ */
};
#endif

#ifndef SOAP_TYPE___ns1__AdminGetCountInRegister_
#define SOAP_TYPE___ns1__AdminGetCountInRegister_ (682)
/* Operation wrapper: */
struct __ns1__AdminGetCountInRegister_
{
public:
	_ns1__AdminGetCountInRegister *ns1__AdminGetCountInRegister;	/* optional element of type ns1:AdminGetCountInRegister */
public:
	int soap_type() const { return 682; } /* = unique type id SOAP_TYPE___ns1__AdminGetCountInRegister_ */
};
#endif

#ifndef SOAP_TYPE___ns1__AdminGetCountChecksum_
#define SOAP_TYPE___ns1__AdminGetCountChecksum_ (684)
/* Operation wrapper: */
struct __ns1__AdminGetCountChecksum_
{
public:
	_ns1__AdminGetCountChecksum *ns1__AdminGetCountChecksum;	/* optional element of type ns1:AdminGetCountChecksum */
public:
	int soap_type() const { return 684; } /* = unique type id SOAP_TYPE___ns1__AdminGetCountChecksum_ */
};
#endif

#ifndef SOAP_TYPE___ns1__AdminGetCountLyric_
#define SOAP_TYPE___ns1__AdminGetCountLyric_ (686)
/* Operation wrapper: */
struct __ns1__AdminGetCountLyric_
{
public:
	_ns1__AdminGetCountLyric *ns1__AdminGetCountLyric;	/* optional element of type ns1:AdminGetCountLyric */
public:
	int soap_type() const { return 686; } /* = unique type id SOAP_TYPE___ns1__AdminGetCountLyric_ */
};
#endif

#ifndef SOAP_TYPE___ns1__AdminGetCountModify_
#define SOAP_TYPE___ns1__AdminGetCountModify_ (688)
/* Operation wrapper: */
struct __ns1__AdminGetCountModify_
{
public:
	_ns1__AdminGetCountModify *ns1__AdminGetCountModify;	/* optional element of type ns1:AdminGetCountModify */
public:
	int soap_type() const { return 688; } /* = unique type id SOAP_TYPE___ns1__AdminGetCountModify_ */
};
#endif

#ifndef SOAP_TYPE___ns1__AdminGetCountReport_
#define SOAP_TYPE___ns1__AdminGetCountReport_ (690)
/* Operation wrapper: */
struct __ns1__AdminGetCountReport_
{
public:
	_ns1__AdminGetCountReport *ns1__AdminGetCountReport;	/* optional element of type ns1:AdminGetCountReport */
public:
	int soap_type() const { return 690; } /* = unique type id SOAP_TYPE___ns1__AdminGetCountReport_ */
};
#endif

#ifndef SOAP_TYPE___ns1__AdminGetAlbaStatistic_
#define SOAP_TYPE___ns1__AdminGetAlbaStatistic_ (692)
/* Operation wrapper: */
struct __ns1__AdminGetAlbaStatistic_
{
public:
	_ns1__AdminGetAlbaStatistic *ns1__AdminGetAlbaStatistic;	/* optional element of type ns1:AdminGetAlbaStatistic */
public:
	int soap_type() const { return 692; } /* = unique type id SOAP_TYPE___ns1__AdminGetAlbaStatistic_ */
};
#endif

#ifndef SOAP_TYPE___ns1__CastUploadExMetaData_
#define SOAP_TYPE___ns1__CastUploadExMetaData_ (694)
/* Operation wrapper: */
struct __ns1__CastUploadExMetaData_
{
public:
	_ns1__CastUploadExMetaData *ns1__CastUploadExMetaData;	/* optional element of type ns1:CastUploadExMetaData */
public:
	int soap_type() const { return 694; } /* = unique type id SOAP_TYPE___ns1__CastUploadExMetaData_ */
};
#endif

#ifndef SOAP_TYPE___ns1__CastUploadExMetaData2_
#define SOAP_TYPE___ns1__CastUploadExMetaData2_ (696)
/* Operation wrapper: */
struct __ns1__CastUploadExMetaData2_
{
public:
	_ns1__CastUploadExMetaData2 *ns1__CastUploadExMetaData2;	/* optional element of type ns1:CastUploadExMetaData2 */
public:
	int soap_type() const { return 696; } /* = unique type id SOAP_TYPE___ns1__CastUploadExMetaData2_ */
};
#endif

#ifndef SOAP_TYPE___ns1__CastUploadExMetaData3_
#define SOAP_TYPE___ns1__CastUploadExMetaData3_ (698)
/* Operation wrapper: */
struct __ns1__CastUploadExMetaData3_
{
public:
	_ns1__CastUploadExMetaData3 *ns1__CastUploadExMetaData3;	/* optional element of type ns1:CastUploadExMetaData3 */
public:
	int soap_type() const { return 698; } /* = unique type id SOAP_TYPE___ns1__CastUploadExMetaData3_ */
};
#endif

#ifndef SOAP_TYPE___ns1__CastRemoveExMetaData_
#define SOAP_TYPE___ns1__CastRemoveExMetaData_ (700)
/* Operation wrapper: */
struct __ns1__CastRemoveExMetaData_
{
public:
	_ns1__CastRemoveExMetaData *ns1__CastRemoveExMetaData;	/* optional element of type ns1:CastRemoveExMetaData */
public:
	int soap_type() const { return 700; } /* = unique type id SOAP_TYPE___ns1__CastRemoveExMetaData_ */
};
#endif

#ifndef SOAP_TYPE___ns1__CastGetExMetaData_
#define SOAP_TYPE___ns1__CastGetExMetaData_ (702)
/* Operation wrapper: */
struct __ns1__CastGetExMetaData_
{
public:
	_ns1__CastGetExMetaData *ns1__CastGetExMetaData;	/* optional element of type ns1:CastGetExMetaData */
public:
	int soap_type() const { return 702; } /* = unique type id SOAP_TYPE___ns1__CastGetExMetaData_ */
};
#endif

#ifndef SOAP_TYPE___ns1__CastGetExMetaDataList_
#define SOAP_TYPE___ns1__CastGetExMetaDataList_ (704)
/* Operation wrapper: */
struct __ns1__CastGetExMetaDataList_
{
public:
	_ns1__CastGetExMetaDataList *ns1__CastGetExMetaDataList;	/* optional element of type ns1:CastGetExMetaDataList */
public:
	int soap_type() const { return 704; } /* = unique type id SOAP_TYPE___ns1__CastGetExMetaDataList_ */
};
#endif

#ifndef SOAP_TYPE___ns1__CastGetExMetaDataList2_
#define SOAP_TYPE___ns1__CastGetExMetaDataList2_ (706)
/* Operation wrapper: */
struct __ns1__CastGetExMetaDataList2_
{
public:
	_ns1__CastGetExMetaDataList2 *ns1__CastGetExMetaDataList2;	/* optional element of type ns1:CastGetExMetaDataList2 */
public:
	int soap_type() const { return 706; } /* = unique type id SOAP_TYPE___ns1__CastGetExMetaDataList2_ */
};
#endif

#ifndef SOAP_TYPE___ns1__CastGetExMetaDataList3_
#define SOAP_TYPE___ns1__CastGetExMetaDataList3_ (708)
/* Operation wrapper: */
struct __ns1__CastGetExMetaDataList3_
{
public:
	_ns1__CastGetExMetaDataList3 *ns1__CastGetExMetaDataList3;	/* optional element of type ns1:CastGetExMetaDataList3 */
public:
	int soap_type() const { return 708; } /* = unique type id SOAP_TYPE___ns1__CastGetExMetaDataList3_ */
};
#endif

#ifndef SOAP_TYPE___ns1__GetBroadcastingList_
#define SOAP_TYPE___ns1__GetBroadcastingList_ (710)
/* Operation wrapper: */
struct __ns1__GetBroadcastingList_
{
public:
	_ns1__GetBroadcastingList *ns1__GetBroadcastingList;	/* optional element of type ns1:GetBroadcastingList */
public:
	int soap_type() const { return 710; } /* = unique type id SOAP_TYPE___ns1__GetBroadcastingList_ */
};
#endif

#ifndef SOAP_TYPE___ns1__GetBroadcastingList2_
#define SOAP_TYPE___ns1__GetBroadcastingList2_ (712)
/* Operation wrapper: */
struct __ns1__GetBroadcastingList2_
{
public:
	_ns1__GetBroadcastingList2 *ns1__GetBroadcastingList2;	/* optional element of type ns1:GetBroadcastingList2 */
public:
	int soap_type() const { return 712; } /* = unique type id SOAP_TYPE___ns1__GetBroadcastingList2_ */
};
#endif

#ifndef SOAP_TYPE___ns1__UploadForeignLyric_
#define SOAP_TYPE___ns1__UploadForeignLyric_ (714)
/* Operation wrapper: */
struct __ns1__UploadForeignLyric_
{
public:
	_ns1__UploadForeignLyric *ns1__UploadForeignLyric;	/* optional element of type ns1:UploadForeignLyric */
public:
	int soap_type() const { return 714; } /* = unique type id SOAP_TYPE___ns1__UploadForeignLyric_ */
};
#endif

#ifndef SOAP_TYPE___ns1__GetResembleLyricList_
#define SOAP_TYPE___ns1__GetResembleLyricList_ (716)
/* Operation wrapper: */
struct __ns1__GetResembleLyricList_
{
public:
	_ns1__GetResembleLyricList *ns1__GetResembleLyricList;	/* optional element of type ns1:GetResembleLyricList */
public:
	int soap_type() const { return 716; } /* = unique type id SOAP_TYPE___ns1__GetResembleLyricList_ */
};
#endif

#ifndef SOAP_TYPE___ns1__GetResembleLyricList2_
#define SOAP_TYPE___ns1__GetResembleLyricList2_ (718)
/* Operation wrapper: */
struct __ns1__GetResembleLyricList2_
{
public:
	_ns1__GetResembleLyricList2 *ns1__GetResembleLyricList2;	/* optional element of type ns1:GetResembleLyricList2 */
public:
	int soap_type() const { return 718; } /* = unique type id SOAP_TYPE___ns1__GetResembleLyricList2_ */
};
#endif

#ifndef SOAP_TYPE___ns1__GetLyricByID_
#define SOAP_TYPE___ns1__GetLyricByID_ (720)
/* Operation wrapper: */
struct __ns1__GetLyricByID_
{
public:
	_ns1__GetLyricByID *ns1__GetLyricByID;	/* optional element of type ns1:GetLyricByID */
public:
	int soap_type() const { return 720; } /* = unique type id SOAP_TYPE___ns1__GetLyricByID_ */
};
#endif

#ifndef SOAP_TYPE___ns1__GetLyricByID2_
#define SOAP_TYPE___ns1__GetLyricByID2_ (722)
/* Operation wrapper: */
struct __ns1__GetLyricByID2_
{
public:
	_ns1__GetLyricByID2 *ns1__GetLyricByID2;	/* optional element of type ns1:GetLyricByID2 */
public:
	int soap_type() const { return 722; } /* = unique type id SOAP_TYPE___ns1__GetLyricByID2_ */
};
#endif

#ifndef SOAP_TYPE___ns1__AdminJPNGetRightsInfoByModifyID_
#define SOAP_TYPE___ns1__AdminJPNGetRightsInfoByModifyID_ (724)
/* Operation wrapper: */
struct __ns1__AdminJPNGetRightsInfoByModifyID_
{
public:
	_ns1__AdminJPNGetRightsInfoByModifyID *ns1__AdminJPNGetRightsInfoByModifyID;	/* optional element of type ns1:AdminJPNGetRightsInfoByModifyID */
public:
	int soap_type() const { return 724; } /* = unique type id SOAP_TYPE___ns1__AdminJPNGetRightsInfoByModifyID_ */
};
#endif

#ifndef SOAP_TYPE___ns1__AdminJPNGetRightsInfoByLyricID_
#define SOAP_TYPE___ns1__AdminJPNGetRightsInfoByLyricID_ (726)
/* Operation wrapper: */
struct __ns1__AdminJPNGetRightsInfoByLyricID_
{
public:
	_ns1__AdminJPNGetRightsInfoByLyricID *ns1__AdminJPNGetRightsInfoByLyricID;	/* optional element of type ns1:AdminJPNGetRightsInfoByLyricID */
public:
	int soap_type() const { return 726; } /* = unique type id SOAP_TYPE___ns1__AdminJPNGetRightsInfoByLyricID_ */
};
#endif

#ifndef SOAP_TYPE___ns1__AdminJPNSetRightsInfo_
#define SOAP_TYPE___ns1__AdminJPNSetRightsInfo_ (728)
/* Operation wrapper: */
struct __ns1__AdminJPNSetRightsInfo_
{
public:
	_ns1__AdminJPNSetRightsInfo *ns1__AdminJPNSetRightsInfo;	/* optional element of type ns1:AdminJPNSetRightsInfo */
public:
	int soap_type() const { return 728; } /* = unique type id SOAP_TYPE___ns1__AdminJPNSetRightsInfo_ */
};
#endif

#ifndef SOAP_TYPE___ns1__AdminJPNSearchRightsInfoList_
#define SOAP_TYPE___ns1__AdminJPNSearchRightsInfoList_ (730)
/* Operation wrapper: */
struct __ns1__AdminJPNSearchRightsInfoList_
{
public:
	_ns1__AdminJPNSearchRightsInfoList *ns1__AdminJPNSearchRightsInfoList;	/* optional element of type ns1:AdminJPNSearchRightsInfoList */
public:
	int soap_type() const { return 730; } /* = unique type id SOAP_TYPE___ns1__AdminJPNSearchRightsInfoList_ */
};
#endif

#ifndef SOAP_TYPE___ns1__AdminLoginRightsJPN_
#define SOAP_TYPE___ns1__AdminLoginRightsJPN_ (732)
/* Operation wrapper: */
struct __ns1__AdminLoginRightsJPN_
{
public:
	_ns1__AdminLoginRightsJPN *ns1__AdminLoginRightsJPN;	/* optional element of type ns1:AdminLoginRightsJPN */
public:
	int soap_type() const { return 732; } /* = unique type id SOAP_TYPE___ns1__AdminLoginRightsJPN_ */
};
#endif

#ifndef SOAP_TYPE___ns1__GetSearchLyricCount_
#define SOAP_TYPE___ns1__GetSearchLyricCount_ (734)
/* Operation wrapper: */
struct __ns1__GetSearchLyricCount_
{
public:
	_ns1__GetSearchLyricCount *ns1__GetSearchLyricCount;	/* optional element of type ns1:GetSearchLyricCount */
public:
	int soap_type() const { return 734; } /* = unique type id SOAP_TYPE___ns1__GetSearchLyricCount_ */
};
#endif

#ifndef SOAP_TYPE___ns1__AdminLoginLyricMonitor_
#define SOAP_TYPE___ns1__AdminLoginLyricMonitor_ (736)
/* Operation wrapper: */
struct __ns1__AdminLoginLyricMonitor_
{
public:
	_ns1__AdminLoginLyricMonitor *ns1__AdminLoginLyricMonitor;	/* optional element of type ns1:AdminLoginLyricMonitor */
public:
	int soap_type() const { return 736; } /* = unique type id SOAP_TYPE___ns1__AdminLoginLyricMonitor_ */
};
#endif

#ifndef SOAP_TYPE___ns1__AdminGetLyrics_
#define SOAP_TYPE___ns1__AdminGetLyrics_ (738)
/* Operation wrapper: */
struct __ns1__AdminGetLyrics_
{
public:
	_ns1__AdminGetLyrics *ns1__AdminGetLyrics;	/* optional element of type ns1:AdminGetLyrics */
public:
	int soap_type() const { return 738; } /* = unique type id SOAP_TYPE___ns1__AdminGetLyrics_ */
};
#endif

#ifndef SOAP_TYPE___ns1__AdminDeleteLyrics_
#define SOAP_TYPE___ns1__AdminDeleteLyrics_ (740)
/* Operation wrapper: */
struct __ns1__AdminDeleteLyrics_
{
public:
	_ns1__AdminDeleteLyrics *ns1__AdminDeleteLyrics;	/* optional element of type ns1:AdminDeleteLyrics */
public:
	int soap_type() const { return 740; } /* = unique type id SOAP_TYPE___ns1__AdminDeleteLyrics_ */
};
#endif

#ifndef SOAP_TYPE___ns1__AdminGetLatestLyricID_
#define SOAP_TYPE___ns1__AdminGetLatestLyricID_ (742)
/* Operation wrapper: */
struct __ns1__AdminGetLatestLyricID_
{
public:
	_ns1__AdminGetLatestLyricID *ns1__AdminGetLatestLyricID;	/* optional element of type ns1:AdminGetLatestLyricID */
public:
	int soap_type() const { return 742; } /* = unique type id SOAP_TYPE___ns1__AdminGetLatestLyricID_ */
};
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (743)
/* SOAP Header: */
struct SOAP_ENV__Header
{
public:
	int soap_type() const { return 743; } /* = unique type id SOAP_TYPE_SOAP_ENV__Header */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (744)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
public:
	int soap_type() const { return 744; } /* = unique type id SOAP_TYPE_SOAP_ENV__Code */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (746)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	char *__any;
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
public:
	int soap_type() const { return 746; } /* = unique type id SOAP_TYPE_SOAP_ENV__Detail */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (749)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 749; } /* = unique type id SOAP_TYPE_SOAP_ENV__Reason */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (750)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
public:
	int soap_type() const { return 750; } /* = unique type id SOAP_TYPE_SOAP_ENV__Fault */
};
#endif

#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif

#ifndef SOAP_TYPE_xsd__unsignedByte
#define SOAP_TYPE_xsd__unsignedByte (13)
typedef unsigned char xsd__unsignedByte;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


#endif

/* End of AlsongAPIStub.h */
